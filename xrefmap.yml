### YamlMime:XRefMap
sorted: true
references:
- uid: BrightChain.Attributes
  name: BrightChain.Attributes
  href: api/BrightChain.Attributes.html
  commentId: N:BrightChain.Attributes
  fullName: BrightChain.Attributes
  nameWithType: BrightChain.Attributes
- uid: BrightChain.Attributes.BrightChainMetadataAttribute
  name: BrightChainMetadataAttribute
  href: api/BrightChain.Attributes.BrightChainMetadataAttribute.html
  commentId: T:BrightChain.Attributes.BrightChainMetadataAttribute
  fullName: BrightChain.Attributes.BrightChainMetadataAttribute
  nameWithType: BrightChainMetadataAttribute
- uid: BrightChain.Attributes.BrightChainMetadataAttribute.#ctor
  name: BrightChainMetadataAttribute()
  href: api/BrightChain.Attributes.BrightChainMetadataAttribute.html#BrightChain_Attributes_BrightChainMetadataAttribute__ctor
  commentId: M:BrightChain.Attributes.BrightChainMetadataAttribute.#ctor
  fullName: BrightChain.Attributes.BrightChainMetadataAttribute.BrightChainMetadataAttribute()
  nameWithType: BrightChainMetadataAttribute.BrightChainMetadataAttribute()
- uid: BrightChain.Attributes.BrightChainMetadataAttribute.#ctor*
  name: BrightChainMetadataAttribute
  href: api/BrightChain.Attributes.BrightChainMetadataAttribute.html#BrightChain_Attributes_BrightChainMetadataAttribute__ctor_
  commentId: Overload:BrightChain.Attributes.BrightChainMetadataAttribute.#ctor
  isSpec: "True"
  fullName: BrightChain.Attributes.BrightChainMetadataAttribute.BrightChainMetadataAttribute
  nameWithType: BrightChainMetadataAttribute.BrightChainMetadataAttribute
- uid: BrightChain.Enumerations
  name: BrightChain.Enumerations
  href: api/BrightChain.Enumerations.html
  commentId: N:BrightChain.Enumerations
  fullName: BrightChain.Enumerations
  nameWithType: BrightChain.Enumerations
- uid: BrightChain.Enumerations.BlockSize
  name: BlockSize
  href: api/BrightChain.Enumerations.BlockSize.html
  commentId: T:BrightChain.Enumerations.BlockSize
  fullName: BrightChain.Enumerations.BlockSize
  nameWithType: BlockSize
- uid: BrightChain.Enumerations.BlockSize.Large
  name: Large
  href: api/BrightChain.Enumerations.BlockSize.html#BrightChain_Enumerations_BlockSize_Large
  commentId: F:BrightChain.Enumerations.BlockSize.Large
  fullName: BrightChain.Enumerations.BlockSize.Large
  nameWithType: BlockSize.Large
- uid: BrightChain.Enumerations.BlockSize.Medium
  name: Medium
  href: api/BrightChain.Enumerations.BlockSize.html#BrightChain_Enumerations_BlockSize_Medium
  commentId: F:BrightChain.Enumerations.BlockSize.Medium
  fullName: BrightChain.Enumerations.BlockSize.Medium
  nameWithType: BlockSize.Medium
- uid: BrightChain.Enumerations.BlockSize.Message
  name: Message
  href: api/BrightChain.Enumerations.BlockSize.html#BrightChain_Enumerations_BlockSize_Message
  commentId: F:BrightChain.Enumerations.BlockSize.Message
  fullName: BrightChain.Enumerations.BlockSize.Message
  nameWithType: BlockSize.Message
- uid: BrightChain.Enumerations.BlockSize.Small
  name: Small
  href: api/BrightChain.Enumerations.BlockSize.html#BrightChain_Enumerations_BlockSize_Small
  commentId: F:BrightChain.Enumerations.BlockSize.Small
  fullName: BrightChain.Enumerations.BlockSize.Small
  nameWithType: BlockSize.Small
- uid: BrightChain.Enumerations.BlockSize.Tiny
  name: Tiny
  href: api/BrightChain.Enumerations.BlockSize.html#BrightChain_Enumerations_BlockSize_Tiny
  commentId: F:BrightChain.Enumerations.BlockSize.Tiny
  fullName: BrightChain.Enumerations.BlockSize.Tiny
  nameWithType: BlockSize.Tiny
- uid: BrightChain.Enumerations.BlockSize.Unknown
  name: Unknown
  href: api/BrightChain.Enumerations.BlockSize.html#BrightChain_Enumerations_BlockSize_Unknown
  commentId: F:BrightChain.Enumerations.BlockSize.Unknown
  fullName: BrightChain.Enumerations.BlockSize.Unknown
  nameWithType: BlockSize.Unknown
- uid: BrightChain.Enumerations.RedundancyContractType
  name: RedundancyContractType
  href: api/BrightChain.Enumerations.RedundancyContractType.html
  commentId: T:BrightChain.Enumerations.RedundancyContractType
  fullName: BrightChain.Enumerations.RedundancyContractType
  nameWithType: RedundancyContractType
- uid: BrightChain.Enumerations.RedundancyContractType.HeapAuto
  name: HeapAuto
  href: api/BrightChain.Enumerations.RedundancyContractType.html#BrightChain_Enumerations_RedundancyContractType_HeapAuto
  commentId: F:BrightChain.Enumerations.RedundancyContractType.HeapAuto
  fullName: BrightChain.Enumerations.RedundancyContractType.HeapAuto
  nameWithType: RedundancyContractType.HeapAuto
- uid: BrightChain.Enumerations.RedundancyContractType.HeapHighPriority
  name: HeapHighPriority
  href: api/BrightChain.Enumerations.RedundancyContractType.html#BrightChain_Enumerations_RedundancyContractType_HeapHighPriority
  commentId: F:BrightChain.Enumerations.RedundancyContractType.HeapHighPriority
  fullName: BrightChain.Enumerations.RedundancyContractType.HeapHighPriority
  nameWithType: RedundancyContractType.HeapHighPriority
- uid: BrightChain.Enumerations.RedundancyContractType.HeapLowPriority
  name: HeapLowPriority
  href: api/BrightChain.Enumerations.RedundancyContractType.html#BrightChain_Enumerations_RedundancyContractType_HeapLowPriority
  commentId: F:BrightChain.Enumerations.RedundancyContractType.HeapLowPriority
  fullName: BrightChain.Enumerations.RedundancyContractType.HeapLowPriority
  nameWithType: RedundancyContractType.HeapLowPriority
- uid: BrightChain.Enumerations.RedundancyContractType.LocalMirror
  name: LocalMirror
  href: api/BrightChain.Enumerations.RedundancyContractType.html#BrightChain_Enumerations_RedundancyContractType_LocalMirror
  commentId: F:BrightChain.Enumerations.RedundancyContractType.LocalMirror
  fullName: BrightChain.Enumerations.RedundancyContractType.LocalMirror
  nameWithType: RedundancyContractType.LocalMirror
- uid: BrightChain.Enumerations.RedundancyContractType.LocalNone
  name: LocalNone
  href: api/BrightChain.Enumerations.RedundancyContractType.html#BrightChain_Enumerations_RedundancyContractType_LocalNone
  commentId: F:BrightChain.Enumerations.RedundancyContractType.LocalNone
  fullName: BrightChain.Enumerations.RedundancyContractType.LocalNone
  nameWithType: RedundancyContractType.LocalNone
- uid: BrightChain.Exceptions
  name: BrightChain.Exceptions
  href: api/BrightChain.Exceptions.html
  commentId: N:BrightChain.Exceptions
  fullName: BrightChain.Exceptions
  nameWithType: BrightChain.Exceptions
- uid: BrightChain.Exceptions.BrightChainException
  name: BrightChainException
  href: api/BrightChain.Exceptions.BrightChainException.html
  commentId: T:BrightChain.Exceptions.BrightChainException
  fullName: BrightChain.Exceptions.BrightChainException
  nameWithType: BrightChainException
- uid: BrightChain.Exceptions.BrightChainException.#ctor(System.String)
  name: BrightChainException(String)
  href: api/BrightChain.Exceptions.BrightChainException.html#BrightChain_Exceptions_BrightChainException__ctor_System_String_
  commentId: M:BrightChain.Exceptions.BrightChainException.#ctor(System.String)
  fullName: BrightChain.Exceptions.BrightChainException.BrightChainException(System.String)
  nameWithType: BrightChainException.BrightChainException(String)
- uid: BrightChain.Exceptions.BrightChainException.#ctor*
  name: BrightChainException
  href: api/BrightChain.Exceptions.BrightChainException.html#BrightChain_Exceptions_BrightChainException__ctor_
  commentId: Overload:BrightChain.Exceptions.BrightChainException.#ctor
  isSpec: "True"
  fullName: BrightChain.Exceptions.BrightChainException.BrightChainException
  nameWithType: BrightChainException.BrightChainException
- uid: BrightChain.Exceptions.BrightChainValidationException
  name: BrightChainValidationException
  href: api/BrightChain.Exceptions.BrightChainValidationException.html
  commentId: T:BrightChain.Exceptions.BrightChainValidationException
  fullName: BrightChain.Exceptions.BrightChainValidationException
  nameWithType: BrightChainValidationException
- uid: BrightChain.Exceptions.BrightChainValidationException.#ctor(System.String,System.String)
  name: BrightChainValidationException(String, String)
  href: api/BrightChain.Exceptions.BrightChainValidationException.html#BrightChain_Exceptions_BrightChainValidationException__ctor_System_String_System_String_
  commentId: M:BrightChain.Exceptions.BrightChainValidationException.#ctor(System.String,System.String)
  fullName: BrightChain.Exceptions.BrightChainValidationException.BrightChainValidationException(System.String, System.String)
  nameWithType: BrightChainValidationException.BrightChainValidationException(String, String)
- uid: BrightChain.Exceptions.BrightChainValidationException.#ctor*
  name: BrightChainValidationException
  href: api/BrightChain.Exceptions.BrightChainValidationException.html#BrightChain_Exceptions_BrightChainValidationException__ctor_
  commentId: Overload:BrightChain.Exceptions.BrightChainValidationException.#ctor
  isSpec: "True"
  fullName: BrightChain.Exceptions.BrightChainValidationException.BrightChainValidationException
  nameWithType: BrightChainValidationException.BrightChainValidationException
- uid: BrightChain.Exceptions.BrightChainValidationException.Element
  name: Element
  href: api/BrightChain.Exceptions.BrightChainValidationException.html#BrightChain_Exceptions_BrightChainValidationException_Element
  commentId: P:BrightChain.Exceptions.BrightChainValidationException.Element
  fullName: BrightChain.Exceptions.BrightChainValidationException.Element
  nameWithType: BrightChainValidationException.Element
- uid: BrightChain.Exceptions.BrightChainValidationException.Element*
  name: Element
  href: api/BrightChain.Exceptions.BrightChainValidationException.html#BrightChain_Exceptions_BrightChainValidationException_Element_
  commentId: Overload:BrightChain.Exceptions.BrightChainValidationException.Element
  isSpec: "True"
  fullName: BrightChain.Exceptions.BrightChainValidationException.Element
  nameWithType: BrightChainValidationException.Element
- uid: BrightChain.Extensions
  name: BrightChain.Extensions
  href: api/BrightChain.Extensions.html
  commentId: N:BrightChain.Extensions
  fullName: BrightChain.Extensions
  nameWithType: BrightChain.Extensions
- uid: BrightChain.Extensions.BlockMetadataExtensions
  name: BlockMetadataExtensions
  href: api/BrightChain.Extensions.BlockMetadataExtensions.html
  commentId: T:BrightChain.Extensions.BlockMetadataExtensions
  fullName: BrightChain.Extensions.BlockMetadataExtensions
  nameWithType: BlockMetadataExtensions
- uid: BrightChain.Extensions.BlockMetadataExtensions.MetaDataBytes(BrightChain.Models.Blocks.Block)
  name: MetaDataBytes(Block)
  href: api/BrightChain.Extensions.BlockMetadataExtensions.html#BrightChain_Extensions_BlockMetadataExtensions_MetaDataBytes_BrightChain_Models_Blocks_Block_
  commentId: M:BrightChain.Extensions.BlockMetadataExtensions.MetaDataBytes(BrightChain.Models.Blocks.Block)
  fullName: BrightChain.Extensions.BlockMetadataExtensions.MetaDataBytes(BrightChain.Models.Blocks.Block)
  nameWithType: BlockMetadataExtensions.MetaDataBytes(Block)
- uid: BrightChain.Extensions.BlockMetadataExtensions.MetaDataBytes*
  name: MetaDataBytes
  href: api/BrightChain.Extensions.BlockMetadataExtensions.html#BrightChain_Extensions_BlockMetadataExtensions_MetaDataBytes_
  commentId: Overload:BrightChain.Extensions.BlockMetadataExtensions.MetaDataBytes
  isSpec: "True"
  fullName: BrightChain.Extensions.BlockMetadataExtensions.MetaDataBytes
  nameWithType: BlockMetadataExtensions.MetaDataBytes
- uid: BrightChain.Extensions.BlockMetadataExtensions.RestoreMetaDataFromBytes(BrightChain.Models.Blocks.Block,System.ReadOnlyMemory{System.Byte})
  name: RestoreMetaDataFromBytes(Block, ReadOnlyMemory<Byte>)
  href: api/BrightChain.Extensions.BlockMetadataExtensions.html#BrightChain_Extensions_BlockMetadataExtensions_RestoreMetaDataFromBytes_BrightChain_Models_Blocks_Block_System_ReadOnlyMemory_System_Byte__
  commentId: M:BrightChain.Extensions.BlockMetadataExtensions.RestoreMetaDataFromBytes(BrightChain.Models.Blocks.Block,System.ReadOnlyMemory{System.Byte})
  name.vb: RestoreMetaDataFromBytes(Block, ReadOnlyMemory(Of Byte))
  fullName: BrightChain.Extensions.BlockMetadataExtensions.RestoreMetaDataFromBytes(BrightChain.Models.Blocks.Block, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: BrightChain.Extensions.BlockMetadataExtensions.RestoreMetaDataFromBytes(BrightChain.Models.Blocks.Block, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: BlockMetadataExtensions.RestoreMetaDataFromBytes(Block, ReadOnlyMemory<Byte>)
  nameWithType.vb: BlockMetadataExtensions.RestoreMetaDataFromBytes(Block, ReadOnlyMemory(Of Byte))
- uid: BrightChain.Extensions.BlockMetadataExtensions.RestoreMetaDataFromBytes*
  name: RestoreMetaDataFromBytes
  href: api/BrightChain.Extensions.BlockMetadataExtensions.html#BrightChain_Extensions_BlockMetadataExtensions_RestoreMetaDataFromBytes_
  commentId: Overload:BrightChain.Extensions.BlockMetadataExtensions.RestoreMetaDataFromBytes
  isSpec: "True"
  fullName: BrightChain.Extensions.BlockMetadataExtensions.RestoreMetaDataFromBytes
  nameWithType: BlockMetadataExtensions.RestoreMetaDataFromBytes
- uid: BrightChain.Factories
  name: BrightChain.Factories
  href: api/BrightChain.Factories.html
  commentId: N:BrightChain.Factories
  fullName: BrightChain.Factories
  nameWithType: BrightChain.Factories
- uid: BrightChain.Factories.BlockFactory
  name: BlockFactory
  href: api/BrightChain.Factories.BlockFactory.html
  commentId: T:BrightChain.Factories.BlockFactory
  fullName: BrightChain.Factories.BlockFactory
  nameWithType: BlockFactory
- uid: BrightChain.Helpers
  name: BrightChain.Helpers
  href: api/BrightChain.Helpers.html
  commentId: N:BrightChain.Helpers
  fullName: BrightChain.Helpers
  nameWithType: BrightChain.Helpers
- uid: BrightChain.Helpers.BlockHashSerializer
  name: BlockHashSerializer
  href: api/BrightChain.Helpers.BlockHashSerializer.html
  commentId: T:BrightChain.Helpers.BlockHashSerializer
  fullName: BrightChain.Helpers.BlockHashSerializer
  nameWithType: BlockHashSerializer
- uid: BrightChain.Helpers.BlockHashSerializer.getHashLength(BrightChain.Models.Blocks.BlockHash@)
  name: getHashLength(out BlockHash)
  href: api/BrightChain.Helpers.BlockHashSerializer.html#BrightChain_Helpers_BlockHashSerializer_getHashLength_BrightChain_Models_Blocks_BlockHash__
  commentId: M:BrightChain.Helpers.BlockHashSerializer.getHashLength(BrightChain.Models.Blocks.BlockHash@)
  name.vb: getHashLength(ByRef BlockHash)
  fullName: BrightChain.Helpers.BlockHashSerializer.getHashLength(out BrightChain.Models.Blocks.BlockHash)
  fullName.vb: BrightChain.Helpers.BlockHashSerializer.getHashLength(ByRef BrightChain.Models.Blocks.BlockHash)
  nameWithType: BlockHashSerializer.getHashLength(out BlockHash)
  nameWithType.vb: BlockHashSerializer.getHashLength(ByRef BlockHash)
- uid: BrightChain.Helpers.BlockHashSerializer.getHashLength*
  name: getHashLength
  href: api/BrightChain.Helpers.BlockHashSerializer.html#BrightChain_Helpers_BlockHashSerializer_getHashLength_
  commentId: Overload:BrightChain.Helpers.BlockHashSerializer.getHashLength
  isSpec: "True"
  fullName: BrightChain.Helpers.BlockHashSerializer.getHashLength
  nameWithType: BlockHashSerializer.getHashLength
- uid: BrightChain.Helpers.BlockHashSerializer.ReadFrom(System.IO.Stream)
  name: ReadFrom(Stream)
  href: api/BrightChain.Helpers.BlockHashSerializer.html#BrightChain_Helpers_BlockHashSerializer_ReadFrom_System_IO_Stream_
  commentId: M:BrightChain.Helpers.BlockHashSerializer.ReadFrom(System.IO.Stream)
  fullName: BrightChain.Helpers.BlockHashSerializer.ReadFrom(System.IO.Stream)
  nameWithType: BlockHashSerializer.ReadFrom(Stream)
- uid: BrightChain.Helpers.BlockHashSerializer.ReadFrom*
  name: ReadFrom
  href: api/BrightChain.Helpers.BlockHashSerializer.html#BrightChain_Helpers_BlockHashSerializer_ReadFrom_
  commentId: Overload:BrightChain.Helpers.BlockHashSerializer.ReadFrom
  isSpec: "True"
  fullName: BrightChain.Helpers.BlockHashSerializer.ReadFrom
  nameWithType: BlockHashSerializer.ReadFrom
- uid: BrightChain.Helpers.BlockHashSerializer.WriteTo(BrightChain.Models.Blocks.BlockHash,System.IO.Stream)
  name: WriteTo(BlockHash, Stream)
  href: api/BrightChain.Helpers.BlockHashSerializer.html#BrightChain_Helpers_BlockHashSerializer_WriteTo_BrightChain_Models_Blocks_BlockHash_System_IO_Stream_
  commentId: M:BrightChain.Helpers.BlockHashSerializer.WriteTo(BrightChain.Models.Blocks.BlockHash,System.IO.Stream)
  fullName: BrightChain.Helpers.BlockHashSerializer.WriteTo(BrightChain.Models.Blocks.BlockHash, System.IO.Stream)
  nameWithType: BlockHashSerializer.WriteTo(BlockHash, Stream)
- uid: BrightChain.Helpers.BlockHashSerializer.WriteTo*
  name: WriteTo
  href: api/BrightChain.Helpers.BlockHashSerializer.html#BrightChain_Helpers_BlockHashSerializer_WriteTo_
  commentId: Overload:BrightChain.Helpers.BlockHashSerializer.WriteTo
  isSpec: "True"
  fullName: BrightChain.Helpers.BlockHashSerializer.WriteTo
  nameWithType: BlockHashSerializer.WriteTo
- uid: BrightChain.Helpers.BlockSerializer`1
  name: BlockSerializer<T>
  href: api/BrightChain.Helpers.BlockSerializer-1.html
  commentId: T:BrightChain.Helpers.BlockSerializer`1
  name.vb: BlockSerializer(Of T)
  fullName: BrightChain.Helpers.BlockSerializer<T>
  fullName.vb: BrightChain.Helpers.BlockSerializer(Of T)
  nameWithType: BlockSerializer<T>
  nameWithType.vb: BlockSerializer(Of T)
- uid: BrightChain.Helpers.BlockSerializer`1.ReadFrom(System.IO.Stream)
  name: ReadFrom(Stream)
  href: api/BrightChain.Helpers.BlockSerializer-1.html#BrightChain_Helpers_BlockSerializer_1_ReadFrom_System_IO_Stream_
  commentId: M:BrightChain.Helpers.BlockSerializer`1.ReadFrom(System.IO.Stream)
  fullName: BrightChain.Helpers.BlockSerializer<T>.ReadFrom(System.IO.Stream)
  fullName.vb: BrightChain.Helpers.BlockSerializer(Of T).ReadFrom(System.IO.Stream)
  nameWithType: BlockSerializer<T>.ReadFrom(Stream)
  nameWithType.vb: BlockSerializer(Of T).ReadFrom(Stream)
- uid: BrightChain.Helpers.BlockSerializer`1.ReadFrom*
  name: ReadFrom
  href: api/BrightChain.Helpers.BlockSerializer-1.html#BrightChain_Helpers_BlockSerializer_1_ReadFrom_
  commentId: Overload:BrightChain.Helpers.BlockSerializer`1.ReadFrom
  isSpec: "True"
  fullName: BrightChain.Helpers.BlockSerializer<T>.ReadFrom
  fullName.vb: BrightChain.Helpers.BlockSerializer(Of T).ReadFrom
  nameWithType: BlockSerializer<T>.ReadFrom
  nameWithType.vb: BlockSerializer(Of T).ReadFrom
- uid: BrightChain.Helpers.BlockSerializer`1.WriteTo(`0,System.IO.Stream)
  name: WriteTo(T, Stream)
  href: api/BrightChain.Helpers.BlockSerializer-1.html#BrightChain_Helpers_BlockSerializer_1_WriteTo__0_System_IO_Stream_
  commentId: M:BrightChain.Helpers.BlockSerializer`1.WriteTo(`0,System.IO.Stream)
  fullName: BrightChain.Helpers.BlockSerializer<T>.WriteTo(T, System.IO.Stream)
  fullName.vb: BrightChain.Helpers.BlockSerializer(Of T).WriteTo(T, System.IO.Stream)
  nameWithType: BlockSerializer<T>.WriteTo(T, Stream)
  nameWithType.vb: BlockSerializer(Of T).WriteTo(T, Stream)
- uid: BrightChain.Helpers.BlockSerializer`1.WriteTo*
  name: WriteTo
  href: api/BrightChain.Helpers.BlockSerializer-1.html#BrightChain_Helpers_BlockSerializer_1_WriteTo_
  commentId: Overload:BrightChain.Helpers.BlockSerializer`1.WriteTo
  isSpec: "True"
  fullName: BrightChain.Helpers.BlockSerializer<T>.WriteTo
  fullName.vb: BrightChain.Helpers.BlockSerializer(Of T).WriteTo
  nameWithType: BlockSerializer<T>.WriteTo
  nameWithType.vb: BlockSerializer(Of T).WriteTo
- uid: BrightChain.Helpers.MemoryComparer`1
  name: MemoryComparer<T>
  href: api/BrightChain.Helpers.MemoryComparer-1.html
  commentId: T:BrightChain.Helpers.MemoryComparer`1
  name.vb: MemoryComparer(Of T)
  fullName: BrightChain.Helpers.MemoryComparer<T>
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T)
  nameWithType: MemoryComparer<T>
  nameWithType.vb: MemoryComparer(Of T)
- uid: BrightChain.Helpers.MemoryComparer`1.Compare(System.Memory{`0},System.Memory{`0})
  name: Compare(Memory<T>, Memory<T>)
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_Compare_System_Memory__0__System_Memory__0__
  commentId: M:BrightChain.Helpers.MemoryComparer`1.Compare(System.Memory{`0},System.Memory{`0})
  name.vb: Compare(Memory(Of T), Memory(Of T))
  fullName: BrightChain.Helpers.MemoryComparer<T>.Compare(System.Memory<T>, System.Memory<T>)
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).Compare(System.Memory(Of T), System.Memory(Of T))
  nameWithType: MemoryComparer<T>.Compare(Memory<T>, Memory<T>)
  nameWithType.vb: MemoryComparer(Of T).Compare(Memory(Of T), Memory(Of T))
- uid: BrightChain.Helpers.MemoryComparer`1.Compare*
  name: Compare
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_Compare_
  commentId: Overload:BrightChain.Helpers.MemoryComparer`1.Compare
  isSpec: "True"
  fullName: BrightChain.Helpers.MemoryComparer<T>.Compare
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).Compare
  nameWithType: MemoryComparer<T>.Compare
  nameWithType.vb: MemoryComparer(Of T).Compare
- uid: BrightChain.Helpers.MemoryComparer`1.Equals(System.Memory{`0},System.Memory{`0})
  name: Equals(Memory<T>, Memory<T>)
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_Equals_System_Memory__0__System_Memory__0__
  commentId: M:BrightChain.Helpers.MemoryComparer`1.Equals(System.Memory{`0},System.Memory{`0})
  name.vb: Equals(Memory(Of T), Memory(Of T))
  fullName: BrightChain.Helpers.MemoryComparer<T>.Equals(System.Memory<T>, System.Memory<T>)
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).Equals(System.Memory(Of T), System.Memory(Of T))
  nameWithType: MemoryComparer<T>.Equals(Memory<T>, Memory<T>)
  nameWithType.vb: MemoryComparer(Of T).Equals(Memory(Of T), Memory(Of T))
- uid: BrightChain.Helpers.MemoryComparer`1.Equals*
  name: Equals
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_Equals_
  commentId: Overload:BrightChain.Helpers.MemoryComparer`1.Equals
  isSpec: "True"
  fullName: BrightChain.Helpers.MemoryComparer<T>.Equals
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).Equals
  nameWithType: MemoryComparer<T>.Equals
  nameWithType.vb: MemoryComparer(Of T).Equals
- uid: BrightChain.Helpers.MemoryComparer`1.GetHashCode(System.Memory{`0})
  name: GetHashCode(Memory<T>)
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_GetHashCode_System_Memory__0__
  commentId: M:BrightChain.Helpers.MemoryComparer`1.GetHashCode(System.Memory{`0})
  name.vb: GetHashCode(Memory(Of T))
  fullName: BrightChain.Helpers.MemoryComparer<T>.GetHashCode(System.Memory<T>)
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).GetHashCode(System.Memory(Of T))
  nameWithType: MemoryComparer<T>.GetHashCode(Memory<T>)
  nameWithType.vb: MemoryComparer(Of T).GetHashCode(Memory(Of T))
- uid: BrightChain.Helpers.MemoryComparer`1.GetHashCode*
  name: GetHashCode
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_GetHashCode_
  commentId: Overload:BrightChain.Helpers.MemoryComparer`1.GetHashCode
  isSpec: "True"
  fullName: BrightChain.Helpers.MemoryComparer<T>.GetHashCode
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).GetHashCode
  nameWithType: MemoryComparer<T>.GetHashCode
  nameWithType.vb: MemoryComparer(Of T).GetHashCode
- uid: BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IComparer{System#Memory{T}}#Compare(System.Memory{`0},System.Memory{`0})
  name: IComparer<Memory<T>>.Compare(Memory<T>, Memory<T>)
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_System_Collections_Generic_IComparer_System_Memory_T___Compare_System_Memory__0__System_Memory__0__
  commentId: M:BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IComparer{System#Memory{T}}#Compare(System.Memory{`0},System.Memory{`0})
  name.vb: System.Collections.Generic.IComparer<System.Memory<T>>.Compare(Memory(Of T), Memory(Of T))
  fullName: BrightChain.Helpers.MemoryComparer<T>.System.Collections.Generic.IComparer<System.Memory<T>>.Compare(System.Memory<T>, System.Memory<T>)
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).System.Collections.Generic.IComparer<System.Memory<T>>.Compare(System.Memory(Of T), System.Memory(Of T))
  nameWithType: MemoryComparer<T>.IComparer<Memory<T>>.Compare(Memory<T>, Memory<T>)
  nameWithType.vb: MemoryComparer(Of T).System.Collections.Generic.IComparer<System.Memory<T>>.Compare(Memory(Of T), Memory(Of T))
- uid: BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IComparer{System#Memory{T}}#Compare*
  name: IComparer<Memory<T>>.Compare
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_System_Collections_Generic_IComparer_System_Memory_T___Compare_
  commentId: Overload:BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IComparer{System#Memory{T}}#Compare
  isSpec: "True"
  name.vb: System.Collections.Generic.IComparer<System.Memory<T>>.Compare
  fullName: BrightChain.Helpers.MemoryComparer<T>.System.Collections.Generic.IComparer<System.Memory<T>>.Compare
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).System.Collections.Generic.IComparer<System.Memory<T>>.Compare
  nameWithType: MemoryComparer<T>.IComparer<Memory<T>>.Compare
  nameWithType.vb: MemoryComparer(Of T).System.Collections.Generic.IComparer<System.Memory<T>>.Compare
- uid: BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#Memory{T}}#Equals(System.Memory{`0},System.Memory{`0})
  name: IEqualityComparer<Memory<T>>.Equals(Memory<T>, Memory<T>)
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_System_Collections_Generic_IEqualityComparer_System_Memory_T___Equals_System_Memory__0__System_Memory__0__
  commentId: M:BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#Memory{T}}#Equals(System.Memory{`0},System.Memory{`0})
  name.vb: System.Collections.Generic.IEqualityComparer<System.Memory<T>>.Equals(Memory(Of T), Memory(Of T))
  fullName: BrightChain.Helpers.MemoryComparer<T>.System.Collections.Generic.IEqualityComparer<System.Memory<T>>.Equals(System.Memory<T>, System.Memory<T>)
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.Memory<T>>.Equals(System.Memory(Of T), System.Memory(Of T))
  nameWithType: MemoryComparer<T>.IEqualityComparer<Memory<T>>.Equals(Memory<T>, Memory<T>)
  nameWithType.vb: MemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.Memory<T>>.Equals(Memory(Of T), Memory(Of T))
- uid: BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#Memory{T}}#Equals*
  name: IEqualityComparer<Memory<T>>.Equals
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_System_Collections_Generic_IEqualityComparer_System_Memory_T___Equals_
  commentId: Overload:BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#Memory{T}}#Equals
  isSpec: "True"
  name.vb: System.Collections.Generic.IEqualityComparer<System.Memory<T>>.Equals
  fullName: BrightChain.Helpers.MemoryComparer<T>.System.Collections.Generic.IEqualityComparer<System.Memory<T>>.Equals
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.Memory<T>>.Equals
  nameWithType: MemoryComparer<T>.IEqualityComparer<Memory<T>>.Equals
  nameWithType.vb: MemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.Memory<T>>.Equals
- uid: BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#Memory{T}}#GetHashCode(System.Memory{`0})
  name: IEqualityComparer<Memory<T>>.GetHashCode(Memory<T>)
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_System_Collections_Generic_IEqualityComparer_System_Memory_T___GetHashCode_System_Memory__0__
  commentId: M:BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#Memory{T}}#GetHashCode(System.Memory{`0})
  name.vb: System.Collections.Generic.IEqualityComparer<System.Memory<T>>.GetHashCode(Memory(Of T))
  fullName: BrightChain.Helpers.MemoryComparer<T>.System.Collections.Generic.IEqualityComparer<System.Memory<T>>.GetHashCode(System.Memory<T>)
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.Memory<T>>.GetHashCode(System.Memory(Of T))
  nameWithType: MemoryComparer<T>.IEqualityComparer<Memory<T>>.GetHashCode(Memory<T>)
  nameWithType.vb: MemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.Memory<T>>.GetHashCode(Memory(Of T))
- uid: BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#Memory{T}}#GetHashCode*
  name: IEqualityComparer<Memory<T>>.GetHashCode
  href: api/BrightChain.Helpers.MemoryComparer-1.html#BrightChain_Helpers_MemoryComparer_1_System_Collections_Generic_IEqualityComparer_System_Memory_T___GetHashCode_
  commentId: Overload:BrightChain.Helpers.MemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#Memory{T}}#GetHashCode
  isSpec: "True"
  name.vb: System.Collections.Generic.IEqualityComparer<System.Memory<T>>.GetHashCode
  fullName: BrightChain.Helpers.MemoryComparer<T>.System.Collections.Generic.IEqualityComparer<System.Memory<T>>.GetHashCode
  fullName.vb: BrightChain.Helpers.MemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.Memory<T>>.GetHashCode
  nameWithType: MemoryComparer<T>.IEqualityComparer<Memory<T>>.GetHashCode
  nameWithType.vb: MemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.Memory<T>>.GetHashCode
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1
  name: ReadOnlyMemoryComparer<T>
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html
  commentId: T:BrightChain.Helpers.ReadOnlyMemoryComparer`1
  name.vb: ReadOnlyMemoryComparer(Of T)
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T)
  nameWithType: ReadOnlyMemoryComparer<T>
  nameWithType.vb: ReadOnlyMemoryComparer(Of T)
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.Compare(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  name: Compare(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_Compare_System_ReadOnlyMemory__0__System_ReadOnlyMemory__0__
  commentId: M:BrightChain.Helpers.ReadOnlyMemoryComparer`1.Compare(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  name.vb: Compare(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.Compare(System.ReadOnlyMemory<T>, System.ReadOnlyMemory<T>)
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).Compare(System.ReadOnlyMemory(Of T), System.ReadOnlyMemory(Of T))
  nameWithType: ReadOnlyMemoryComparer<T>.Compare(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).Compare(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.Compare*
  name: Compare
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_Compare_
  commentId: Overload:BrightChain.Helpers.ReadOnlyMemoryComparer`1.Compare
  isSpec: "True"
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.Compare
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).Compare
  nameWithType: ReadOnlyMemoryComparer<T>.Compare
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).Compare
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  name: Equals(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_Equals_System_ReadOnlyMemory__0__System_ReadOnlyMemory__0__
  commentId: M:BrightChain.Helpers.ReadOnlyMemoryComparer`1.Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  name.vb: Equals(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.Equals(System.ReadOnlyMemory<T>, System.ReadOnlyMemory<T>)
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).Equals(System.ReadOnlyMemory(Of T), System.ReadOnlyMemory(Of T))
  nameWithType: ReadOnlyMemoryComparer<T>.Equals(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).Equals(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.Equals*
  name: Equals
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_Equals_
  commentId: Overload:BrightChain.Helpers.ReadOnlyMemoryComparer`1.Equals
  isSpec: "True"
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.Equals
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).Equals
  nameWithType: ReadOnlyMemoryComparer<T>.Equals
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).Equals
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.GetHashCode(System.ReadOnlyMemory{`0})
  name: GetHashCode(ReadOnlyMemory<T>)
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_GetHashCode_System_ReadOnlyMemory__0__
  commentId: M:BrightChain.Helpers.ReadOnlyMemoryComparer`1.GetHashCode(System.ReadOnlyMemory{`0})
  name.vb: GetHashCode(ReadOnlyMemory(Of T))
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.GetHashCode(System.ReadOnlyMemory<T>)
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).GetHashCode(System.ReadOnlyMemory(Of T))
  nameWithType: ReadOnlyMemoryComparer<T>.GetHashCode(ReadOnlyMemory<T>)
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).GetHashCode(ReadOnlyMemory(Of T))
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.GetHashCode*
  name: GetHashCode
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_GetHashCode_
  commentId: Overload:BrightChain.Helpers.ReadOnlyMemoryComparer`1.GetHashCode
  isSpec: "True"
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.GetHashCode
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).GetHashCode
  nameWithType: ReadOnlyMemoryComparer<T>.GetHashCode
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).GetHashCode
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IComparer{System#ReadOnlyMemory{T}}#Compare(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  name: IComparer<ReadOnlyMemory<T>>.Compare(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_System_Collections_Generic_IComparer_System_ReadOnlyMemory_T___Compare_System_ReadOnlyMemory__0__System_ReadOnlyMemory__0__
  commentId: M:BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IComparer{System#ReadOnlyMemory{T}}#Compare(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  name.vb: System.Collections.Generic.IComparer<System.ReadOnlyMemory<T>>.Compare(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.System.Collections.Generic.IComparer<System.ReadOnlyMemory<T>>.Compare(System.ReadOnlyMemory<T>, System.ReadOnlyMemory<T>)
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IComparer<System.ReadOnlyMemory<T>>.Compare(System.ReadOnlyMemory(Of T), System.ReadOnlyMemory(Of T))
  nameWithType: ReadOnlyMemoryComparer<T>.IComparer<ReadOnlyMemory<T>>.Compare(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IComparer<System.ReadOnlyMemory<T>>.Compare(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IComparer{System#ReadOnlyMemory{T}}#Compare*
  name: IComparer<ReadOnlyMemory<T>>.Compare
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_System_Collections_Generic_IComparer_System_ReadOnlyMemory_T___Compare_
  commentId: Overload:BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IComparer{System#ReadOnlyMemory{T}}#Compare
  isSpec: "True"
  name.vb: System.Collections.Generic.IComparer<System.ReadOnlyMemory<T>>.Compare
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.System.Collections.Generic.IComparer<System.ReadOnlyMemory<T>>.Compare
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IComparer<System.ReadOnlyMemory<T>>.Compare
  nameWithType: ReadOnlyMemoryComparer<T>.IComparer<ReadOnlyMemory<T>>.Compare
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IComparer<System.ReadOnlyMemory<T>>.Compare
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#ReadOnlyMemory{T}}#Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  name: IEqualityComparer<ReadOnlyMemory<T>>.Equals(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_System_Collections_Generic_IEqualityComparer_System_ReadOnlyMemory_T___Equals_System_ReadOnlyMemory__0__System_ReadOnlyMemory__0__
  commentId: M:BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#ReadOnlyMemory{T}}#Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  name.vb: System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.Equals(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.Equals(System.ReadOnlyMemory<T>, System.ReadOnlyMemory<T>)
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.Equals(System.ReadOnlyMemory(Of T), System.ReadOnlyMemory(Of T))
  nameWithType: ReadOnlyMemoryComparer<T>.IEqualityComparer<ReadOnlyMemory<T>>.Equals(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.Equals(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#ReadOnlyMemory{T}}#Equals*
  name: IEqualityComparer<ReadOnlyMemory<T>>.Equals
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_System_Collections_Generic_IEqualityComparer_System_ReadOnlyMemory_T___Equals_
  commentId: Overload:BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#ReadOnlyMemory{T}}#Equals
  isSpec: "True"
  name.vb: System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.Equals
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.Equals
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.Equals
  nameWithType: ReadOnlyMemoryComparer<T>.IEqualityComparer<ReadOnlyMemory<T>>.Equals
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.Equals
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#ReadOnlyMemory{T}}#GetHashCode(System.ReadOnlyMemory{`0})
  name: IEqualityComparer<ReadOnlyMemory<T>>.GetHashCode(ReadOnlyMemory<T>)
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_System_Collections_Generic_IEqualityComparer_System_ReadOnlyMemory_T___GetHashCode_System_ReadOnlyMemory__0__
  commentId: M:BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#ReadOnlyMemory{T}}#GetHashCode(System.ReadOnlyMemory{`0})
  name.vb: System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.GetHashCode(ReadOnlyMemory(Of T))
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.GetHashCode(System.ReadOnlyMemory<T>)
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.GetHashCode(System.ReadOnlyMemory(Of T))
  nameWithType: ReadOnlyMemoryComparer<T>.IEqualityComparer<ReadOnlyMemory<T>>.GetHashCode(ReadOnlyMemory<T>)
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.GetHashCode(ReadOnlyMemory(Of T))
- uid: BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#ReadOnlyMemory{T}}#GetHashCode*
  name: IEqualityComparer<ReadOnlyMemory<T>>.GetHashCode
  href: api/BrightChain.Helpers.ReadOnlyMemoryComparer-1.html#BrightChain_Helpers_ReadOnlyMemoryComparer_1_System_Collections_Generic_IEqualityComparer_System_ReadOnlyMemory_T___GetHashCode_
  commentId: Overload:BrightChain.Helpers.ReadOnlyMemoryComparer`1.System#Collections#Generic#IEqualityComparer{System#ReadOnlyMemory{T}}#GetHashCode
  isSpec: "True"
  name.vb: System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.GetHashCode
  fullName: BrightChain.Helpers.ReadOnlyMemoryComparer<T>.System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.GetHashCode
  fullName.vb: BrightChain.Helpers.ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.GetHashCode
  nameWithType: ReadOnlyMemoryComparer<T>.IEqualityComparer<ReadOnlyMemory<T>>.GetHashCode
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.GetHashCode
- uid: BrightChain.Interfaces
  name: BrightChain.Interfaces
  href: api/BrightChain.Interfaces.html
  commentId: N:BrightChain.Interfaces
  fullName: BrightChain.Interfaces
  nameWithType: BrightChain.Interfaces
- uid: BrightChain.Interfaces.IBlock
  name: IBlock
  href: api/BrightChain.Interfaces.IBlock.html
  commentId: T:BrightChain.Interfaces.IBlock
  fullName: BrightChain.Interfaces.IBlock
  nameWithType: IBlock
- uid: BrightChain.Interfaces.IBlock.Data
  name: Data
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_Data
  commentId: P:BrightChain.Interfaces.IBlock.Data
  fullName: BrightChain.Interfaces.IBlock.Data
  nameWithType: IBlock.Data
- uid: BrightChain.Interfaces.IBlock.Data*
  name: Data
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_Data_
  commentId: Overload:BrightChain.Interfaces.IBlock.Data
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBlock.Data
  nameWithType: IBlock.Data
- uid: BrightChain.Interfaces.IBlock.Id
  name: Id
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_Id
  commentId: P:BrightChain.Interfaces.IBlock.Id
  fullName: BrightChain.Interfaces.IBlock.Id
  nameWithType: IBlock.Id
- uid: BrightChain.Interfaces.IBlock.Id*
  name: Id
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_Id_
  commentId: Overload:BrightChain.Interfaces.IBlock.Id
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBlock.Id
  nameWithType: IBlock.Id
- uid: BrightChain.Interfaces.IBlock.MetaData
  name: MetaData
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_MetaData
  commentId: P:BrightChain.Interfaces.IBlock.MetaData
  fullName: BrightChain.Interfaces.IBlock.MetaData
  nameWithType: IBlock.MetaData
- uid: BrightChain.Interfaces.IBlock.MetaData*
  name: MetaData
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_MetaData_
  commentId: Overload:BrightChain.Interfaces.IBlock.MetaData
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBlock.MetaData
  nameWithType: IBlock.MetaData
- uid: BrightChain.Interfaces.IBlock.RedundancyContract
  name: RedundancyContract
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_RedundancyContract
  commentId: P:BrightChain.Interfaces.IBlock.RedundancyContract
  fullName: BrightChain.Interfaces.IBlock.RedundancyContract
  nameWithType: IBlock.RedundancyContract
- uid: BrightChain.Interfaces.IBlock.RedundancyContract*
  name: RedundancyContract
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_RedundancyContract_
  commentId: Overload:BrightChain.Interfaces.IBlock.RedundancyContract
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBlock.RedundancyContract
  nameWithType: IBlock.RedundancyContract
- uid: BrightChain.Interfaces.IBlock.StorageContract
  name: StorageContract
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_StorageContract
  commentId: P:BrightChain.Interfaces.IBlock.StorageContract
  fullName: BrightChain.Interfaces.IBlock.StorageContract
  nameWithType: IBlock.StorageContract
- uid: BrightChain.Interfaces.IBlock.StorageContract*
  name: StorageContract
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_StorageContract_
  commentId: Overload:BrightChain.Interfaces.IBlock.StorageContract
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBlock.StorageContract
  nameWithType: IBlock.StorageContract
- uid: BrightChain.Interfaces.IBlock.XOR(BrightChain.Models.Blocks.Block)
  name: XOR(Block)
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_XOR_BrightChain_Models_Blocks_Block_
  commentId: M:BrightChain.Interfaces.IBlock.XOR(BrightChain.Models.Blocks.Block)
  fullName: BrightChain.Interfaces.IBlock.XOR(BrightChain.Models.Blocks.Block)
  nameWithType: IBlock.XOR(Block)
- uid: BrightChain.Interfaces.IBlock.XOR(BrightChain.Models.Blocks.Block[])
  name: XOR(Block[])
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_XOR_BrightChain_Models_Blocks_Block___
  commentId: M:BrightChain.Interfaces.IBlock.XOR(BrightChain.Models.Blocks.Block[])
  name.vb: XOR(Block())
  fullName: BrightChain.Interfaces.IBlock.XOR(BrightChain.Models.Blocks.Block[])
  fullName.vb: BrightChain.Interfaces.IBlock.XOR(BrightChain.Models.Blocks.Block())
  nameWithType: IBlock.XOR(Block[])
  nameWithType.vb: IBlock.XOR(Block())
- uid: BrightChain.Interfaces.IBlock.XOR*
  name: XOR
  href: api/BrightChain.Interfaces.IBlock.html#BrightChain_Interfaces_IBlock_XOR_
  commentId: Overload:BrightChain.Interfaces.IBlock.XOR
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBlock.XOR
  nameWithType: IBlock.XOR
- uid: BrightChain.Interfaces.IBlockHash
  name: IBlockHash
  href: api/BrightChain.Interfaces.IBlockHash.html
  commentId: T:BrightChain.Interfaces.IBlockHash
  fullName: BrightChain.Interfaces.IBlockHash
  nameWithType: IBlockHash
- uid: BrightChain.Interfaces.IBlockHash.Computed
  name: Computed
  href: api/BrightChain.Interfaces.IBlockHash.html#BrightChain_Interfaces_IBlockHash_Computed
  commentId: P:BrightChain.Interfaces.IBlockHash.Computed
  fullName: BrightChain.Interfaces.IBlockHash.Computed
  nameWithType: IBlockHash.Computed
- uid: BrightChain.Interfaces.IBlockHash.Computed*
  name: Computed
  href: api/BrightChain.Interfaces.IBlockHash.html#BrightChain_Interfaces_IBlockHash_Computed_
  commentId: Overload:BrightChain.Interfaces.IBlockHash.Computed
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBlockHash.Computed
  nameWithType: IBlockHash.Computed
- uid: BrightChain.Interfaces.IBlockHash.HashBytes
  name: HashBytes
  href: api/BrightChain.Interfaces.IBlockHash.html#BrightChain_Interfaces_IBlockHash_HashBytes
  commentId: P:BrightChain.Interfaces.IBlockHash.HashBytes
  fullName: BrightChain.Interfaces.IBlockHash.HashBytes
  nameWithType: IBlockHash.HashBytes
- uid: BrightChain.Interfaces.IBlockHash.HashBytes*
  name: HashBytes
  href: api/BrightChain.Interfaces.IBlockHash.html#BrightChain_Interfaces_IBlockHash_HashBytes_
  commentId: Overload:BrightChain.Interfaces.IBlockHash.HashBytes
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBlockHash.HashBytes
  nameWithType: IBlockHash.HashBytes
- uid: BrightChain.Interfaces.IBPlusTreeCacheManager`2
  name: IBPlusTreeCacheManager<Tkey, Tvalue>
  href: api/BrightChain.Interfaces.IBPlusTreeCacheManager-2.html
  commentId: T:BrightChain.Interfaces.IBPlusTreeCacheManager`2
  name.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue)
  fullName: BrightChain.Interfaces.IBPlusTreeCacheManager<Tkey, Tvalue>
  fullName.vb: BrightChain.Interfaces.IBPlusTreeCacheManager(Of Tkey, Tvalue)
  nameWithType: IBPlusTreeCacheManager<Tkey, Tvalue>
  nameWithType.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue)
- uid: BrightChain.Interfaces.IBPlusTreeCacheManager`2.Commit
  name: Commit()
  href: api/BrightChain.Interfaces.IBPlusTreeCacheManager-2.html#BrightChain_Interfaces_IBPlusTreeCacheManager_2_Commit
  commentId: M:BrightChain.Interfaces.IBPlusTreeCacheManager`2.Commit
  fullName: BrightChain.Interfaces.IBPlusTreeCacheManager<Tkey, Tvalue>.Commit()
  fullName.vb: BrightChain.Interfaces.IBPlusTreeCacheManager(Of Tkey, Tvalue).Commit()
  nameWithType: IBPlusTreeCacheManager<Tkey, Tvalue>.Commit()
  nameWithType.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue).Commit()
- uid: BrightChain.Interfaces.IBPlusTreeCacheManager`2.Commit*
  name: Commit
  href: api/BrightChain.Interfaces.IBPlusTreeCacheManager-2.html#BrightChain_Interfaces_IBPlusTreeCacheManager_2_Commit_
  commentId: Overload:BrightChain.Interfaces.IBPlusTreeCacheManager`2.Commit
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBPlusTreeCacheManager<Tkey, Tvalue>.Commit
  fullName.vb: BrightChain.Interfaces.IBPlusTreeCacheManager(Of Tkey, Tvalue).Commit
  nameWithType: IBPlusTreeCacheManager<Tkey, Tvalue>.Commit
  nameWithType.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue).Commit
- uid: BrightChain.Interfaces.IBPlusTreeCacheManager`2.Rollback
  name: Rollback()
  href: api/BrightChain.Interfaces.IBPlusTreeCacheManager-2.html#BrightChain_Interfaces_IBPlusTreeCacheManager_2_Rollback
  commentId: M:BrightChain.Interfaces.IBPlusTreeCacheManager`2.Rollback
  fullName: BrightChain.Interfaces.IBPlusTreeCacheManager<Tkey, Tvalue>.Rollback()
  fullName.vb: BrightChain.Interfaces.IBPlusTreeCacheManager(Of Tkey, Tvalue).Rollback()
  nameWithType: IBPlusTreeCacheManager<Tkey, Tvalue>.Rollback()
  nameWithType.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue).Rollback()
- uid: BrightChain.Interfaces.IBPlusTreeCacheManager`2.Rollback*
  name: Rollback
  href: api/BrightChain.Interfaces.IBPlusTreeCacheManager-2.html#BrightChain_Interfaces_IBPlusTreeCacheManager_2_Rollback_
  commentId: Overload:BrightChain.Interfaces.IBPlusTreeCacheManager`2.Rollback
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBPlusTreeCacheManager<Tkey, Tvalue>.Rollback
  fullName.vb: BrightChain.Interfaces.IBPlusTreeCacheManager(Of Tkey, Tvalue).Rollback
  nameWithType: IBPlusTreeCacheManager<Tkey, Tvalue>.Rollback
  nameWithType.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue).Rollback
- uid: BrightChain.Interfaces.IBPlusTreeCacheManager`2.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name: TreeIsEqual(BPlusTree<Tkey, Tvalue>)
  href: api/BrightChain.Interfaces.IBPlusTreeCacheManager-2.html#BrightChain_Interfaces_IBPlusTreeCacheManager_2_TreeIsEqual_CSharpTest_Net_Collections_BPlusTree__0__1__
  commentId: M:BrightChain.Interfaces.IBPlusTreeCacheManager`2.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name.vb: TreeIsEqual(BPlusTree(Of Tkey, Tvalue))
  fullName: BrightChain.Interfaces.IBPlusTreeCacheManager<Tkey, Tvalue>.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>)
  fullName.vb: BrightChain.Interfaces.IBPlusTreeCacheManager(Of Tkey, Tvalue).TreeIsEqual(CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue))
  nameWithType: IBPlusTreeCacheManager<Tkey, Tvalue>.TreeIsEqual(BPlusTree<Tkey, Tvalue>)
  nameWithType.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue).TreeIsEqual(BPlusTree(Of Tkey, Tvalue))
- uid: BrightChain.Interfaces.IBPlusTreeCacheManager`2.TreeIsEqual*
  name: TreeIsEqual
  href: api/BrightChain.Interfaces.IBPlusTreeCacheManager-2.html#BrightChain_Interfaces_IBPlusTreeCacheManager_2_TreeIsEqual_
  commentId: Overload:BrightChain.Interfaces.IBPlusTreeCacheManager`2.TreeIsEqual
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBPlusTreeCacheManager<Tkey, Tvalue>.TreeIsEqual
  fullName.vb: BrightChain.Interfaces.IBPlusTreeCacheManager(Of Tkey, Tvalue).TreeIsEqual
  nameWithType: IBPlusTreeCacheManager<Tkey, Tvalue>.TreeIsEqual
  nameWithType.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue).TreeIsEqual
- uid: BrightChain.Interfaces.IBPlusTreeCacheManager`2.TreeIsSame(CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name: TreeIsSame(BPlusTree<Tkey, Tvalue>)
  href: api/BrightChain.Interfaces.IBPlusTreeCacheManager-2.html#BrightChain_Interfaces_IBPlusTreeCacheManager_2_TreeIsSame_CSharpTest_Net_Collections_BPlusTree__0__1__
  commentId: M:BrightChain.Interfaces.IBPlusTreeCacheManager`2.TreeIsSame(CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name.vb: TreeIsSame(BPlusTree(Of Tkey, Tvalue))
  fullName: BrightChain.Interfaces.IBPlusTreeCacheManager<Tkey, Tvalue>.TreeIsSame(CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>)
  fullName.vb: BrightChain.Interfaces.IBPlusTreeCacheManager(Of Tkey, Tvalue).TreeIsSame(CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue))
  nameWithType: IBPlusTreeCacheManager<Tkey, Tvalue>.TreeIsSame(BPlusTree<Tkey, Tvalue>)
  nameWithType.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue).TreeIsSame(BPlusTree(Of Tkey, Tvalue))
- uid: BrightChain.Interfaces.IBPlusTreeCacheManager`2.TreeIsSame*
  name: TreeIsSame
  href: api/BrightChain.Interfaces.IBPlusTreeCacheManager-2.html#BrightChain_Interfaces_IBPlusTreeCacheManager_2_TreeIsSame_
  commentId: Overload:BrightChain.Interfaces.IBPlusTreeCacheManager`2.TreeIsSame
  isSpec: "True"
  fullName: BrightChain.Interfaces.IBPlusTreeCacheManager<Tkey, Tvalue>.TreeIsSame
  fullName.vb: BrightChain.Interfaces.IBPlusTreeCacheManager(Of Tkey, Tvalue).TreeIsSame
  nameWithType: IBPlusTreeCacheManager<Tkey, Tvalue>.TreeIsSame
  nameWithType.vb: IBPlusTreeCacheManager(Of Tkey, Tvalue).TreeIsSame
- uid: BrightChain.Interfaces.ICacheManager`2
  name: ICacheManager<Tkey, Tvalue>
  href: api/BrightChain.Interfaces.ICacheManager-2.html
  commentId: T:BrightChain.Interfaces.ICacheManager`2
  name.vb: ICacheManager(Of Tkey, Tvalue)
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue)
  nameWithType: ICacheManager<Tkey, Tvalue>
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue)
- uid: BrightChain.Interfaces.ICacheManager`2.CacheMiss
  name: CacheMiss
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_CacheMiss
  commentId: E:BrightChain.Interfaces.ICacheManager`2.CacheMiss
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.CacheMiss
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).CacheMiss
  nameWithType: ICacheManager<Tkey, Tvalue>.CacheMiss
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).CacheMiss
- uid: BrightChain.Interfaces.ICacheManager`2.CacheMissEventHandler
  name: ICacheManager<Tkey, Tvalue>.CacheMissEventHandler
  href: api/BrightChain.Interfaces.ICacheManager-2.CacheMissEventHandler.html
  commentId: T:BrightChain.Interfaces.ICacheManager`2.CacheMissEventHandler
  name.vb: ICacheManager(Of Tkey, Tvalue).CacheMissEventHandler
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.CacheMissEventHandler
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).CacheMissEventHandler
  nameWithType: ICacheManager<Tkey, Tvalue>.CacheMissEventHandler
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).CacheMissEventHandler
- uid: BrightChain.Interfaces.ICacheManager`2.Contains(`0)
  name: Contains(Tkey)
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_Contains__0_
  commentId: M:BrightChain.Interfaces.ICacheManager`2.Contains(`0)
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.Contains(Tkey)
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).Contains(Tkey)
  nameWithType: ICacheManager<Tkey, Tvalue>.Contains(Tkey)
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).Contains(Tkey)
- uid: BrightChain.Interfaces.ICacheManager`2.Contains*
  name: Contains
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_Contains_
  commentId: Overload:BrightChain.Interfaces.ICacheManager`2.Contains
  isSpec: "True"
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.Contains
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).Contains
  nameWithType: ICacheManager<Tkey, Tvalue>.Contains
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).Contains
- uid: BrightChain.Interfaces.ICacheManager`2.Drop(`0,System.Boolean)
  name: Drop(Tkey, Boolean)
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_Drop__0_System_Boolean_
  commentId: M:BrightChain.Interfaces.ICacheManager`2.Drop(`0,System.Boolean)
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.Drop(Tkey, System.Boolean)
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).Drop(Tkey, System.Boolean)
  nameWithType: ICacheManager<Tkey, Tvalue>.Drop(Tkey, Boolean)
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).Drop(Tkey, Boolean)
- uid: BrightChain.Interfaces.ICacheManager`2.Drop*
  name: Drop
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_Drop_
  commentId: Overload:BrightChain.Interfaces.ICacheManager`2.Drop
  isSpec: "True"
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.Drop
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).Drop
  nameWithType: ICacheManager<Tkey, Tvalue>.Drop
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).Drop
- uid: BrightChain.Interfaces.ICacheManager`2.Get(`0)
  name: Get(Tkey)
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_Get__0_
  commentId: M:BrightChain.Interfaces.ICacheManager`2.Get(`0)
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.Get(Tkey)
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).Get(Tkey)
  nameWithType: ICacheManager<Tkey, Tvalue>.Get(Tkey)
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).Get(Tkey)
- uid: BrightChain.Interfaces.ICacheManager`2.Get*
  name: Get
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_Get_
  commentId: Overload:BrightChain.Interfaces.ICacheManager`2.Get
  isSpec: "True"
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.Get
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).Get
  nameWithType: ICacheManager<Tkey, Tvalue>.Get
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).Get
- uid: BrightChain.Interfaces.ICacheManager`2.KeyAdded
  name: KeyAdded
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_KeyAdded
  commentId: E:BrightChain.Interfaces.ICacheManager`2.KeyAdded
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.KeyAdded
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).KeyAdded
  nameWithType: ICacheManager<Tkey, Tvalue>.KeyAdded
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).KeyAdded
- uid: BrightChain.Interfaces.ICacheManager`2.KeyAddedEventHandler
  name: ICacheManager<Tkey, Tvalue>.KeyAddedEventHandler
  href: api/BrightChain.Interfaces.ICacheManager-2.KeyAddedEventHandler.html
  commentId: T:BrightChain.Interfaces.ICacheManager`2.KeyAddedEventHandler
  name.vb: ICacheManager(Of Tkey, Tvalue).KeyAddedEventHandler
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.KeyAddedEventHandler
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).KeyAddedEventHandler
  nameWithType: ICacheManager<Tkey, Tvalue>.KeyAddedEventHandler
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).KeyAddedEventHandler
- uid: BrightChain.Interfaces.ICacheManager`2.KeyRemoved
  name: KeyRemoved
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_KeyRemoved
  commentId: E:BrightChain.Interfaces.ICacheManager`2.KeyRemoved
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.KeyRemoved
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).KeyRemoved
  nameWithType: ICacheManager<Tkey, Tvalue>.KeyRemoved
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).KeyRemoved
- uid: BrightChain.Interfaces.ICacheManager`2.KeyRemovedEventHandler
  name: ICacheManager<Tkey, Tvalue>.KeyRemovedEventHandler
  href: api/BrightChain.Interfaces.ICacheManager-2.KeyRemovedEventHandler.html
  commentId: T:BrightChain.Interfaces.ICacheManager`2.KeyRemovedEventHandler
  name.vb: ICacheManager(Of Tkey, Tvalue).KeyRemovedEventHandler
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.KeyRemovedEventHandler
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).KeyRemovedEventHandler
  nameWithType: ICacheManager<Tkey, Tvalue>.KeyRemovedEventHandler
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).KeyRemovedEventHandler
- uid: BrightChain.Interfaces.ICacheManager`2.Set(`0,`1)
  name: Set(Tkey, Tvalue)
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_Set__0__1_
  commentId: M:BrightChain.Interfaces.ICacheManager`2.Set(`0,`1)
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.Set(Tkey, Tvalue)
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).Set(Tkey, Tvalue)
  nameWithType: ICacheManager<Tkey, Tvalue>.Set(Tkey, Tvalue)
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).Set(Tkey, Tvalue)
- uid: BrightChain.Interfaces.ICacheManager`2.Set*
  name: Set
  href: api/BrightChain.Interfaces.ICacheManager-2.html#BrightChain_Interfaces_ICacheManager_2_Set_
  commentId: Overload:BrightChain.Interfaces.ICacheManager`2.Set
  isSpec: "True"
  fullName: BrightChain.Interfaces.ICacheManager<Tkey, Tvalue>.Set
  fullName.vb: BrightChain.Interfaces.ICacheManager(Of Tkey, Tvalue).Set
  nameWithType: ICacheManager<Tkey, Tvalue>.Set
  nameWithType.vb: ICacheManager(Of Tkey, Tvalue).Set
- uid: BrightChain.Interfaces.ITransactableBlock
  name: ITransactableBlock
  href: api/BrightChain.Interfaces.ITransactableBlock.html
  commentId: T:BrightChain.Interfaces.ITransactableBlock
  fullName: BrightChain.Interfaces.ITransactableBlock
  nameWithType: ITransactableBlock
- uid: BrightChain.Interfaces.ITransactableBlock.AllowCommit
  name: AllowCommit
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_AllowCommit
  commentId: P:BrightChain.Interfaces.ITransactableBlock.AllowCommit
  fullName: BrightChain.Interfaces.ITransactableBlock.AllowCommit
  nameWithType: ITransactableBlock.AllowCommit
- uid: BrightChain.Interfaces.ITransactableBlock.AllowCommit*
  name: AllowCommit
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_AllowCommit_
  commentId: Overload:BrightChain.Interfaces.ITransactableBlock.AllowCommit
  isSpec: "True"
  fullName: BrightChain.Interfaces.ITransactableBlock.AllowCommit
  nameWithType: ITransactableBlock.AllowCommit
- uid: BrightChain.Interfaces.ITransactableBlock.CacheManager
  name: CacheManager
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_CacheManager
  commentId: P:BrightChain.Interfaces.ITransactableBlock.CacheManager
  fullName: BrightChain.Interfaces.ITransactableBlock.CacheManager
  nameWithType: ITransactableBlock.CacheManager
- uid: BrightChain.Interfaces.ITransactableBlock.CacheManager*
  name: CacheManager
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_CacheManager_
  commentId: Overload:BrightChain.Interfaces.ITransactableBlock.CacheManager
  isSpec: "True"
  fullName: BrightChain.Interfaces.ITransactableBlock.CacheManager
  nameWithType: ITransactableBlock.CacheManager
- uid: BrightChain.Interfaces.ITransactableBlock.Committed
  name: Committed
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_Committed
  commentId: P:BrightChain.Interfaces.ITransactableBlock.Committed
  fullName: BrightChain.Interfaces.ITransactableBlock.Committed
  nameWithType: ITransactableBlock.Committed
- uid: BrightChain.Interfaces.ITransactableBlock.Committed*
  name: Committed
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_Committed_
  commentId: Overload:BrightChain.Interfaces.ITransactableBlock.Committed
  isSpec: "True"
  fullName: BrightChain.Interfaces.ITransactableBlock.Committed
  nameWithType: ITransactableBlock.Committed
- uid: BrightChain.Interfaces.ITransactableBlock.SetCacheManager(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}})
  name: SetCacheManager(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>)
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_SetCacheManager_BrightChain_Services_BPlusTreeCacheManager_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock_BrightChain_Helpers_BlockHashSerializer_BrightChain_Helpers_BlockSerializer_BrightChain_Models_Blocks_TransactableBlock___
  commentId: M:BrightChain.Interfaces.ITransactableBlock.SetCacheManager(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}})
  name.vb: SetCacheManager(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)))
  fullName: BrightChain.Interfaces.ITransactableBlock.SetCacheManager(BrightChain.Services.BPlusTreeCacheManager<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer<BrightChain.Models.Blocks.TransactableBlock>>)
  fullName.vb: BrightChain.Interfaces.ITransactableBlock.SetCacheManager(BrightChain.Services.BPlusTreeCacheManager(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer(Of BrightChain.Models.Blocks.TransactableBlock)))
  nameWithType: ITransactableBlock.SetCacheManager(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>)
  nameWithType.vb: ITransactableBlock.SetCacheManager(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)))
- uid: BrightChain.Interfaces.ITransactableBlock.SetCacheManager*
  name: SetCacheManager
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_SetCacheManager_
  commentId: Overload:BrightChain.Interfaces.ITransactableBlock.SetCacheManager
  isSpec: "True"
  fullName: BrightChain.Interfaces.ITransactableBlock.SetCacheManager
  nameWithType: ITransactableBlock.SetCacheManager
- uid: BrightChain.Interfaces.ITransactableBlock.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name: TreeIsEqual(BPlusTree<BlockHash, TransactableBlock>)
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_TreeIsEqual_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__
  commentId: M:BrightChain.Interfaces.ITransactableBlock.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name.vb: TreeIsEqual(BPlusTree(Of BlockHash, TransactableBlock))
  fullName: BrightChain.Interfaces.ITransactableBlock.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>)
  fullName.vb: BrightChain.Interfaces.ITransactableBlock.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock))
  nameWithType: ITransactableBlock.TreeIsEqual(BPlusTree<BlockHash, TransactableBlock>)
  nameWithType.vb: ITransactableBlock.TreeIsEqual(BPlusTree(Of BlockHash, TransactableBlock))
- uid: BrightChain.Interfaces.ITransactableBlock.TreeIsEqual*
  name: TreeIsEqual
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_TreeIsEqual_
  commentId: Overload:BrightChain.Interfaces.ITransactableBlock.TreeIsEqual
  isSpec: "True"
  fullName: BrightChain.Interfaces.ITransactableBlock.TreeIsEqual
  nameWithType: ITransactableBlock.TreeIsEqual
- uid: BrightChain.Interfaces.ITransactableBlock.TreeIsSame(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name: TreeIsSame(BPlusTree<BlockHash, TransactableBlock>)
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_TreeIsSame_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__
  commentId: M:BrightChain.Interfaces.ITransactableBlock.TreeIsSame(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name.vb: TreeIsSame(BPlusTree(Of BlockHash, TransactableBlock))
  fullName: BrightChain.Interfaces.ITransactableBlock.TreeIsSame(CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>)
  fullName.vb: BrightChain.Interfaces.ITransactableBlock.TreeIsSame(CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock))
  nameWithType: ITransactableBlock.TreeIsSame(BPlusTree<BlockHash, TransactableBlock>)
  nameWithType.vb: ITransactableBlock.TreeIsSame(BPlusTree(Of BlockHash, TransactableBlock))
- uid: BrightChain.Interfaces.ITransactableBlock.TreeIsSame*
  name: TreeIsSame
  href: api/BrightChain.Interfaces.ITransactableBlock.html#BrightChain_Interfaces_ITransactableBlock_TreeIsSame_
  commentId: Overload:BrightChain.Interfaces.ITransactableBlock.TreeIsSame
  isSpec: "True"
  fullName: BrightChain.Interfaces.ITransactableBlock.TreeIsSame
  nameWithType: ITransactableBlock.TreeIsSame
- uid: BrightChain.Models.Blocks
  name: BrightChain.Models.Blocks
  href: api/BrightChain.Models.Blocks.html
  commentId: N:BrightChain.Models.Blocks
  fullName: BrightChain.Models.Blocks
  nameWithType: BrightChain.Models.Blocks
- uid: BrightChain.Models.Blocks.Block
  name: Block
  href: api/BrightChain.Models.Blocks.Block.html
  commentId: T:BrightChain.Models.Blocks.Block
  fullName: BrightChain.Models.Blocks.Block
  nameWithType: Block
- uid: BrightChain.Models.Blocks.Block.#ctor(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte})
  name: Block(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>)
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block__ctor_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__
  commentId: M:BrightChain.Models.Blocks.Block.#ctor(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte})
  name.vb: Block(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte))
  fullName: BrightChain.Models.Blocks.Block.Block(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: BrightChain.Models.Blocks.Block.Block(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: Block.Block(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>)
  nameWithType.vb: Block.Block(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte))
- uid: BrightChain.Models.Blocks.Block.#ctor*
  name: Block
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block__ctor_
  commentId: Overload:BrightChain.Models.Blocks.Block.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.Block
  nameWithType: Block.Block
- uid: BrightChain.Models.Blocks.Block.AsBlock
  name: AsBlock
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_AsBlock
  commentId: P:BrightChain.Models.Blocks.Block.AsBlock
  fullName: BrightChain.Models.Blocks.Block.AsBlock
  nameWithType: Block.AsBlock
- uid: BrightChain.Models.Blocks.Block.AsBlock*
  name: AsBlock
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_AsBlock_
  commentId: Overload:BrightChain.Models.Blocks.Block.AsBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.AsBlock
  nameWithType: Block.AsBlock
- uid: BrightChain.Models.Blocks.Block.BlockSize
  name: BlockSize
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_BlockSize
  commentId: P:BrightChain.Models.Blocks.Block.BlockSize
  fullName: BrightChain.Models.Blocks.Block.BlockSize
  nameWithType: Block.BlockSize
- uid: BrightChain.Models.Blocks.Block.BlockSize*
  name: BlockSize
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_BlockSize_
  commentId: Overload:BrightChain.Models.Blocks.Block.BlockSize
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.BlockSize
  nameWithType: Block.BlockSize
- uid: BrightChain.Models.Blocks.Block.CompareTo(BrightChain.Interfaces.IBlock)
  name: CompareTo(IBlock)
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_CompareTo_BrightChain_Interfaces_IBlock_
  commentId: M:BrightChain.Models.Blocks.Block.CompareTo(BrightChain.Interfaces.IBlock)
  fullName: BrightChain.Models.Blocks.Block.CompareTo(BrightChain.Interfaces.IBlock)
  nameWithType: Block.CompareTo(IBlock)
- uid: BrightChain.Models.Blocks.Block.CompareTo(BrightChain.Models.Blocks.Block)
  name: CompareTo(Block)
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_CompareTo_BrightChain_Models_Blocks_Block_
  commentId: M:BrightChain.Models.Blocks.Block.CompareTo(BrightChain.Models.Blocks.Block)
  fullName: BrightChain.Models.Blocks.Block.CompareTo(BrightChain.Models.Blocks.Block)
  nameWithType: Block.CompareTo(Block)
- uid: BrightChain.Models.Blocks.Block.CompareTo*
  name: CompareTo
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_CompareTo_
  commentId: Overload:BrightChain.Models.Blocks.Block.CompareTo
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.CompareTo
  nameWithType: Block.CompareTo
- uid: BrightChain.Models.Blocks.Block.ConstituentBlockListBlock
  name: ConstituentBlockListBlock
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_ConstituentBlockListBlock
  commentId: P:BrightChain.Models.Blocks.Block.ConstituentBlockListBlock
  fullName: BrightChain.Models.Blocks.Block.ConstituentBlockListBlock
  nameWithType: Block.ConstituentBlockListBlock
- uid: BrightChain.Models.Blocks.Block.ConstituentBlockListBlock*
  name: ConstituentBlockListBlock
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_ConstituentBlockListBlock_
  commentId: Overload:BrightChain.Models.Blocks.Block.ConstituentBlockListBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.ConstituentBlockListBlock
  nameWithType: Block.ConstituentBlockListBlock
- uid: BrightChain.Models.Blocks.Block.ConstituentBlocks
  name: ConstituentBlocks
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_ConstituentBlocks
  commentId: P:BrightChain.Models.Blocks.Block.ConstituentBlocks
  fullName: BrightChain.Models.Blocks.Block.ConstituentBlocks
  nameWithType: Block.ConstituentBlocks
- uid: BrightChain.Models.Blocks.Block.ConstituentBlocks*
  name: ConstituentBlocks
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_ConstituentBlocks_
  commentId: Overload:BrightChain.Models.Blocks.Block.ConstituentBlocks
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.ConstituentBlocks
  nameWithType: Block.ConstituentBlocks
- uid: BrightChain.Models.Blocks.Block.Data
  name: Data
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Data
  commentId: P:BrightChain.Models.Blocks.Block.Data
  fullName: BrightChain.Models.Blocks.Block.Data
  nameWithType: Block.Data
- uid: BrightChain.Models.Blocks.Block.Data*
  name: Data
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Data_
  commentId: Overload:BrightChain.Models.Blocks.Block.Data
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.Data
  nameWithType: Block.Data
- uid: BrightChain.Models.Blocks.Block.Dispose
  name: Dispose()
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Dispose
  commentId: M:BrightChain.Models.Blocks.Block.Dispose
  fullName: BrightChain.Models.Blocks.Block.Dispose()
  nameWithType: Block.Dispose()
- uid: BrightChain.Models.Blocks.Block.Dispose*
  name: Dispose
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Dispose_
  commentId: Overload:BrightChain.Models.Blocks.Block.Dispose
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.Dispose
  nameWithType: Block.Dispose
- uid: BrightChain.Models.Blocks.Block.Equals(System.Object)
  name: Equals(Object)
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Equals_System_Object_
  commentId: M:BrightChain.Models.Blocks.Block.Equals(System.Object)
  fullName: BrightChain.Models.Blocks.Block.Equals(System.Object)
  nameWithType: Block.Equals(Object)
- uid: BrightChain.Models.Blocks.Block.Equals*
  name: Equals
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Equals_
  commentId: Overload:BrightChain.Models.Blocks.Block.Equals
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.Equals
  nameWithType: Block.Equals
- uid: BrightChain.Models.Blocks.Block.GetHashCode
  name: GetHashCode()
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_GetHashCode
  commentId: M:BrightChain.Models.Blocks.Block.GetHashCode
  fullName: BrightChain.Models.Blocks.Block.GetHashCode()
  nameWithType: Block.GetHashCode()
- uid: BrightChain.Models.Blocks.Block.GetHashCode*
  name: GetHashCode
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_GetHashCode_
  commentId: Overload:BrightChain.Models.Blocks.Block.GetHashCode
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.GetHashCode
  nameWithType: Block.GetHashCode
- uid: BrightChain.Models.Blocks.Block.HashVerified
  name: HashVerified
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_HashVerified
  commentId: P:BrightChain.Models.Blocks.Block.HashVerified
  fullName: BrightChain.Models.Blocks.Block.HashVerified
  nameWithType: Block.HashVerified
- uid: BrightChain.Models.Blocks.Block.HashVerified*
  name: HashVerified
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_HashVerified_
  commentId: Overload:BrightChain.Models.Blocks.Block.HashVerified
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.HashVerified
  nameWithType: Block.HashVerified
- uid: BrightChain.Models.Blocks.Block.Id
  name: Id
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Id
  commentId: P:BrightChain.Models.Blocks.Block.Id
  fullName: BrightChain.Models.Blocks.Block.Id
  nameWithType: Block.Id
- uid: BrightChain.Models.Blocks.Block.Id*
  name: Id
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Id_
  commentId: Overload:BrightChain.Models.Blocks.Block.Id
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.Id
  nameWithType: Block.Id
- uid: BrightChain.Models.Blocks.Block.MetaData
  name: MetaData
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_MetaData
  commentId: P:BrightChain.Models.Blocks.Block.MetaData
  fullName: BrightChain.Models.Blocks.Block.MetaData
  nameWithType: Block.MetaData
- uid: BrightChain.Models.Blocks.Block.MetaData*
  name: MetaData
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_MetaData_
  commentId: Overload:BrightChain.Models.Blocks.Block.MetaData
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.MetaData
  nameWithType: Block.MetaData
- uid: BrightChain.Models.Blocks.Block.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_NewBlock_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.Block.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.Block.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.Block.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: Block.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: Block.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.Block.NewBlock*
  name: NewBlock
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_NewBlock_
  commentId: Overload:BrightChain.Models.Blocks.Block.NewBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.NewBlock
  nameWithType: Block.NewBlock
- uid: BrightChain.Models.Blocks.Block.op_Equality(BrightChain.Models.Blocks.Block,BrightChain.Models.Blocks.Block)
  name: Equality(Block, Block)
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_op_Equality_BrightChain_Models_Blocks_Block_BrightChain_Models_Blocks_Block_
  commentId: M:BrightChain.Models.Blocks.Block.op_Equality(BrightChain.Models.Blocks.Block,BrightChain.Models.Blocks.Block)
  fullName: BrightChain.Models.Blocks.Block.Equality(BrightChain.Models.Blocks.Block, BrightChain.Models.Blocks.Block)
  nameWithType: Block.Equality(Block, Block)
- uid: BrightChain.Models.Blocks.Block.op_Equality*
  name: Equality
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_op_Equality_
  commentId: Overload:BrightChain.Models.Blocks.Block.op_Equality
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.Equality
  nameWithType: Block.Equality
- uid: BrightChain.Models.Blocks.Block.op_Inequality(BrightChain.Models.Blocks.Block,BrightChain.Models.Blocks.Block)
  name: Inequality(Block, Block)
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_op_Inequality_BrightChain_Models_Blocks_Block_BrightChain_Models_Blocks_Block_
  commentId: M:BrightChain.Models.Blocks.Block.op_Inequality(BrightChain.Models.Blocks.Block,BrightChain.Models.Blocks.Block)
  fullName: BrightChain.Models.Blocks.Block.Inequality(BrightChain.Models.Blocks.Block, BrightChain.Models.Blocks.Block)
  nameWithType: Block.Inequality(Block, Block)
- uid: BrightChain.Models.Blocks.Block.op_Inequality*
  name: Inequality
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_op_Inequality_
  commentId: Overload:BrightChain.Models.Blocks.Block.op_Inequality
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.Inequality
  nameWithType: Block.Inequality
- uid: BrightChain.Models.Blocks.Block.RedundancyContract
  name: RedundancyContract
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_RedundancyContract
  commentId: P:BrightChain.Models.Blocks.Block.RedundancyContract
  fullName: BrightChain.Models.Blocks.Block.RedundancyContract
  nameWithType: Block.RedundancyContract
- uid: BrightChain.Models.Blocks.Block.RedundancyContract*
  name: RedundancyContract
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_RedundancyContract_
  commentId: Overload:BrightChain.Models.Blocks.Block.RedundancyContract
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.RedundancyContract
  nameWithType: Block.RedundancyContract
- uid: BrightChain.Models.Blocks.Block.StorageContract
  name: StorageContract
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_StorageContract
  commentId: P:BrightChain.Models.Blocks.Block.StorageContract
  fullName: BrightChain.Models.Blocks.Block.StorageContract
  nameWithType: Block.StorageContract
- uid: BrightChain.Models.Blocks.Block.StorageContract*
  name: StorageContract
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_StorageContract_
  commentId: Overload:BrightChain.Models.Blocks.Block.StorageContract
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.StorageContract
  nameWithType: Block.StorageContract
- uid: BrightChain.Models.Blocks.Block.Validate
  name: Validate()
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Validate
  commentId: M:BrightChain.Models.Blocks.Block.Validate
  fullName: BrightChain.Models.Blocks.Block.Validate()
  nameWithType: Block.Validate()
- uid: BrightChain.Models.Blocks.Block.Validate*
  name: Validate
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_Validate_
  commentId: Overload:BrightChain.Models.Blocks.Block.Validate
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.Validate
  nameWithType: Block.Validate
- uid: BrightChain.Models.Blocks.Block.ValidationExceptions
  name: ValidationExceptions
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_ValidationExceptions
  commentId: P:BrightChain.Models.Blocks.Block.ValidationExceptions
  fullName: BrightChain.Models.Blocks.Block.ValidationExceptions
  nameWithType: Block.ValidationExceptions
- uid: BrightChain.Models.Blocks.Block.ValidationExceptions*
  name: ValidationExceptions
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_ValidationExceptions_
  commentId: Overload:BrightChain.Models.Blocks.Block.ValidationExceptions
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.ValidationExceptions
  nameWithType: Block.ValidationExceptions
- uid: BrightChain.Models.Blocks.Block.XOR(BrightChain.Models.Blocks.Block)
  name: XOR(Block)
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_XOR_BrightChain_Models_Blocks_Block_
  commentId: M:BrightChain.Models.Blocks.Block.XOR(BrightChain.Models.Blocks.Block)
  fullName: BrightChain.Models.Blocks.Block.XOR(BrightChain.Models.Blocks.Block)
  nameWithType: Block.XOR(Block)
- uid: BrightChain.Models.Blocks.Block.XOR(BrightChain.Models.Blocks.Block[])
  name: XOR(Block[])
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_XOR_BrightChain_Models_Blocks_Block___
  commentId: M:BrightChain.Models.Blocks.Block.XOR(BrightChain.Models.Blocks.Block[])
  name.vb: XOR(Block())
  fullName: BrightChain.Models.Blocks.Block.XOR(BrightChain.Models.Blocks.Block[])
  fullName.vb: BrightChain.Models.Blocks.Block.XOR(BrightChain.Models.Blocks.Block())
  nameWithType: Block.XOR(Block[])
  nameWithType.vb: Block.XOR(Block())
- uid: BrightChain.Models.Blocks.Block.XOR*
  name: XOR
  href: api/BrightChain.Models.Blocks.Block.html#BrightChain_Models_Blocks_Block_XOR_
  commentId: Overload:BrightChain.Models.Blocks.Block.XOR
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.Block.XOR
  nameWithType: Block.XOR
- uid: BrightChain.Models.Blocks.BlockHash
  name: BlockHash
  href: api/BrightChain.Models.Blocks.BlockHash.html
  commentId: T:BrightChain.Models.Blocks.BlockHash
  fullName: BrightChain.Models.Blocks.BlockHash
  nameWithType: BlockHash
- uid: BrightChain.Models.Blocks.BlockHash.#ctor(BrightChain.Enumerations.BlockSize,System.ReadOnlyMemory{System.Byte})
  name: BlockHash(BlockSize, ReadOnlyMemory<Byte>)
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash__ctor_BrightChain_Enumerations_BlockSize_System_ReadOnlyMemory_System_Byte__
  commentId: M:BrightChain.Models.Blocks.BlockHash.#ctor(BrightChain.Enumerations.BlockSize,System.ReadOnlyMemory{System.Byte})
  name.vb: BlockHash(BlockSize, ReadOnlyMemory(Of Byte))
  fullName: BrightChain.Models.Blocks.BlockHash.BlockHash(BrightChain.Enumerations.BlockSize, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: BrightChain.Models.Blocks.BlockHash.BlockHash(BrightChain.Enumerations.BlockSize, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: BlockHash.BlockHash(BlockSize, ReadOnlyMemory<Byte>)
  nameWithType.vb: BlockHash.BlockHash(BlockSize, ReadOnlyMemory(Of Byte))
- uid: BrightChain.Models.Blocks.BlockHash.#ctor(BrightChain.Models.Blocks.Block)
  name: BlockHash(Block)
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash__ctor_BrightChain_Models_Blocks_Block_
  commentId: M:BrightChain.Models.Blocks.BlockHash.#ctor(BrightChain.Models.Blocks.Block)
  fullName: BrightChain.Models.Blocks.BlockHash.BlockHash(BrightChain.Models.Blocks.Block)
  nameWithType: BlockHash.BlockHash(Block)
- uid: BrightChain.Models.Blocks.BlockHash.#ctor(System.ReadOnlyMemory{System.Byte})
  name: BlockHash(ReadOnlyMemory<Byte>)
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash__ctor_System_ReadOnlyMemory_System_Byte__
  commentId: M:BrightChain.Models.Blocks.BlockHash.#ctor(System.ReadOnlyMemory{System.Byte})
  name.vb: BlockHash(ReadOnlyMemory(Of Byte))
  fullName: BrightChain.Models.Blocks.BlockHash.BlockHash(System.ReadOnlyMemory<System.Byte>)
  fullName.vb: BrightChain.Models.Blocks.BlockHash.BlockHash(System.ReadOnlyMemory(Of System.Byte))
  nameWithType: BlockHash.BlockHash(ReadOnlyMemory<Byte>)
  nameWithType.vb: BlockHash.BlockHash(ReadOnlyMemory(Of Byte))
- uid: BrightChain.Models.Blocks.BlockHash.#ctor*
  name: BlockHash
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash__ctor_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.BlockHash
  nameWithType: BlockHash.BlockHash
- uid: BrightChain.Models.Blocks.BlockHash.BlockSize
  name: BlockSize
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_BlockSize
  commentId: P:BrightChain.Models.Blocks.BlockHash.BlockSize
  fullName: BrightChain.Models.Blocks.BlockHash.BlockSize
  nameWithType: BlockHash.BlockSize
- uid: BrightChain.Models.Blocks.BlockHash.BlockSize*
  name: BlockSize
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_BlockSize_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.BlockSize
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.BlockSize
  nameWithType: BlockHash.BlockSize
- uid: BrightChain.Models.Blocks.BlockHash.CompareTo(BrightChain.Models.Blocks.BlockHash)
  name: CompareTo(BlockHash)
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_CompareTo_BrightChain_Models_Blocks_BlockHash_
  commentId: M:BrightChain.Models.Blocks.BlockHash.CompareTo(BrightChain.Models.Blocks.BlockHash)
  fullName: BrightChain.Models.Blocks.BlockHash.CompareTo(BrightChain.Models.Blocks.BlockHash)
  nameWithType: BlockHash.CompareTo(BlockHash)
- uid: BrightChain.Models.Blocks.BlockHash.CompareTo*
  name: CompareTo
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_CompareTo_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.CompareTo
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.CompareTo
  nameWithType: BlockHash.CompareTo
- uid: BrightChain.Models.Blocks.BlockHash.Computed
  name: Computed
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_Computed
  commentId: P:BrightChain.Models.Blocks.BlockHash.Computed
  fullName: BrightChain.Models.Blocks.BlockHash.Computed
  nameWithType: BlockHash.Computed
- uid: BrightChain.Models.Blocks.BlockHash.Computed*
  name: Computed
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_Computed_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.Computed
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.Computed
  nameWithType: BlockHash.Computed
- uid: BrightChain.Models.Blocks.BlockHash.Equals(System.Object)
  name: Equals(Object)
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_Equals_System_Object_
  commentId: M:BrightChain.Models.Blocks.BlockHash.Equals(System.Object)
  fullName: BrightChain.Models.Blocks.BlockHash.Equals(System.Object)
  nameWithType: BlockHash.Equals(Object)
- uid: BrightChain.Models.Blocks.BlockHash.Equals*
  name: Equals
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_Equals_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.Equals
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.Equals
  nameWithType: BlockHash.Equals
- uid: BrightChain.Models.Blocks.BlockHash.GetHashCode
  name: GetHashCode()
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_GetHashCode
  commentId: M:BrightChain.Models.Blocks.BlockHash.GetHashCode
  fullName: BrightChain.Models.Blocks.BlockHash.GetHashCode()
  nameWithType: BlockHash.GetHashCode()
- uid: BrightChain.Models.Blocks.BlockHash.GetHashCode*
  name: GetHashCode
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_GetHashCode_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.GetHashCode
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.GetHashCode
  nameWithType: BlockHash.GetHashCode
- uid: BrightChain.Models.Blocks.BlockHash.HashBytes
  name: HashBytes
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_HashBytes
  commentId: P:BrightChain.Models.Blocks.BlockHash.HashBytes
  fullName: BrightChain.Models.Blocks.BlockHash.HashBytes
  nameWithType: BlockHash.HashBytes
- uid: BrightChain.Models.Blocks.BlockHash.HashBytes*
  name: HashBytes
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_HashBytes_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.HashBytes
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.HashBytes
  nameWithType: BlockHash.HashBytes
- uid: BrightChain.Models.Blocks.BlockHash.op_Equality(BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.BlockHash)
  name: Equality(BlockHash, BlockHash)
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_op_Equality_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_BlockHash_
  commentId: M:BrightChain.Models.Blocks.BlockHash.op_Equality(BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.BlockHash)
  fullName: BrightChain.Models.Blocks.BlockHash.Equality(BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.BlockHash)
  nameWithType: BlockHash.Equality(BlockHash, BlockHash)
- uid: BrightChain.Models.Blocks.BlockHash.op_Equality*
  name: Equality
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_op_Equality_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.op_Equality
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.Equality
  nameWithType: BlockHash.Equality
- uid: BrightChain.Models.Blocks.BlockHash.op_Inequality(BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.BlockHash)
  name: Inequality(BlockHash, BlockHash)
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_op_Inequality_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_BlockHash_
  commentId: M:BrightChain.Models.Blocks.BlockHash.op_Inequality(BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.BlockHash)
  fullName: BrightChain.Models.Blocks.BlockHash.Inequality(BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.BlockHash)
  nameWithType: BlockHash.Inequality(BlockHash, BlockHash)
- uid: BrightChain.Models.Blocks.BlockHash.op_Inequality*
  name: Inequality
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_op_Inequality_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.op_Inequality
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.Inequality
  nameWithType: BlockHash.Inequality
- uid: BrightChain.Models.Blocks.BlockHash.ToString
  name: ToString()
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_ToString
  commentId: M:BrightChain.Models.Blocks.BlockHash.ToString
  fullName: BrightChain.Models.Blocks.BlockHash.ToString()
  nameWithType: BlockHash.ToString()
- uid: BrightChain.Models.Blocks.BlockHash.ToString(System.String,System.IFormatProvider)
  name: ToString(String, IFormatProvider)
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_ToString_System_String_System_IFormatProvider_
  commentId: M:BrightChain.Models.Blocks.BlockHash.ToString(System.String,System.IFormatProvider)
  fullName: BrightChain.Models.Blocks.BlockHash.ToString(System.String, System.IFormatProvider)
  nameWithType: BlockHash.ToString(String, IFormatProvider)
- uid: BrightChain.Models.Blocks.BlockHash.ToString*
  name: ToString
  href: api/BrightChain.Models.Blocks.BlockHash.html#BrightChain_Models_Blocks_BlockHash_ToString_
  commentId: Overload:BrightChain.Models.Blocks.BlockHash.ToString
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockHash.ToString
  nameWithType: BlockHash.ToString
- uid: BrightChain.Models.Blocks.BlockSizeMap
  name: BlockSizeMap
  href: api/BrightChain.Models.Blocks.BlockSizeMap.html
  commentId: T:BrightChain.Models.Blocks.BlockSizeMap
  fullName: BrightChain.Models.Blocks.BlockSizeMap
  nameWithType: BlockSizeMap
- uid: BrightChain.Models.Blocks.BlockSizeMap.BlockSize(BrightChain.Enumerations.BlockSize)
  name: BlockSize(BlockSize)
  href: api/BrightChain.Models.Blocks.BlockSizeMap.html#BrightChain_Models_Blocks_BlockSizeMap_BlockSize_BrightChain_Enumerations_BlockSize_
  commentId: M:BrightChain.Models.Blocks.BlockSizeMap.BlockSize(BrightChain.Enumerations.BlockSize)
  fullName: BrightChain.Models.Blocks.BlockSizeMap.BlockSize(BrightChain.Enumerations.BlockSize)
  nameWithType: BlockSizeMap.BlockSize(BlockSize)
- uid: BrightChain.Models.Blocks.BlockSizeMap.BlockSize(System.Int32)
  name: BlockSize(Int32)
  href: api/BrightChain.Models.Blocks.BlockSizeMap.html#BrightChain_Models_Blocks_BlockSizeMap_BlockSize_System_Int32_
  commentId: M:BrightChain.Models.Blocks.BlockSizeMap.BlockSize(System.Int32)
  fullName: BrightChain.Models.Blocks.BlockSizeMap.BlockSize(System.Int32)
  nameWithType: BlockSizeMap.BlockSize(Int32)
- uid: BrightChain.Models.Blocks.BlockSizeMap.BlockSize*
  name: BlockSize
  href: api/BrightChain.Models.Blocks.BlockSizeMap.html#BrightChain_Models_Blocks_BlockSizeMap_BlockSize_
  commentId: Overload:BrightChain.Models.Blocks.BlockSizeMap.BlockSize
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.BlockSizeMap.BlockSize
  nameWithType: BlockSizeMap.BlockSize
- uid: BrightChain.Models.Blocks.BlockSizeMap.Map
  name: Map
  href: api/BrightChain.Models.Blocks.BlockSizeMap.html#BrightChain_Models_Blocks_BlockSizeMap_Map
  commentId: F:BrightChain.Models.Blocks.BlockSizeMap.Map
  fullName: BrightChain.Models.Blocks.BlockSizeMap.Map
  nameWithType: BlockSizeMap.Map
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock
  name: ConstituentBlockListBlock
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html
  commentId: T:BrightChain.Models.Blocks.ConstituentBlockListBlock
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock
  nameWithType: ConstituentBlockListBlock
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.#ctor(BrightChain.Models.Blocks.Block)
  name: ConstituentBlockListBlock(Block)
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock__ctor_BrightChain_Models_Blocks_Block_
  commentId: M:BrightChain.Models.Blocks.ConstituentBlockListBlock.#ctor(BrightChain.Models.Blocks.Block)
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlockListBlock(BrightChain.Models.Blocks.Block)
  nameWithType: ConstituentBlockListBlock.ConstituentBlockListBlock(Block)
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.#ctor(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType)
  name: ConstituentBlockListBlock(DateTime, DateTime, RedundancyContractType)
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock__ctor_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_
  commentId: M:BrightChain.Models.Blocks.ConstituentBlockListBlock.#ctor(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType)
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlockListBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType)
  nameWithType: ConstituentBlockListBlock.ConstituentBlockListBlock(DateTime, DateTime, RedundancyContractType)
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.#ctor*
  name: ConstituentBlockListBlock
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock__ctor_
  commentId: Overload:BrightChain.Models.Blocks.ConstituentBlockListBlock.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlockListBlock
  nameWithType: ConstituentBlockListBlock.ConstituentBlockListBlock
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlockHashes
  name: ConstituentBlockHashes
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_ConstituentBlockHashes
  commentId: P:BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlockHashes
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlockHashes
  nameWithType: ConstituentBlockListBlock.ConstituentBlockHashes
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlockHashes*
  name: ConstituentBlockHashes
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_ConstituentBlockHashes_
  commentId: Overload:BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlockHashes
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlockHashes
  nameWithType: ConstituentBlockListBlock.ConstituentBlockHashes
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlocks
  name: ConstituentBlocks
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_ConstituentBlocks
  commentId: F:BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlocks
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.ConstituentBlocks
  nameWithType: ConstituentBlockListBlock.ConstituentBlocks
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.Data
  name: Data
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_Data
  commentId: P:BrightChain.Models.Blocks.ConstituentBlockListBlock.Data
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.Data
  nameWithType: ConstituentBlockListBlock.Data
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.Data*
  name: Data
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_Data_
  commentId: Overload:BrightChain.Models.Blocks.ConstituentBlockListBlock.Data
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.Data
  nameWithType: ConstituentBlockListBlock.Data
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.Dispose
  name: Dispose()
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_Dispose
  commentId: M:BrightChain.Models.Blocks.ConstituentBlockListBlock.Dispose
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.Dispose()
  nameWithType: ConstituentBlockListBlock.Dispose()
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.Dispose*
  name: Dispose
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_Dispose_
  commentId: Overload:BrightChain.Models.Blocks.ConstituentBlockListBlock.Dispose
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.Dispose
  nameWithType: ConstituentBlockListBlock.Dispose
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_NewBlock_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.ConstituentBlockListBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.ConstituentBlockListBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: ConstituentBlockListBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: ConstituentBlockListBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.NewBlock*
  name: NewBlock
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_NewBlock_
  commentId: Overload:BrightChain.Models.Blocks.ConstituentBlockListBlock.NewBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.NewBlock
  nameWithType: ConstituentBlockListBlock.NewBlock
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.TotalCost
  name: TotalCost
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_TotalCost
  commentId: P:BrightChain.Models.Blocks.ConstituentBlockListBlock.TotalCost
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.TotalCost
  nameWithType: ConstituentBlockListBlock.TotalCost
- uid: BrightChain.Models.Blocks.ConstituentBlockListBlock.TotalCost*
  name: TotalCost
  href: api/BrightChain.Models.Blocks.ConstituentBlockListBlock.html#BrightChain_Models_Blocks_ConstituentBlockListBlock_TotalCost_
  commentId: Overload:BrightChain.Models.Blocks.ConstituentBlockListBlock.TotalCost
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.ConstituentBlockListBlock.TotalCost
  nameWithType: ConstituentBlockListBlock.TotalCost
- uid: BrightChain.Models.Blocks.DiskBlock
  name: DiskBlock
  href: api/BrightChain.Models.Blocks.DiskBlock.html
  commentId: T:BrightChain.Models.Blocks.DiskBlock
  fullName: BrightChain.Models.Blocks.DiskBlock
  nameWithType: DiskBlock
- uid: BrightChain.Models.Blocks.DiskBlock.#ctor(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}},System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: DiskBlock(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>, DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.DiskBlock.html#BrightChain_Models_Blocks_DiskBlock__ctor_BrightChain_Services_BPlusTreeCacheManager_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock_BrightChain_Helpers_BlockHashSerializer_BrightChain_Helpers_BlockSerializer_BrightChain_Models_Blocks_TransactableBlock___System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.DiskBlock.#ctor(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}},System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: DiskBlock(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)), DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.DiskBlock.DiskBlock(BrightChain.Services.BPlusTreeCacheManager<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer<BrightChain.Models.Blocks.TransactableBlock>>, System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.DiskBlock.DiskBlock(BrightChain.Services.BPlusTreeCacheManager(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer(Of BrightChain.Models.Blocks.TransactableBlock)), System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: DiskBlock.DiskBlock(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>, DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: DiskBlock.DiskBlock(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)), DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.DiskBlock.#ctor*
  name: DiskBlock
  href: api/BrightChain.Models.Blocks.DiskBlock.html#BrightChain_Models_Blocks_DiskBlock__ctor_
  commentId: Overload:BrightChain.Models.Blocks.DiskBlock.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.DiskBlock.DiskBlock
  nameWithType: DiskBlock.DiskBlock
- uid: BrightChain.Models.Blocks.DiskBlock.Dispose
  name: Dispose()
  href: api/BrightChain.Models.Blocks.DiskBlock.html#BrightChain_Models_Blocks_DiskBlock_Dispose
  commentId: M:BrightChain.Models.Blocks.DiskBlock.Dispose
  fullName: BrightChain.Models.Blocks.DiskBlock.Dispose()
  nameWithType: DiskBlock.Dispose()
- uid: BrightChain.Models.Blocks.DiskBlock.Dispose*
  name: Dispose
  href: api/BrightChain.Models.Blocks.DiskBlock.html#BrightChain_Models_Blocks_DiskBlock_Dispose_
  commentId: Overload:BrightChain.Models.Blocks.DiskBlock.Dispose
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.DiskBlock.Dispose
  nameWithType: DiskBlock.Dispose
- uid: BrightChain.Models.Blocks.DiskBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.DiskBlock.html#BrightChain_Models_Blocks_DiskBlock_NewBlock_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.DiskBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.DiskBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.DiskBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: DiskBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: DiskBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.DiskBlock.NewBlock*
  name: NewBlock
  href: api/BrightChain.Models.Blocks.DiskBlock.html#BrightChain_Models_Blocks_DiskBlock_NewBlock_
  commentId: Overload:BrightChain.Models.Blocks.DiskBlock.NewBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.DiskBlock.NewBlock
  nameWithType: DiskBlock.NewBlock
- uid: BrightChain.Models.Blocks.HashOnlyBlock
  name: HashOnlyBlock
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html
  commentId: T:BrightChain.Models.Blocks.HashOnlyBlock
  fullName: BrightChain.Models.Blocks.HashOnlyBlock
  nameWithType: HashOnlyBlock
- uid: BrightChain.Models.Blocks.HashOnlyBlock.AllowCommit
  name: AllowCommit
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_AllowCommit
  commentId: P:BrightChain.Models.Blocks.HashOnlyBlock.AllowCommit
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.AllowCommit
  nameWithType: HashOnlyBlock.AllowCommit
- uid: BrightChain.Models.Blocks.HashOnlyBlock.AllowCommit*
  name: AllowCommit
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_AllowCommit_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.AllowCommit
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.AllowCommit
  nameWithType: HashOnlyBlock.AllowCommit
- uid: BrightChain.Models.Blocks.HashOnlyBlock.BlockSize
  name: BlockSize
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_BlockSize
  commentId: P:BrightChain.Models.Blocks.HashOnlyBlock.BlockSize
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.BlockSize
  nameWithType: HashOnlyBlock.BlockSize
- uid: BrightChain.Models.Blocks.HashOnlyBlock.BlockSize*
  name: BlockSize
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_BlockSize_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.BlockSize
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.BlockSize
  nameWithType: HashOnlyBlock.BlockSize
- uid: BrightChain.Models.Blocks.HashOnlyBlock.Committed
  name: Committed
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_Committed
  commentId: P:BrightChain.Models.Blocks.HashOnlyBlock.Committed
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.Committed
  nameWithType: HashOnlyBlock.Committed
- uid: BrightChain.Models.Blocks.HashOnlyBlock.Committed*
  name: Committed
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_Committed_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.Committed
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.Committed
  nameWithType: HashOnlyBlock.Committed
- uid: BrightChain.Models.Blocks.HashOnlyBlock.CompareTo(BrightChain.Interfaces.IBlock)
  name: CompareTo(IBlock)
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_CompareTo_BrightChain_Interfaces_IBlock_
  commentId: M:BrightChain.Models.Blocks.HashOnlyBlock.CompareTo(BrightChain.Interfaces.IBlock)
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.CompareTo(BrightChain.Interfaces.IBlock)
  nameWithType: HashOnlyBlock.CompareTo(IBlock)
- uid: BrightChain.Models.Blocks.HashOnlyBlock.CompareTo*
  name: CompareTo
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_CompareTo_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.CompareTo
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.CompareTo
  nameWithType: HashOnlyBlock.CompareTo
- uid: BrightChain.Models.Blocks.HashOnlyBlock.Data
  name: Data
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_Data
  commentId: P:BrightChain.Models.Blocks.HashOnlyBlock.Data
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.Data
  nameWithType: HashOnlyBlock.Data
- uid: BrightChain.Models.Blocks.HashOnlyBlock.Data*
  name: Data
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_Data_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.Data
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.Data
  nameWithType: HashOnlyBlock.Data
- uid: BrightChain.Models.Blocks.HashOnlyBlock.Dispose
  name: Dispose()
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_Dispose
  commentId: M:BrightChain.Models.Blocks.HashOnlyBlock.Dispose
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.Dispose()
  nameWithType: HashOnlyBlock.Dispose()
- uid: BrightChain.Models.Blocks.HashOnlyBlock.Dispose*
  name: Dispose
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_Dispose_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.Dispose
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.Dispose
  nameWithType: HashOnlyBlock.Dispose
- uid: BrightChain.Models.Blocks.HashOnlyBlock.HashVerified
  name: HashVerified
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_HashVerified
  commentId: P:BrightChain.Models.Blocks.HashOnlyBlock.HashVerified
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.HashVerified
  nameWithType: HashOnlyBlock.HashVerified
- uid: BrightChain.Models.Blocks.HashOnlyBlock.HashVerified*
  name: HashVerified
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_HashVerified_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.HashVerified
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.HashVerified
  nameWithType: HashOnlyBlock.HashVerified
- uid: BrightChain.Models.Blocks.HashOnlyBlock.Id
  name: Id
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_Id
  commentId: P:BrightChain.Models.Blocks.HashOnlyBlock.Id
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.Id
  nameWithType: HashOnlyBlock.Id
- uid: BrightChain.Models.Blocks.HashOnlyBlock.Id*
  name: Id
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_Id_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.Id
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.Id
  nameWithType: HashOnlyBlock.Id
- uid: BrightChain.Models.Blocks.HashOnlyBlock.MetaData
  name: MetaData
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_MetaData
  commentId: P:BrightChain.Models.Blocks.HashOnlyBlock.MetaData
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.MetaData
  nameWithType: HashOnlyBlock.MetaData
- uid: BrightChain.Models.Blocks.HashOnlyBlock.MetaData*
  name: MetaData
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_MetaData_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.MetaData
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.MetaData
  nameWithType: HashOnlyBlock.MetaData
- uid: BrightChain.Models.Blocks.HashOnlyBlock.RedundancyContract
  name: RedundancyContract
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_RedundancyContract
  commentId: P:BrightChain.Models.Blocks.HashOnlyBlock.RedundancyContract
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.RedundancyContract
  nameWithType: HashOnlyBlock.RedundancyContract
- uid: BrightChain.Models.Blocks.HashOnlyBlock.RedundancyContract*
  name: RedundancyContract
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_RedundancyContract_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.RedundancyContract
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.RedundancyContract
  nameWithType: HashOnlyBlock.RedundancyContract
- uid: BrightChain.Models.Blocks.HashOnlyBlock.StorageContract
  name: StorageContract
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_StorageContract
  commentId: P:BrightChain.Models.Blocks.HashOnlyBlock.StorageContract
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.StorageContract
  nameWithType: HashOnlyBlock.StorageContract
- uid: BrightChain.Models.Blocks.HashOnlyBlock.StorageContract*
  name: StorageContract
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_StorageContract_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.StorageContract
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.StorageContract
  nameWithType: HashOnlyBlock.StorageContract
- uid: BrightChain.Models.Blocks.HashOnlyBlock.XOR(BrightChain.Models.Blocks.Block)
  name: XOR(Block)
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_XOR_BrightChain_Models_Blocks_Block_
  commentId: M:BrightChain.Models.Blocks.HashOnlyBlock.XOR(BrightChain.Models.Blocks.Block)
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.XOR(BrightChain.Models.Blocks.Block)
  nameWithType: HashOnlyBlock.XOR(Block)
- uid: BrightChain.Models.Blocks.HashOnlyBlock.XOR(BrightChain.Models.Blocks.Block[])
  name: XOR(Block[])
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_XOR_BrightChain_Models_Blocks_Block___
  commentId: M:BrightChain.Models.Blocks.HashOnlyBlock.XOR(BrightChain.Models.Blocks.Block[])
  name.vb: XOR(Block())
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.XOR(BrightChain.Models.Blocks.Block[])
  fullName.vb: BrightChain.Models.Blocks.HashOnlyBlock.XOR(BrightChain.Models.Blocks.Block())
  nameWithType: HashOnlyBlock.XOR(Block[])
  nameWithType.vb: HashOnlyBlock.XOR(Block())
- uid: BrightChain.Models.Blocks.HashOnlyBlock.XOR*
  name: XOR
  href: api/BrightChain.Models.Blocks.HashOnlyBlock.html#BrightChain_Models_Blocks_HashOnlyBlock_XOR_
  commentId: Overload:BrightChain.Models.Blocks.HashOnlyBlock.XOR
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.HashOnlyBlock.XOR
  nameWithType: HashOnlyBlock.XOR
- uid: BrightChain.Models.Blocks.MemoryBlock
  name: MemoryBlock
  href: api/BrightChain.Models.Blocks.MemoryBlock.html
  commentId: T:BrightChain.Models.Blocks.MemoryBlock
  fullName: BrightChain.Models.Blocks.MemoryBlock
  nameWithType: MemoryBlock
- uid: BrightChain.Models.Blocks.MemoryBlock.#ctor(BrightChain.Services.MemoryBlockCacheManager,System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: MemoryBlock(MemoryBlockCacheManager, DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.MemoryBlock.html#BrightChain_Models_Blocks_MemoryBlock__ctor_BrightChain_Services_MemoryBlockCacheManager_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.MemoryBlock.#ctor(BrightChain.Services.MemoryBlockCacheManager,System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: MemoryBlock(MemoryBlockCacheManager, DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.MemoryBlock.MemoryBlock(BrightChain.Services.MemoryBlockCacheManager, System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.MemoryBlock.MemoryBlock(BrightChain.Services.MemoryBlockCacheManager, System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: MemoryBlock.MemoryBlock(MemoryBlockCacheManager, DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: MemoryBlock.MemoryBlock(MemoryBlockCacheManager, DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.MemoryBlock.#ctor*
  name: MemoryBlock
  href: api/BrightChain.Models.Blocks.MemoryBlock.html#BrightChain_Models_Blocks_MemoryBlock__ctor_
  commentId: Overload:BrightChain.Models.Blocks.MemoryBlock.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.MemoryBlock.MemoryBlock
  nameWithType: MemoryBlock.MemoryBlock
- uid: BrightChain.Models.Blocks.MemoryBlock.Dispose
  name: Dispose()
  href: api/BrightChain.Models.Blocks.MemoryBlock.html#BrightChain_Models_Blocks_MemoryBlock_Dispose
  commentId: M:BrightChain.Models.Blocks.MemoryBlock.Dispose
  fullName: BrightChain.Models.Blocks.MemoryBlock.Dispose()
  nameWithType: MemoryBlock.Dispose()
- uid: BrightChain.Models.Blocks.MemoryBlock.Dispose*
  name: Dispose
  href: api/BrightChain.Models.Blocks.MemoryBlock.html#BrightChain_Models_Blocks_MemoryBlock_Dispose_
  commentId: Overload:BrightChain.Models.Blocks.MemoryBlock.Dispose
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.MemoryBlock.Dispose
  nameWithType: MemoryBlock.Dispose
- uid: BrightChain.Models.Blocks.MemoryBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.MemoryBlock.html#BrightChain_Models_Blocks_MemoryBlock_NewBlock_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.MemoryBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.MemoryBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.MemoryBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: MemoryBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: MemoryBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.MemoryBlock.NewBlock*
  name: NewBlock
  href: api/BrightChain.Models.Blocks.MemoryBlock.html#BrightChain_Models_Blocks_MemoryBlock_NewBlock_
  commentId: Overload:BrightChain.Models.Blocks.MemoryBlock.NewBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.MemoryBlock.NewBlock
  nameWithType: MemoryBlock.NewBlock
- uid: BrightChain.Models.Blocks.RandomizerBlock
  name: RandomizerBlock
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html
  commentId: T:BrightChain.Models.Blocks.RandomizerBlock
  fullName: BrightChain.Models.Blocks.RandomizerBlock
  nameWithType: RandomizerBlock
- uid: BrightChain.Models.Blocks.RandomizerBlock.#ctor(BrightChain.Services.BlockCacheManager,BrightChain.Enumerations.BlockSize,System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.Boolean)
  name: RandomizerBlock(BlockCacheManager, BlockSize, DateTime, DateTime, RedundancyContractType, Boolean)
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock__ctor_BrightChain_Services_BlockCacheManager_BrightChain_Enumerations_BlockSize_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_Boolean_
  commentId: M:BrightChain.Models.Blocks.RandomizerBlock.#ctor(BrightChain.Services.BlockCacheManager,BrightChain.Enumerations.BlockSize,System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.Boolean)
  fullName: BrightChain.Models.Blocks.RandomizerBlock.RandomizerBlock(BrightChain.Services.BlockCacheManager, BrightChain.Enumerations.BlockSize, System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.Boolean)
  nameWithType: RandomizerBlock.RandomizerBlock(BlockCacheManager, BlockSize, DateTime, DateTime, RedundancyContractType, Boolean)
- uid: BrightChain.Models.Blocks.RandomizerBlock.#ctor*
  name: RandomizerBlock
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock__ctor_
  commentId: Overload:BrightChain.Models.Blocks.RandomizerBlock.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.RandomizerBlock.RandomizerBlock
  nameWithType: RandomizerBlock.RandomizerBlock
- uid: BrightChain.Models.Blocks.RandomizerBlock.CompareTo(BrightChain.Models.Blocks.RandomizerBlock)
  name: CompareTo(RandomizerBlock)
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock_CompareTo_BrightChain_Models_Blocks_RandomizerBlock_
  commentId: M:BrightChain.Models.Blocks.RandomizerBlock.CompareTo(BrightChain.Models.Blocks.RandomizerBlock)
  fullName: BrightChain.Models.Blocks.RandomizerBlock.CompareTo(BrightChain.Models.Blocks.RandomizerBlock)
  nameWithType: RandomizerBlock.CompareTo(RandomizerBlock)
- uid: BrightChain.Models.Blocks.RandomizerBlock.CompareTo*
  name: CompareTo
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock_CompareTo_
  commentId: Overload:BrightChain.Models.Blocks.RandomizerBlock.CompareTo
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.RandomizerBlock.CompareTo
  nameWithType: RandomizerBlock.CompareTo
- uid: BrightChain.Models.Blocks.RandomizerBlock.Dispose
  name: Dispose()
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock_Dispose
  commentId: M:BrightChain.Models.Blocks.RandomizerBlock.Dispose
  fullName: BrightChain.Models.Blocks.RandomizerBlock.Dispose()
  nameWithType: RandomizerBlock.Dispose()
- uid: BrightChain.Models.Blocks.RandomizerBlock.Dispose*
  name: Dispose
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock_Dispose_
  commentId: Overload:BrightChain.Models.Blocks.RandomizerBlock.Dispose
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.RandomizerBlock.Dispose
  nameWithType: RandomizerBlock.Dispose
- uid: BrightChain.Models.Blocks.RandomizerBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock_NewBlock_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.RandomizerBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.RandomizerBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.RandomizerBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: RandomizerBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: RandomizerBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.RandomizerBlock.NewBlock*
  name: NewBlock
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock_NewBlock_
  commentId: Overload:BrightChain.Models.Blocks.RandomizerBlock.NewBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.RandomizerBlock.NewBlock
  nameWithType: RandomizerBlock.NewBlock
- uid: BrightChain.Models.Blocks.RandomizerBlock.NewRandomBlockData(BrightChain.Enumerations.BlockSize)
  name: NewRandomBlockData(BlockSize)
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock_NewRandomBlockData_BrightChain_Enumerations_BlockSize_
  commentId: M:BrightChain.Models.Blocks.RandomizerBlock.NewRandomBlockData(BrightChain.Enumerations.BlockSize)
  fullName: BrightChain.Models.Blocks.RandomizerBlock.NewRandomBlockData(BrightChain.Enumerations.BlockSize)
  nameWithType: RandomizerBlock.NewRandomBlockData(BlockSize)
- uid: BrightChain.Models.Blocks.RandomizerBlock.NewRandomBlockData*
  name: NewRandomBlockData
  href: api/BrightChain.Models.Blocks.RandomizerBlock.html#BrightChain_Models_Blocks_RandomizerBlock_NewRandomBlockData_
  commentId: Overload:BrightChain.Models.Blocks.RandomizerBlock.NewRandomBlockData
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.RandomizerBlock.NewRandomBlockData
  nameWithType: RandomizerBlock.NewRandomBlockData
- uid: BrightChain.Models.Blocks.RestoredBlock
  name: RestoredBlock
  href: api/BrightChain.Models.Blocks.RestoredBlock.html
  commentId: T:BrightChain.Models.Blocks.RestoredBlock
  fullName: BrightChain.Models.Blocks.RestoredBlock
  nameWithType: RestoredBlock
- uid: BrightChain.Models.Blocks.RestoredBlock.#ctor(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte})
  name: RestoredBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>)
  href: api/BrightChain.Models.Blocks.RestoredBlock.html#BrightChain_Models_Blocks_RestoredBlock__ctor_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__
  commentId: M:BrightChain.Models.Blocks.RestoredBlock.#ctor(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte})
  name.vb: RestoredBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte))
  fullName: BrightChain.Models.Blocks.RestoredBlock.RestoredBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: BrightChain.Models.Blocks.RestoredBlock.RestoredBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: RestoredBlock.RestoredBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>)
  nameWithType.vb: RestoredBlock.RestoredBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte))
- uid: BrightChain.Models.Blocks.RestoredBlock.#ctor*
  name: RestoredBlock
  href: api/BrightChain.Models.Blocks.RestoredBlock.html#BrightChain_Models_Blocks_RestoredBlock__ctor_
  commentId: Overload:BrightChain.Models.Blocks.RestoredBlock.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.RestoredBlock.RestoredBlock
  nameWithType: RestoredBlock.RestoredBlock
- uid: BrightChain.Models.Blocks.RestoredBlock.Dispose
  name: Dispose()
  href: api/BrightChain.Models.Blocks.RestoredBlock.html#BrightChain_Models_Blocks_RestoredBlock_Dispose
  commentId: M:BrightChain.Models.Blocks.RestoredBlock.Dispose
  fullName: BrightChain.Models.Blocks.RestoredBlock.Dispose()
  nameWithType: RestoredBlock.Dispose()
- uid: BrightChain.Models.Blocks.RestoredBlock.Dispose*
  name: Dispose
  href: api/BrightChain.Models.Blocks.RestoredBlock.html#BrightChain_Models_Blocks_RestoredBlock_Dispose_
  commentId: Overload:BrightChain.Models.Blocks.RestoredBlock.Dispose
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.RestoredBlock.Dispose
  nameWithType: RestoredBlock.Dispose
- uid: BrightChain.Models.Blocks.RestoredBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.RestoredBlock.html#BrightChain_Models_Blocks_RestoredBlock_NewBlock_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.RestoredBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.RestoredBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.RestoredBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: RestoredBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: RestoredBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.RestoredBlock.NewBlock*
  name: NewBlock
  href: api/BrightChain.Models.Blocks.RestoredBlock.html#BrightChain_Models_Blocks_RestoredBlock_NewBlock_
  commentId: Overload:BrightChain.Models.Blocks.RestoredBlock.NewBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.RestoredBlock.NewBlock
  nameWithType: RestoredBlock.NewBlock
- uid: BrightChain.Models.Blocks.SourceBlock
  name: SourceBlock
  href: api/BrightChain.Models.Blocks.SourceBlock.html
  commentId: T:BrightChain.Models.Blocks.SourceBlock
  fullName: BrightChain.Models.Blocks.SourceBlock
  nameWithType: SourceBlock
- uid: BrightChain.Models.Blocks.SourceBlock.#ctor(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}},System.ReadOnlyMemory{System.Byte})
  name: SourceBlock(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>, ReadOnlyMemory<Byte>)
  href: api/BrightChain.Models.Blocks.SourceBlock.html#BrightChain_Models_Blocks_SourceBlock__ctor_BrightChain_Services_BPlusTreeCacheManager_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock_BrightChain_Helpers_BlockHashSerializer_BrightChain_Helpers_BlockSerializer_BrightChain_Models_Blocks_TransactableBlock___System_ReadOnlyMemory_System_Byte__
  commentId: M:BrightChain.Models.Blocks.SourceBlock.#ctor(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}},System.ReadOnlyMemory{System.Byte})
  name.vb: SourceBlock(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)), ReadOnlyMemory(Of Byte))
  fullName: BrightChain.Models.Blocks.SourceBlock.SourceBlock(BrightChain.Services.BPlusTreeCacheManager<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer<BrightChain.Models.Blocks.TransactableBlock>>, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: BrightChain.Models.Blocks.SourceBlock.SourceBlock(BrightChain.Services.BPlusTreeCacheManager(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer(Of BrightChain.Models.Blocks.TransactableBlock)), System.ReadOnlyMemory(Of System.Byte))
  nameWithType: SourceBlock.SourceBlock(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>, ReadOnlyMemory<Byte>)
  nameWithType.vb: SourceBlock.SourceBlock(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)), ReadOnlyMemory(Of Byte))
- uid: BrightChain.Models.Blocks.SourceBlock.#ctor*
  name: SourceBlock
  href: api/BrightChain.Models.Blocks.SourceBlock.html#BrightChain_Models_Blocks_SourceBlock__ctor_
  commentId: Overload:BrightChain.Models.Blocks.SourceBlock.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.SourceBlock.SourceBlock
  nameWithType: SourceBlock.SourceBlock
- uid: BrightChain.Models.Blocks.SourceBlock.CompareTo(BrightChain.Models.Blocks.SourceBlock)
  name: CompareTo(SourceBlock)
  href: api/BrightChain.Models.Blocks.SourceBlock.html#BrightChain_Models_Blocks_SourceBlock_CompareTo_BrightChain_Models_Blocks_SourceBlock_
  commentId: M:BrightChain.Models.Blocks.SourceBlock.CompareTo(BrightChain.Models.Blocks.SourceBlock)
  fullName: BrightChain.Models.Blocks.SourceBlock.CompareTo(BrightChain.Models.Blocks.SourceBlock)
  nameWithType: SourceBlock.CompareTo(SourceBlock)
- uid: BrightChain.Models.Blocks.SourceBlock.CompareTo*
  name: CompareTo
  href: api/BrightChain.Models.Blocks.SourceBlock.html#BrightChain_Models_Blocks_SourceBlock_CompareTo_
  commentId: Overload:BrightChain.Models.Blocks.SourceBlock.CompareTo
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.SourceBlock.CompareTo
  nameWithType: SourceBlock.CompareTo
- uid: BrightChain.Models.Blocks.SourceBlock.Dispose
  name: Dispose()
  href: api/BrightChain.Models.Blocks.SourceBlock.html#BrightChain_Models_Blocks_SourceBlock_Dispose
  commentId: M:BrightChain.Models.Blocks.SourceBlock.Dispose
  fullName: BrightChain.Models.Blocks.SourceBlock.Dispose()
  nameWithType: SourceBlock.Dispose()
- uid: BrightChain.Models.Blocks.SourceBlock.Dispose*
  name: Dispose
  href: api/BrightChain.Models.Blocks.SourceBlock.html#BrightChain_Models_Blocks_SourceBlock_Dispose_
  commentId: Overload:BrightChain.Models.Blocks.SourceBlock.Dispose
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.SourceBlock.Dispose
  nameWithType: SourceBlock.Dispose
- uid: BrightChain.Models.Blocks.SourceBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.SourceBlock.html#BrightChain_Models_Blocks_SourceBlock_NewBlock_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.SourceBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.SourceBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.SourceBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: SourceBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: SourceBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.SourceBlock.NewBlock*
  name: NewBlock
  href: api/BrightChain.Models.Blocks.SourceBlock.html#BrightChain_Models_Blocks_SourceBlock_NewBlock_
  commentId: Overload:BrightChain.Models.Blocks.SourceBlock.NewBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.SourceBlock.NewBlock
  nameWithType: SourceBlock.NewBlock
- uid: BrightChain.Models.Blocks.TransactableBlock
  name: TransactableBlock
  href: api/BrightChain.Models.Blocks.TransactableBlock.html
  commentId: T:BrightChain.Models.Blocks.TransactableBlock
  fullName: BrightChain.Models.Blocks.TransactableBlock
  nameWithType: TransactableBlock
- uid: BrightChain.Models.Blocks.TransactableBlock.#ctor
  name: TransactableBlock()
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock__ctor
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.#ctor
  fullName: BrightChain.Models.Blocks.TransactableBlock.TransactableBlock()
  nameWithType: TransactableBlock.TransactableBlock()
- uid: BrightChain.Models.Blocks.TransactableBlock.#ctor(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}},System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: TransactableBlock(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>, DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock__ctor_BrightChain_Services_BPlusTreeCacheManager_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock_BrightChain_Helpers_BlockHashSerializer_BrightChain_Helpers_BlockSerializer_BrightChain_Models_Blocks_TransactableBlock___System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.#ctor(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}},System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: TransactableBlock(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)), DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.TransactableBlock.TransactableBlock(BrightChain.Services.BPlusTreeCacheManager<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer<BrightChain.Models.Blocks.TransactableBlock>>, System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.TransactableBlock.TransactableBlock(BrightChain.Services.BPlusTreeCacheManager(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer(Of BrightChain.Models.Blocks.TransactableBlock)), System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: TransactableBlock.TransactableBlock(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>, DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: TransactableBlock.TransactableBlock(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)), DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.TransactableBlock.#ctor*
  name: TransactableBlock
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock__ctor_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.TransactableBlock
  nameWithType: TransactableBlock.TransactableBlock
- uid: BrightChain.Models.Blocks.TransactableBlock.AllowCommit
  name: AllowCommit
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_AllowCommit
  commentId: P:BrightChain.Models.Blocks.TransactableBlock.AllowCommit
  fullName: BrightChain.Models.Blocks.TransactableBlock.AllowCommit
  nameWithType: TransactableBlock.AllowCommit
- uid: BrightChain.Models.Blocks.TransactableBlock.AllowCommit*
  name: AllowCommit
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_AllowCommit_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.AllowCommit
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.AllowCommit
  nameWithType: TransactableBlock.AllowCommit
- uid: BrightChain.Models.Blocks.TransactableBlock.CacheManager
  name: CacheManager
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_CacheManager
  commentId: P:BrightChain.Models.Blocks.TransactableBlock.CacheManager
  fullName: BrightChain.Models.Blocks.TransactableBlock.CacheManager
  nameWithType: TransactableBlock.CacheManager
- uid: BrightChain.Models.Blocks.TransactableBlock.CacheManager*
  name: CacheManager
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_CacheManager_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.CacheManager
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.CacheManager
  nameWithType: TransactableBlock.CacheManager
- uid: BrightChain.Models.Blocks.TransactableBlock.Commit
  name: Commit()
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Commit
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.Commit
  fullName: BrightChain.Models.Blocks.TransactableBlock.Commit()
  nameWithType: TransactableBlock.Commit()
- uid: BrightChain.Models.Blocks.TransactableBlock.Commit*
  name: Commit
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Commit_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.Commit
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.Commit
  nameWithType: TransactableBlock.Commit
- uid: BrightChain.Models.Blocks.TransactableBlock.Committed
  name: Committed
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Committed
  commentId: P:BrightChain.Models.Blocks.TransactableBlock.Committed
  fullName: BrightChain.Models.Blocks.TransactableBlock.Committed
  nameWithType: TransactableBlock.Committed
- uid: BrightChain.Models.Blocks.TransactableBlock.Committed*
  name: Committed
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Committed_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.Committed
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.Committed
  nameWithType: TransactableBlock.Committed
- uid: BrightChain.Models.Blocks.TransactableBlock.CompareTo(BrightChain.Interfaces.ITransactableBlock)
  name: CompareTo(ITransactableBlock)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_CompareTo_BrightChain_Interfaces_ITransactableBlock_
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.CompareTo(BrightChain.Interfaces.ITransactableBlock)
  fullName: BrightChain.Models.Blocks.TransactableBlock.CompareTo(BrightChain.Interfaces.ITransactableBlock)
  nameWithType: TransactableBlock.CompareTo(ITransactableBlock)
- uid: BrightChain.Models.Blocks.TransactableBlock.CompareTo(BrightChain.Models.Blocks.TransactableBlock)
  name: CompareTo(TransactableBlock)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_CompareTo_BrightChain_Models_Blocks_TransactableBlock_
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.CompareTo(BrightChain.Models.Blocks.TransactableBlock)
  fullName: BrightChain.Models.Blocks.TransactableBlock.CompareTo(BrightChain.Models.Blocks.TransactableBlock)
  nameWithType: TransactableBlock.CompareTo(TransactableBlock)
- uid: BrightChain.Models.Blocks.TransactableBlock.CompareTo*
  name: CompareTo
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_CompareTo_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.CompareTo
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.CompareTo
  nameWithType: TransactableBlock.CompareTo
- uid: BrightChain.Models.Blocks.TransactableBlock.Dispose
  name: Dispose()
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Dispose
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.Dispose
  fullName: BrightChain.Models.Blocks.TransactableBlock.Dispose()
  nameWithType: TransactableBlock.Dispose()
- uid: BrightChain.Models.Blocks.TransactableBlock.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Dispose_System_Boolean_
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.Dispose(System.Boolean)
  fullName: BrightChain.Models.Blocks.TransactableBlock.Dispose(System.Boolean)
  nameWithType: TransactableBlock.Dispose(Boolean)
- uid: BrightChain.Models.Blocks.TransactableBlock.Dispose*
  name: Dispose
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Dispose_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.Dispose
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.Dispose
  nameWithType: TransactableBlock.Dispose
- uid: BrightChain.Models.Blocks.TransactableBlock.Equals(System.Object)
  name: Equals(Object)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Equals_System_Object_
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.Equals(System.Object)
  fullName: BrightChain.Models.Blocks.TransactableBlock.Equals(System.Object)
  nameWithType: TransactableBlock.Equals(Object)
- uid: BrightChain.Models.Blocks.TransactableBlock.Equals*
  name: Equals
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Equals_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.Equals
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.Equals
  nameWithType: TransactableBlock.Equals
- uid: BrightChain.Models.Blocks.TransactableBlock.GetHashCode
  name: GetHashCode()
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_GetHashCode
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.GetHashCode
  fullName: BrightChain.Models.Blocks.TransactableBlock.GetHashCode()
  nameWithType: TransactableBlock.GetHashCode()
- uid: BrightChain.Models.Blocks.TransactableBlock.GetHashCode*
  name: GetHashCode
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_GetHashCode_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.GetHashCode
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.GetHashCode
  nameWithType: TransactableBlock.GetHashCode
- uid: BrightChain.Models.Blocks.TransactableBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_NewBlock_System_DateTime_System_DateTime_BrightChain_Enumerations_RedundancyContractType_System_ReadOnlyMemory_System_Byte__System_Boolean_
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.NewBlock(System.DateTime,System.DateTime,BrightChain.Enumerations.RedundancyContractType,System.ReadOnlyMemory{System.Byte},System.Boolean)
  name.vb: NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
  fullName: BrightChain.Models.Blocks.TransactableBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory<System.Byte>, System.Boolean)
  fullName.vb: BrightChain.Models.Blocks.TransactableBlock.NewBlock(System.DateTime, System.DateTime, BrightChain.Enumerations.RedundancyContractType, System.ReadOnlyMemory(Of System.Byte), System.Boolean)
  nameWithType: TransactableBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory<Byte>, Boolean)
  nameWithType.vb: TransactableBlock.NewBlock(DateTime, DateTime, RedundancyContractType, ReadOnlyMemory(Of Byte), Boolean)
- uid: BrightChain.Models.Blocks.TransactableBlock.NewBlock*
  name: NewBlock
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_NewBlock_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.NewBlock
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.NewBlock
  nameWithType: TransactableBlock.NewBlock
- uid: BrightChain.Models.Blocks.TransactableBlock.op_Equality(BrightChain.Models.Blocks.TransactableBlock,BrightChain.Models.Blocks.TransactableBlock)
  name: Equality(TransactableBlock, TransactableBlock)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_op_Equality_BrightChain_Models_Blocks_TransactableBlock_BrightChain_Models_Blocks_TransactableBlock_
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.op_Equality(BrightChain.Models.Blocks.TransactableBlock,BrightChain.Models.Blocks.TransactableBlock)
  fullName: BrightChain.Models.Blocks.TransactableBlock.Equality(BrightChain.Models.Blocks.TransactableBlock, BrightChain.Models.Blocks.TransactableBlock)
  nameWithType: TransactableBlock.Equality(TransactableBlock, TransactableBlock)
- uid: BrightChain.Models.Blocks.TransactableBlock.op_Equality*
  name: Equality
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_op_Equality_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.op_Equality
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.Equality
  nameWithType: TransactableBlock.Equality
- uid: BrightChain.Models.Blocks.TransactableBlock.op_Inequality(BrightChain.Models.Blocks.TransactableBlock,BrightChain.Models.Blocks.TransactableBlock)
  name: Inequality(TransactableBlock, TransactableBlock)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_op_Inequality_BrightChain_Models_Blocks_TransactableBlock_BrightChain_Models_Blocks_TransactableBlock_
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.op_Inequality(BrightChain.Models.Blocks.TransactableBlock,BrightChain.Models.Blocks.TransactableBlock)
  fullName: BrightChain.Models.Blocks.TransactableBlock.Inequality(BrightChain.Models.Blocks.TransactableBlock, BrightChain.Models.Blocks.TransactableBlock)
  nameWithType: TransactableBlock.Inequality(TransactableBlock, TransactableBlock)
- uid: BrightChain.Models.Blocks.TransactableBlock.op_Inequality*
  name: Inequality
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_op_Inequality_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.op_Inequality
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.Inequality
  nameWithType: TransactableBlock.Inequality
- uid: BrightChain.Models.Blocks.TransactableBlock.Rollback
  name: Rollback()
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Rollback
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.Rollback
  fullName: BrightChain.Models.Blocks.TransactableBlock.Rollback()
  nameWithType: TransactableBlock.Rollback()
- uid: BrightChain.Models.Blocks.TransactableBlock.Rollback*
  name: Rollback
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_Rollback_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.Rollback
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.Rollback
  nameWithType: TransactableBlock.Rollback
- uid: BrightChain.Models.Blocks.TransactableBlock.SetCacheManager(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}})
  name: SetCacheManager(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_SetCacheManager_BrightChain_Services_BPlusTreeCacheManager_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock_BrightChain_Helpers_BlockHashSerializer_BrightChain_Helpers_BlockSerializer_BrightChain_Models_Blocks_TransactableBlock___
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.SetCacheManager(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}})
  name.vb: SetCacheManager(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)))
  fullName: BrightChain.Models.Blocks.TransactableBlock.SetCacheManager(BrightChain.Services.BPlusTreeCacheManager<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer<BrightChain.Models.Blocks.TransactableBlock>>)
  fullName.vb: BrightChain.Models.Blocks.TransactableBlock.SetCacheManager(BrightChain.Services.BPlusTreeCacheManager(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer(Of BrightChain.Models.Blocks.TransactableBlock)))
  nameWithType: TransactableBlock.SetCacheManager(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>)
  nameWithType.vb: TransactableBlock.SetCacheManager(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)))
- uid: BrightChain.Models.Blocks.TransactableBlock.SetCacheManager*
  name: SetCacheManager
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_SetCacheManager_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.SetCacheManager
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.SetCacheManager
  nameWithType: TransactableBlock.SetCacheManager
- uid: BrightChain.Models.Blocks.TransactableBlock.tree
  name: tree
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_tree
  commentId: F:BrightChain.Models.Blocks.TransactableBlock.tree
  fullName: BrightChain.Models.Blocks.TransactableBlock.tree
  nameWithType: TransactableBlock.tree
- uid: BrightChain.Models.Blocks.TransactableBlock.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name: TreeIsEqual(BPlusTree<BlockHash, TransactableBlock>)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_TreeIsEqual_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name.vb: TreeIsEqual(BPlusTree(Of BlockHash, TransactableBlock))
  fullName: BrightChain.Models.Blocks.TransactableBlock.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>)
  fullName.vb: BrightChain.Models.Blocks.TransactableBlock.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock))
  nameWithType: TransactableBlock.TreeIsEqual(BPlusTree<BlockHash, TransactableBlock>)
  nameWithType.vb: TransactableBlock.TreeIsEqual(BPlusTree(Of BlockHash, TransactableBlock))
- uid: BrightChain.Models.Blocks.TransactableBlock.TreeIsEqual*
  name: TreeIsEqual
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_TreeIsEqual_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.TreeIsEqual
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.TreeIsEqual
  nameWithType: TransactableBlock.TreeIsEqual
- uid: BrightChain.Models.Blocks.TransactableBlock.TreeIsSame(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name: TreeIsSame(BPlusTree<BlockHash, TransactableBlock>)
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_TreeIsSame_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__
  commentId: M:BrightChain.Models.Blocks.TransactableBlock.TreeIsSame(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name.vb: TreeIsSame(BPlusTree(Of BlockHash, TransactableBlock))
  fullName: BrightChain.Models.Blocks.TransactableBlock.TreeIsSame(CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>)
  fullName.vb: BrightChain.Models.Blocks.TransactableBlock.TreeIsSame(CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock))
  nameWithType: TransactableBlock.TreeIsSame(BPlusTree<BlockHash, TransactableBlock>)
  nameWithType.vb: TransactableBlock.TreeIsSame(BPlusTree(Of BlockHash, TransactableBlock))
- uid: BrightChain.Models.Blocks.TransactableBlock.TreeIsSame*
  name: TreeIsSame
  href: api/BrightChain.Models.Blocks.TransactableBlock.html#BrightChain_Models_Blocks_TransactableBlock_TreeIsSame_
  commentId: Overload:BrightChain.Models.Blocks.TransactableBlock.TreeIsSame
  isSpec: "True"
  fullName: BrightChain.Models.Blocks.TransactableBlock.TreeIsSame
  nameWithType: TransactableBlock.TreeIsSame
- uid: BrightChain.Models.Contracts
  name: BrightChain.Models.Contracts
  href: api/BrightChain.Models.Contracts.html
  commentId: N:BrightChain.Models.Contracts
  fullName: BrightChain.Models.Contracts
  nameWithType: BrightChain.Models.Contracts
- uid: BrightChain.Models.Contracts.RedundancyContract
  name: RedundancyContract
  href: api/BrightChain.Models.Contracts.RedundancyContract.html
  commentId: T:BrightChain.Models.Contracts.RedundancyContract
  fullName: BrightChain.Models.Contracts.RedundancyContract
  nameWithType: RedundancyContract
- uid: BrightChain.Models.Contracts.RedundancyContract.#ctor(BrightChain.Models.Contracts.StorageDurationContract,BrightChain.Enumerations.RedundancyContractType)
  name: RedundancyContract(StorageDurationContract, RedundancyContractType)
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract__ctor_BrightChain_Models_Contracts_StorageDurationContract_BrightChain_Enumerations_RedundancyContractType_
  commentId: M:BrightChain.Models.Contracts.RedundancyContract.#ctor(BrightChain.Models.Contracts.StorageDurationContract,BrightChain.Enumerations.RedundancyContractType)
  fullName: BrightChain.Models.Contracts.RedundancyContract.RedundancyContract(BrightChain.Models.Contracts.StorageDurationContract, BrightChain.Enumerations.RedundancyContractType)
  nameWithType: RedundancyContract.RedundancyContract(StorageDurationContract, RedundancyContractType)
- uid: BrightChain.Models.Contracts.RedundancyContract.#ctor*
  name: RedundancyContract
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract__ctor_
  commentId: Overload:BrightChain.Models.Contracts.RedundancyContract.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.RedundancyContract.RedundancyContract
  nameWithType: RedundancyContract.RedundancyContract
- uid: BrightChain.Models.Contracts.RedundancyContract.ComputeCost(System.Int32,System.UInt64,BrightChain.Enumerations.RedundancyContractType)
  name: ComputeCost(Int32, UInt64, RedundancyContractType)
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_ComputeCost_System_Int32_System_UInt64_BrightChain_Enumerations_RedundancyContractType_
  commentId: M:BrightChain.Models.Contracts.RedundancyContract.ComputeCost(System.Int32,System.UInt64,BrightChain.Enumerations.RedundancyContractType)
  fullName: BrightChain.Models.Contracts.RedundancyContract.ComputeCost(System.Int32, System.UInt64, BrightChain.Enumerations.RedundancyContractType)
  nameWithType: RedundancyContract.ComputeCost(Int32, UInt64, RedundancyContractType)
- uid: BrightChain.Models.Contracts.RedundancyContract.ComputeCost*
  name: ComputeCost
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_ComputeCost_
  commentId: Overload:BrightChain.Models.Contracts.RedundancyContract.ComputeCost
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.RedundancyContract.ComputeCost
  nameWithType: RedundancyContract.ComputeCost
- uid: BrightChain.Models.Contracts.RedundancyContract.Cost
  name: Cost
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_Cost
  commentId: P:BrightChain.Models.Contracts.RedundancyContract.Cost
  fullName: BrightChain.Models.Contracts.RedundancyContract.Cost
  nameWithType: RedundancyContract.Cost
- uid: BrightChain.Models.Contracts.RedundancyContract.Cost*
  name: Cost
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_Cost_
  commentId: Overload:BrightChain.Models.Contracts.RedundancyContract.Cost
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.RedundancyContract.Cost
  nameWithType: RedundancyContract.Cost
- uid: BrightChain.Models.Contracts.RedundancyContract.Equals(BrightChain.Models.Contracts.RedundancyContract)
  name: Equals(RedundancyContract)
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_Equals_BrightChain_Models_Contracts_RedundancyContract_
  commentId: M:BrightChain.Models.Contracts.RedundancyContract.Equals(BrightChain.Models.Contracts.RedundancyContract)
  fullName: BrightChain.Models.Contracts.RedundancyContract.Equals(BrightChain.Models.Contracts.RedundancyContract)
  nameWithType: RedundancyContract.Equals(RedundancyContract)
- uid: BrightChain.Models.Contracts.RedundancyContract.Equals(System.Object)
  name: Equals(Object)
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_Equals_System_Object_
  commentId: M:BrightChain.Models.Contracts.RedundancyContract.Equals(System.Object)
  fullName: BrightChain.Models.Contracts.RedundancyContract.Equals(System.Object)
  nameWithType: RedundancyContract.Equals(Object)
- uid: BrightChain.Models.Contracts.RedundancyContract.Equals*
  name: Equals
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_Equals_
  commentId: Overload:BrightChain.Models.Contracts.RedundancyContract.Equals
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.RedundancyContract.Equals
  nameWithType: RedundancyContract.Equals
- uid: BrightChain.Models.Contracts.RedundancyContract.GetHashCode
  name: GetHashCode()
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_GetHashCode
  commentId: M:BrightChain.Models.Contracts.RedundancyContract.GetHashCode
  fullName: BrightChain.Models.Contracts.RedundancyContract.GetHashCode()
  nameWithType: RedundancyContract.GetHashCode()
- uid: BrightChain.Models.Contracts.RedundancyContract.GetHashCode*
  name: GetHashCode
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_GetHashCode_
  commentId: Overload:BrightChain.Models.Contracts.RedundancyContract.GetHashCode
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.RedundancyContract.GetHashCode
  nameWithType: RedundancyContract.GetHashCode
- uid: BrightChain.Models.Contracts.RedundancyContract.op_Equality(BrightChain.Models.Contracts.RedundancyContract,BrightChain.Models.Contracts.RedundancyContract)
  name: Equality(RedundancyContract, RedundancyContract)
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_op_Equality_BrightChain_Models_Contracts_RedundancyContract_BrightChain_Models_Contracts_RedundancyContract_
  commentId: M:BrightChain.Models.Contracts.RedundancyContract.op_Equality(BrightChain.Models.Contracts.RedundancyContract,BrightChain.Models.Contracts.RedundancyContract)
  fullName: BrightChain.Models.Contracts.RedundancyContract.Equality(BrightChain.Models.Contracts.RedundancyContract, BrightChain.Models.Contracts.RedundancyContract)
  nameWithType: RedundancyContract.Equality(RedundancyContract, RedundancyContract)
- uid: BrightChain.Models.Contracts.RedundancyContract.op_Equality*
  name: Equality
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_op_Equality_
  commentId: Overload:BrightChain.Models.Contracts.RedundancyContract.op_Equality
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.RedundancyContract.Equality
  nameWithType: RedundancyContract.Equality
- uid: BrightChain.Models.Contracts.RedundancyContract.op_Inequality(BrightChain.Models.Contracts.RedundancyContract,BrightChain.Models.Contracts.RedundancyContract)
  name: Inequality(RedundancyContract, RedundancyContract)
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_op_Inequality_BrightChain_Models_Contracts_RedundancyContract_BrightChain_Models_Contracts_RedundancyContract_
  commentId: M:BrightChain.Models.Contracts.RedundancyContract.op_Inequality(BrightChain.Models.Contracts.RedundancyContract,BrightChain.Models.Contracts.RedundancyContract)
  fullName: BrightChain.Models.Contracts.RedundancyContract.Inequality(BrightChain.Models.Contracts.RedundancyContract, BrightChain.Models.Contracts.RedundancyContract)
  nameWithType: RedundancyContract.Inequality(RedundancyContract, RedundancyContract)
- uid: BrightChain.Models.Contracts.RedundancyContract.op_Inequality*
  name: Inequality
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_op_Inequality_
  commentId: Overload:BrightChain.Models.Contracts.RedundancyContract.op_Inequality
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.RedundancyContract.Inequality
  nameWithType: RedundancyContract.Inequality
- uid: BrightChain.Models.Contracts.RedundancyContract.RedundancyContractType
  name: RedundancyContractType
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_RedundancyContractType
  commentId: F:BrightChain.Models.Contracts.RedundancyContract.RedundancyContractType
  fullName: BrightChain.Models.Contracts.RedundancyContract.RedundancyContractType
  nameWithType: RedundancyContract.RedundancyContractType
- uid: BrightChain.Models.Contracts.RedundancyContract.RedundancyDuration
  name: RedundancyDuration
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_RedundancyDuration
  commentId: P:BrightChain.Models.Contracts.RedundancyContract.RedundancyDuration
  fullName: BrightChain.Models.Contracts.RedundancyContract.RedundancyDuration
  nameWithType: RedundancyContract.RedundancyDuration
- uid: BrightChain.Models.Contracts.RedundancyContract.RedundancyDuration*
  name: RedundancyDuration
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_RedundancyDuration_
  commentId: Overload:BrightChain.Models.Contracts.RedundancyContract.RedundancyDuration
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.RedundancyContract.RedundancyDuration
  nameWithType: RedundancyContract.RedundancyDuration
- uid: BrightChain.Models.Contracts.RedundancyContract.StorageContract
  name: StorageContract
  href: api/BrightChain.Models.Contracts.RedundancyContract.html#BrightChain_Models_Contracts_RedundancyContract_StorageContract
  commentId: F:BrightChain.Models.Contracts.RedundancyContract.StorageContract
  fullName: BrightChain.Models.Contracts.RedundancyContract.StorageContract
  nameWithType: RedundancyContract.StorageContract
- uid: BrightChain.Models.Contracts.StorageDurationContract
  name: StorageDurationContract
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html
  commentId: T:BrightChain.Models.Contracts.StorageDurationContract
  fullName: BrightChain.Models.Contracts.StorageDurationContract
  nameWithType: StorageDurationContract
- uid: BrightChain.Models.Contracts.StorageDurationContract.#ctor(System.DateTime,System.DateTime,System.Int32)
  name: StorageDurationContract(DateTime, DateTime, Int32)
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract__ctor_System_DateTime_System_DateTime_System_Int32_
  commentId: M:BrightChain.Models.Contracts.StorageDurationContract.#ctor(System.DateTime,System.DateTime,System.Int32)
  fullName: BrightChain.Models.Contracts.StorageDurationContract.StorageDurationContract(System.DateTime, System.DateTime, System.Int32)
  nameWithType: StorageDurationContract.StorageDurationContract(DateTime, DateTime, Int32)
- uid: BrightChain.Models.Contracts.StorageDurationContract.#ctor*
  name: StorageDurationContract
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract__ctor_
  commentId: Overload:BrightChain.Models.Contracts.StorageDurationContract.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.StorageDurationContract.StorageDurationContract
  nameWithType: StorageDurationContract.StorageDurationContract
- uid: BrightChain.Models.Contracts.StorageDurationContract.ByteCount
  name: ByteCount
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_ByteCount
  commentId: F:BrightChain.Models.Contracts.StorageDurationContract.ByteCount
  fullName: BrightChain.Models.Contracts.StorageDurationContract.ByteCount
  nameWithType: StorageDurationContract.ByteCount
- uid: BrightChain.Models.Contracts.StorageDurationContract.ByteStorageDuration
  name: ByteStorageDuration
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_ByteStorageDuration
  commentId: P:BrightChain.Models.Contracts.StorageDurationContract.ByteStorageDuration
  fullName: BrightChain.Models.Contracts.StorageDurationContract.ByteStorageDuration
  nameWithType: StorageDurationContract.ByteStorageDuration
- uid: BrightChain.Models.Contracts.StorageDurationContract.ByteStorageDuration*
  name: ByteStorageDuration
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_ByteStorageDuration_
  commentId: Overload:BrightChain.Models.Contracts.StorageDurationContract.ByteStorageDuration
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.StorageDurationContract.ByteStorageDuration
  nameWithType: StorageDurationContract.ByteStorageDuration
- uid: BrightChain.Models.Contracts.StorageDurationContract.DoNotStore
  name: DoNotStore
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_DoNotStore
  commentId: P:BrightChain.Models.Contracts.StorageDurationContract.DoNotStore
  fullName: BrightChain.Models.Contracts.StorageDurationContract.DoNotStore
  nameWithType: StorageDurationContract.DoNotStore
- uid: BrightChain.Models.Contracts.StorageDurationContract.DoNotStore*
  name: DoNotStore
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_DoNotStore_
  commentId: Overload:BrightChain.Models.Contracts.StorageDurationContract.DoNotStore
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.StorageDurationContract.DoNotStore
  nameWithType: StorageDurationContract.DoNotStore
- uid: BrightChain.Models.Contracts.StorageDurationContract.Duration
  name: Duration
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_Duration
  commentId: P:BrightChain.Models.Contracts.StorageDurationContract.Duration
  fullName: BrightChain.Models.Contracts.StorageDurationContract.Duration
  nameWithType: StorageDurationContract.Duration
- uid: BrightChain.Models.Contracts.StorageDurationContract.Duration*
  name: Duration
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_Duration_
  commentId: Overload:BrightChain.Models.Contracts.StorageDurationContract.Duration
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.StorageDurationContract.Duration
  nameWithType: StorageDurationContract.Duration
- uid: BrightChain.Models.Contracts.StorageDurationContract.Equals(BrightChain.Models.Contracts.StorageDurationContract)
  name: Equals(StorageDurationContract)
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_Equals_BrightChain_Models_Contracts_StorageDurationContract_
  commentId: M:BrightChain.Models.Contracts.StorageDurationContract.Equals(BrightChain.Models.Contracts.StorageDurationContract)
  fullName: BrightChain.Models.Contracts.StorageDurationContract.Equals(BrightChain.Models.Contracts.StorageDurationContract)
  nameWithType: StorageDurationContract.Equals(StorageDurationContract)
- uid: BrightChain.Models.Contracts.StorageDurationContract.Equals(System.Object)
  name: Equals(Object)
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_Equals_System_Object_
  commentId: M:BrightChain.Models.Contracts.StorageDurationContract.Equals(System.Object)
  fullName: BrightChain.Models.Contracts.StorageDurationContract.Equals(System.Object)
  nameWithType: StorageDurationContract.Equals(Object)
- uid: BrightChain.Models.Contracts.StorageDurationContract.Equals*
  name: Equals
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_Equals_
  commentId: Overload:BrightChain.Models.Contracts.StorageDurationContract.Equals
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.StorageDurationContract.Equals
  nameWithType: StorageDurationContract.Equals
- uid: BrightChain.Models.Contracts.StorageDurationContract.GetHashCode
  name: GetHashCode()
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_GetHashCode
  commentId: M:BrightChain.Models.Contracts.StorageDurationContract.GetHashCode
  fullName: BrightChain.Models.Contracts.StorageDurationContract.GetHashCode()
  nameWithType: StorageDurationContract.GetHashCode()
- uid: BrightChain.Models.Contracts.StorageDurationContract.GetHashCode*
  name: GetHashCode
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_GetHashCode_
  commentId: Overload:BrightChain.Models.Contracts.StorageDurationContract.GetHashCode
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.StorageDurationContract.GetHashCode
  nameWithType: StorageDurationContract.GetHashCode
- uid: BrightChain.Models.Contracts.StorageDurationContract.KeepUntilAtLeast
  name: KeepUntilAtLeast
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_KeepUntilAtLeast
  commentId: F:BrightChain.Models.Contracts.StorageDurationContract.KeepUntilAtLeast
  fullName: BrightChain.Models.Contracts.StorageDurationContract.KeepUntilAtLeast
  nameWithType: StorageDurationContract.KeepUntilAtLeast
- uid: BrightChain.Models.Contracts.StorageDurationContract.NonExpiring
  name: NonExpiring
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_NonExpiring
  commentId: P:BrightChain.Models.Contracts.StorageDurationContract.NonExpiring
  fullName: BrightChain.Models.Contracts.StorageDurationContract.NonExpiring
  nameWithType: StorageDurationContract.NonExpiring
- uid: BrightChain.Models.Contracts.StorageDurationContract.NonExpiring*
  name: NonExpiring
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_NonExpiring_
  commentId: Overload:BrightChain.Models.Contracts.StorageDurationContract.NonExpiring
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.StorageDurationContract.NonExpiring
  nameWithType: StorageDurationContract.NonExpiring
- uid: BrightChain.Models.Contracts.StorageDurationContract.op_Equality(BrightChain.Models.Contracts.StorageDurationContract,BrightChain.Models.Contracts.StorageDurationContract)
  name: Equality(StorageDurationContract, StorageDurationContract)
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_op_Equality_BrightChain_Models_Contracts_StorageDurationContract_BrightChain_Models_Contracts_StorageDurationContract_
  commentId: M:BrightChain.Models.Contracts.StorageDurationContract.op_Equality(BrightChain.Models.Contracts.StorageDurationContract,BrightChain.Models.Contracts.StorageDurationContract)
  fullName: BrightChain.Models.Contracts.StorageDurationContract.Equality(BrightChain.Models.Contracts.StorageDurationContract, BrightChain.Models.Contracts.StorageDurationContract)
  nameWithType: StorageDurationContract.Equality(StorageDurationContract, StorageDurationContract)
- uid: BrightChain.Models.Contracts.StorageDurationContract.op_Equality*
  name: Equality
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_op_Equality_
  commentId: Overload:BrightChain.Models.Contracts.StorageDurationContract.op_Equality
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.StorageDurationContract.Equality
  nameWithType: StorageDurationContract.Equality
- uid: BrightChain.Models.Contracts.StorageDurationContract.op_Inequality(BrightChain.Models.Contracts.StorageDurationContract,BrightChain.Models.Contracts.StorageDurationContract)
  name: Inequality(StorageDurationContract, StorageDurationContract)
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_op_Inequality_BrightChain_Models_Contracts_StorageDurationContract_BrightChain_Models_Contracts_StorageDurationContract_
  commentId: M:BrightChain.Models.Contracts.StorageDurationContract.op_Inequality(BrightChain.Models.Contracts.StorageDurationContract,BrightChain.Models.Contracts.StorageDurationContract)
  fullName: BrightChain.Models.Contracts.StorageDurationContract.Inequality(BrightChain.Models.Contracts.StorageDurationContract, BrightChain.Models.Contracts.StorageDurationContract)
  nameWithType: StorageDurationContract.Inequality(StorageDurationContract, StorageDurationContract)
- uid: BrightChain.Models.Contracts.StorageDurationContract.op_Inequality*
  name: Inequality
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_op_Inequality_
  commentId: Overload:BrightChain.Models.Contracts.StorageDurationContract.op_Inequality
  isSpec: "True"
  fullName: BrightChain.Models.Contracts.StorageDurationContract.Inequality
  nameWithType: StorageDurationContract.Inequality
- uid: BrightChain.Models.Contracts.StorageDurationContract.RequestTime
  name: RequestTime
  href: api/BrightChain.Models.Contracts.StorageDurationContract.html#BrightChain_Models_Contracts_StorageDurationContract_RequestTime
  commentId: F:BrightChain.Models.Contracts.StorageDurationContract.RequestTime
  fullName: BrightChain.Models.Contracts.StorageDurationContract.RequestTime
  nameWithType: StorageDurationContract.RequestTime
- uid: BrightChain.Models.Events
  name: BrightChain.Models.Events
  href: api/BrightChain.Models.Events.html
  commentId: N:BrightChain.Models.Events
  fullName: BrightChain.Models.Events
  nameWithType: BrightChain.Models.Events
- uid: BrightChain.Models.Events.BlockEventArgs
  name: BlockEventArgs
  href: api/BrightChain.Models.Events.BlockEventArgs.html
  commentId: T:BrightChain.Models.Events.BlockEventArgs
  fullName: BrightChain.Models.Events.BlockEventArgs
  nameWithType: BlockEventArgs
- uid: BrightChain.Models.Events.BlockEventArgs.Block
  name: Block
  href: api/BrightChain.Models.Events.BlockEventArgs.html#BrightChain_Models_Events_BlockEventArgs_Block
  commentId: F:BrightChain.Models.Events.BlockEventArgs.Block
  fullName: BrightChain.Models.Events.BlockEventArgs.Block
  nameWithType: BlockEventArgs.Block
- uid: BrightChain.Models.Events.CacheEventArgs`2
  name: CacheEventArgs<Tkey, Tvalue>
  href: api/BrightChain.Models.Events.CacheEventArgs-2.html
  commentId: T:BrightChain.Models.Events.CacheEventArgs`2
  name.vb: CacheEventArgs(Of Tkey, Tvalue)
  fullName: BrightChain.Models.Events.CacheEventArgs<Tkey, Tvalue>
  fullName.vb: BrightChain.Models.Events.CacheEventArgs(Of Tkey, Tvalue)
  nameWithType: CacheEventArgs<Tkey, Tvalue>
  nameWithType.vb: CacheEventArgs(Of Tkey, Tvalue)
- uid: BrightChain.Models.Events.CacheEventArgs`2.KeyValue
  name: KeyValue
  href: api/BrightChain.Models.Events.CacheEventArgs-2.html#BrightChain_Models_Events_CacheEventArgs_2_KeyValue
  commentId: F:BrightChain.Models.Events.CacheEventArgs`2.KeyValue
  fullName: BrightChain.Models.Events.CacheEventArgs<Tkey, Tvalue>.KeyValue
  fullName.vb: BrightChain.Models.Events.CacheEventArgs(Of Tkey, Tvalue).KeyValue
  nameWithType: CacheEventArgs<Tkey, Tvalue>.KeyValue
  nameWithType.vb: CacheEventArgs(Of Tkey, Tvalue).KeyValue
- uid: BrightChain.Models.Units
  name: BrightChain.Models.Units
  href: api/BrightChain.Models.Units.html
  commentId: N:BrightChain.Models.Units
  fullName: BrightChain.Models.Units
  nameWithType: BrightChain.Models.Units
- uid: BrightChain.Models.Units.ByteStorageDuration
  name: ByteStorageDuration
  href: api/BrightChain.Models.Units.ByteStorageDuration.html
  commentId: T:BrightChain.Models.Units.ByteStorageDuration
  fullName: BrightChain.Models.Units.ByteStorageDuration
  nameWithType: ByteStorageDuration
- uid: BrightChain.Models.Units.ByteStorageDuration.#ctor(System.Int32,System.UInt64)
  name: ByteStorageDuration(Int32, UInt64)
  href: api/BrightChain.Models.Units.ByteStorageDuration.html#BrightChain_Models_Units_ByteStorageDuration__ctor_System_Int32_System_UInt64_
  commentId: M:BrightChain.Models.Units.ByteStorageDuration.#ctor(System.Int32,System.UInt64)
  fullName: BrightChain.Models.Units.ByteStorageDuration.ByteStorageDuration(System.Int32, System.UInt64)
  nameWithType: ByteStorageDuration.ByteStorageDuration(Int32, UInt64)
- uid: BrightChain.Models.Units.ByteStorageDuration.#ctor*
  name: ByteStorageDuration
  href: api/BrightChain.Models.Units.ByteStorageDuration.html#BrightChain_Models_Units_ByteStorageDuration__ctor_
  commentId: Overload:BrightChain.Models.Units.ByteStorageDuration.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Units.ByteStorageDuration.ByteStorageDuration
  nameWithType: ByteStorageDuration.ByteStorageDuration
- uid: BrightChain.Models.Units.ByteStorageRedundancyDuration
  name: ByteStorageRedundancyDuration
  href: api/BrightChain.Models.Units.ByteStorageRedundancyDuration.html
  commentId: T:BrightChain.Models.Units.ByteStorageRedundancyDuration
  fullName: BrightChain.Models.Units.ByteStorageRedundancyDuration
  nameWithType: ByteStorageRedundancyDuration
- uid: BrightChain.Models.Units.ByteStorageRedundancyDuration.#ctor(System.Int32,System.UInt64,BrightChain.Enumerations.RedundancyContractType)
  name: ByteStorageRedundancyDuration(Int32, UInt64, RedundancyContractType)
  href: api/BrightChain.Models.Units.ByteStorageRedundancyDuration.html#BrightChain_Models_Units_ByteStorageRedundancyDuration__ctor_System_Int32_System_UInt64_BrightChain_Enumerations_RedundancyContractType_
  commentId: M:BrightChain.Models.Units.ByteStorageRedundancyDuration.#ctor(System.Int32,System.UInt64,BrightChain.Enumerations.RedundancyContractType)
  fullName: BrightChain.Models.Units.ByteStorageRedundancyDuration.ByteStorageRedundancyDuration(System.Int32, System.UInt64, BrightChain.Enumerations.RedundancyContractType)
  nameWithType: ByteStorageRedundancyDuration.ByteStorageRedundancyDuration(Int32, UInt64, RedundancyContractType)
- uid: BrightChain.Models.Units.ByteStorageRedundancyDuration.#ctor*
  name: ByteStorageRedundancyDuration
  href: api/BrightChain.Models.Units.ByteStorageRedundancyDuration.html#BrightChain_Models_Units_ByteStorageRedundancyDuration__ctor_
  commentId: Overload:BrightChain.Models.Units.ByteStorageRedundancyDuration.#ctor
  isSpec: "True"
  fullName: BrightChain.Models.Units.ByteStorageRedundancyDuration.ByteStorageRedundancyDuration
  nameWithType: ByteStorageRedundancyDuration.ByteStorageRedundancyDuration
- uid: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap
  name: ByteStorageRedundancyDurationCostMap
  href: api/BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.html
  commentId: T:BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap
  fullName: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap
  nameWithType: ByteStorageRedundancyDurationCostMap
- uid: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.Cost(BrightChain.Enumerations.BlockSize,BrightChain.Enumerations.RedundancyContractType)
  name: Cost(BlockSize, RedundancyContractType)
  href: api/BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.html#BrightChain_Models_Units_ByteStorageRedundancyDurationCostMap_Cost_BrightChain_Enumerations_BlockSize_BrightChain_Enumerations_RedundancyContractType_
  commentId: M:BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.Cost(BrightChain.Enumerations.BlockSize,BrightChain.Enumerations.RedundancyContractType)
  fullName: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.Cost(BrightChain.Enumerations.BlockSize, BrightChain.Enumerations.RedundancyContractType)
  nameWithType: ByteStorageRedundancyDurationCostMap.Cost(BlockSize, RedundancyContractType)
- uid: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.Cost*
  name: Cost
  href: api/BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.html#BrightChain_Models_Units_ByteStorageRedundancyDurationCostMap_Cost_
  commentId: Overload:BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.Cost
  isSpec: "True"
  fullName: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.Cost
  nameWithType: ByteStorageRedundancyDurationCostMap.Cost
- uid: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.RedundancyMap
  name: RedundancyMap
  href: api/BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.html#BrightChain_Models_Units_ByteStorageRedundancyDurationCostMap_RedundancyMap
  commentId: F:BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.RedundancyMap
  fullName: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.RedundancyMap
  nameWithType: ByteStorageRedundancyDurationCostMap.RedundancyMap
- uid: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.SizeMap
  name: SizeMap
  href: api/BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.html#BrightChain_Models_Units_ByteStorageRedundancyDurationCostMap_SizeMap
  commentId: F:BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.SizeMap
  fullName: BrightChain.Models.Units.ByteStorageRedundancyDurationCostMap.SizeMap
  nameWithType: ByteStorageRedundancyDurationCostMap.SizeMap
- uid: BrightChain.Services
  name: BrightChain.Services
  href: api/BrightChain.Services.html
  commentId: N:BrightChain.Services
  fullName: BrightChain.Services
  nameWithType: BrightChain.Services
- uid: BrightChain.Services.BlockCacheExpirationCache`4
  name: BlockCacheExpirationCache<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  href: api/BrightChain.Services.BlockCacheExpirationCache-4.html
  commentId: T:BrightChain.Services.BlockCacheExpirationCache`4
  name.vb: BlockCacheExpirationCache(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
  fullName: BrightChain.Services.BlockCacheExpirationCache<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  fullName.vb: BrightChain.Services.BlockCacheExpirationCache(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
  nameWithType: BlockCacheExpirationCache<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  nameWithType.vb: BlockCacheExpirationCache(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
- uid: BrightChain.Services.BlockCacheExpirationCache`4.#ctor(BrightChain.Services.BPlusTreeCacheManager{`0,`1,`2,`3})
  name: BlockCacheExpirationCache(BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  href: api/BrightChain.Services.BlockCacheExpirationCache-4.html#BrightChain_Services_BlockCacheExpirationCache_4__ctor_BrightChain_Services_BPlusTreeCacheManager__0__1__2__3__
  commentId: M:BrightChain.Services.BlockCacheExpirationCache`4.#ctor(BrightChain.Services.BPlusTreeCacheManager{`0,`1,`2,`3})
  name.vb: BlockCacheExpirationCache(BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
  fullName: BrightChain.Services.BlockCacheExpirationCache<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BlockCacheExpirationCache(BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  fullName.vb: BrightChain.Services.BlockCacheExpirationCache(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BlockCacheExpirationCache(BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
  nameWithType: BlockCacheExpirationCache<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BlockCacheExpirationCache(BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  nameWithType.vb: BlockCacheExpirationCache(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BlockCacheExpirationCache(BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
- uid: BrightChain.Services.BlockCacheExpirationCache`4.#ctor*
  name: BlockCacheExpirationCache
  href: api/BrightChain.Services.BlockCacheExpirationCache-4.html#BrightChain_Services_BlockCacheExpirationCache_4__ctor_
  commentId: Overload:BrightChain.Services.BlockCacheExpirationCache`4.#ctor
  isSpec: "True"
  fullName: BrightChain.Services.BlockCacheExpirationCache<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BlockCacheExpirationCache
  fullName.vb: BrightChain.Services.BlockCacheExpirationCache(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BlockCacheExpirationCache
  nameWithType: BlockCacheExpirationCache<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BlockCacheExpirationCache
  nameWithType.vb: BlockCacheExpirationCache(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BlockCacheExpirationCache
- uid: BrightChain.Services.BlockCacheManager
  name: BlockCacheManager
  href: api/BrightChain.Services.BlockCacheManager.html
  commentId: T:BrightChain.Services.BlockCacheManager
  fullName: BrightChain.Services.BlockCacheManager
  nameWithType: BlockCacheManager
- uid: BrightChain.Services.BlockCacheManager.#ctor(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}})
  name: BlockCacheManager(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>)
  href: api/BrightChain.Services.BlockCacheManager.html#BrightChain_Services_BlockCacheManager__ctor_BrightChain_Services_BPlusTreeCacheManager_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock_BrightChain_Helpers_BlockHashSerializer_BrightChain_Helpers_BlockSerializer_BrightChain_Models_Blocks_TransactableBlock___
  commentId: M:BrightChain.Services.BlockCacheManager.#ctor(BrightChain.Services.BPlusTreeCacheManager{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock,BrightChain.Helpers.BlockHashSerializer,BrightChain.Helpers.BlockSerializer{BrightChain.Models.Blocks.TransactableBlock}})
  name.vb: BlockCacheManager(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)))
  fullName: BrightChain.Services.BlockCacheManager.BlockCacheManager(BrightChain.Services.BPlusTreeCacheManager<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer<BrightChain.Models.Blocks.TransactableBlock>>)
  fullName.vb: BrightChain.Services.BlockCacheManager.BlockCacheManager(BrightChain.Services.BPlusTreeCacheManager(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock, BrightChain.Helpers.BlockHashSerializer, BrightChain.Helpers.BlockSerializer(Of BrightChain.Models.Blocks.TransactableBlock)))
  nameWithType: BlockCacheManager.BlockCacheManager(BPlusTreeCacheManager<BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer<TransactableBlock>>)
  nameWithType.vb: BlockCacheManager.BlockCacheManager(BPlusTreeCacheManager(Of BlockHash, TransactableBlock, BlockHashSerializer, BlockSerializer(Of TransactableBlock)))
- uid: BrightChain.Services.BlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name: BlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>)
  href: api/BrightChain.Services.BlockCacheManager.html#BrightChain_Services_BlockCacheManager__ctor_Microsoft_Extensions_Logging_ILogger_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__
  commentId: M:BrightChain.Services.BlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name.vb: BlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock))
  fullName: BrightChain.Services.BlockCacheManager.BlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>)
  fullName.vb: BrightChain.Services.BlockCacheManager.BlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock))
  nameWithType: BlockCacheManager.BlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>)
  nameWithType.vb: BlockCacheManager.BlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock))
- uid: BrightChain.Services.BlockCacheManager.#ctor*
  name: BlockCacheManager
  href: api/BrightChain.Services.BlockCacheManager.html#BrightChain_Services_BlockCacheManager__ctor_
  commentId: Overload:BrightChain.Services.BlockCacheManager.#ctor
  isSpec: "True"
  fullName: BrightChain.Services.BlockCacheManager.BlockCacheManager
  nameWithType: BlockCacheManager.BlockCacheManager
- uid: BrightChain.Services.BlockCacheManager.AsBlockCacheManager
  name: AsBlockCacheManager
  href: api/BrightChain.Services.BlockCacheManager.html#BrightChain_Services_BlockCacheManager_AsBlockCacheManager
  commentId: P:BrightChain.Services.BlockCacheManager.AsBlockCacheManager
  fullName: BrightChain.Services.BlockCacheManager.AsBlockCacheManager
  nameWithType: BlockCacheManager.AsBlockCacheManager
- uid: BrightChain.Services.BlockCacheManager.AsBlockCacheManager*
  name: AsBlockCacheManager
  href: api/BrightChain.Services.BlockCacheManager.html#BrightChain_Services_BlockCacheManager_AsBlockCacheManager_
  commentId: Overload:BrightChain.Services.BlockCacheManager.AsBlockCacheManager
  isSpec: "True"
  fullName: BrightChain.Services.BlockCacheManager.AsBlockCacheManager
  nameWithType: BlockCacheManager.AsBlockCacheManager
- uid: BrightChain.Services.BlockCacheManager.Set(BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock)
  name: Set(BlockHash, TransactableBlock)
  href: api/BrightChain.Services.BlockCacheManager.html#BrightChain_Services_BlockCacheManager_Set_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock_
  commentId: M:BrightChain.Services.BlockCacheManager.Set(BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock)
  fullName: BrightChain.Services.BlockCacheManager.Set(BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock)
  nameWithType: BlockCacheManager.Set(BlockHash, TransactableBlock)
- uid: BrightChain.Services.BlockCacheManager.Set(BrightChain.Models.Blocks.TransactableBlock)
  name: Set(TransactableBlock)
  href: api/BrightChain.Services.BlockCacheManager.html#BrightChain_Services_BlockCacheManager_Set_BrightChain_Models_Blocks_TransactableBlock_
  commentId: M:BrightChain.Services.BlockCacheManager.Set(BrightChain.Models.Blocks.TransactableBlock)
  fullName: BrightChain.Services.BlockCacheManager.Set(BrightChain.Models.Blocks.TransactableBlock)
  nameWithType: BlockCacheManager.Set(TransactableBlock)
- uid: BrightChain.Services.BlockCacheManager.Set*
  name: Set
  href: api/BrightChain.Services.BlockCacheManager.html#BrightChain_Services_BlockCacheManager_Set_
  commentId: Overload:BrightChain.Services.BlockCacheManager.Set
  isSpec: "True"
  fullName: BrightChain.Services.BlockCacheManager.Set
  nameWithType: BlockCacheManager.Set
- uid: BrightChain.Services.BlockWhitener
  name: BlockWhitener
  href: api/BrightChain.Services.BlockWhitener.html
  commentId: T:BrightChain.Services.BlockWhitener
  fullName: BrightChain.Services.BlockWhitener
  nameWithType: BlockWhitener
- uid: BrightChain.Services.BlockWhitener.#ctor(BrightChain.Services.MemoryBlockCacheManager)
  name: BlockWhitener(MemoryBlockCacheManager)
  href: api/BrightChain.Services.BlockWhitener.html#BrightChain_Services_BlockWhitener__ctor_BrightChain_Services_MemoryBlockCacheManager_
  commentId: M:BrightChain.Services.BlockWhitener.#ctor(BrightChain.Services.MemoryBlockCacheManager)
  fullName: BrightChain.Services.BlockWhitener.BlockWhitener(BrightChain.Services.MemoryBlockCacheManager)
  nameWithType: BlockWhitener.BlockWhitener(MemoryBlockCacheManager)
- uid: BrightChain.Services.BlockWhitener.#ctor*
  name: BlockWhitener
  href: api/BrightChain.Services.BlockWhitener.html#BrightChain_Services_BlockWhitener__ctor_
  commentId: Overload:BrightChain.Services.BlockWhitener.#ctor
  isSpec: "True"
  fullName: BrightChain.Services.BlockWhitener.BlockWhitener
  nameWithType: BlockWhitener.BlockWhitener
- uid: BrightChain.Services.BlockWhitener.TupleCount
  name: TupleCount
  href: api/BrightChain.Services.BlockWhitener.html#BrightChain_Services_BlockWhitener_TupleCount
  commentId: P:BrightChain.Services.BlockWhitener.TupleCount
  fullName: BrightChain.Services.BlockWhitener.TupleCount
  nameWithType: BlockWhitener.TupleCount
- uid: BrightChain.Services.BlockWhitener.TupleCount*
  name: TupleCount
  href: api/BrightChain.Services.BlockWhitener.html#BrightChain_Services_BlockWhitener_TupleCount_
  commentId: Overload:BrightChain.Services.BlockWhitener.TupleCount
  isSpec: "True"
  fullName: BrightChain.Services.BlockWhitener.TupleCount
  nameWithType: BlockWhitener.TupleCount
- uid: BrightChain.Services.BlockWhitener.Whiten(BrightChain.Models.Blocks.SourceBlock)
  name: Whiten(SourceBlock)
  href: api/BrightChain.Services.BlockWhitener.html#BrightChain_Services_BlockWhitener_Whiten_BrightChain_Models_Blocks_SourceBlock_
  commentId: M:BrightChain.Services.BlockWhitener.Whiten(BrightChain.Models.Blocks.SourceBlock)
  fullName: BrightChain.Services.BlockWhitener.Whiten(BrightChain.Models.Blocks.SourceBlock)
  nameWithType: BlockWhitener.Whiten(SourceBlock)
- uid: BrightChain.Services.BlockWhitener.Whiten*
  name: Whiten
  href: api/BrightChain.Services.BlockWhitener.html#BrightChain_Services_BlockWhitener_Whiten_
  commentId: Overload:BrightChain.Services.BlockWhitener.Whiten
  isSpec: "True"
  fullName: BrightChain.Services.BlockWhitener.Whiten
  nameWithType: BlockWhitener.Whiten
- uid: BrightChain.Services.BPlusTreeCacheManager`4
  name: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html
  commentId: T:BrightChain.Services.BPlusTreeCacheManager`4
  name.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
- uid: BrightChain.Services.BPlusTreeCacheManager`4.#ctor(BrightChain.Services.BPlusTreeCacheManager{`0,`1,`2,`3})
  name: BPlusTreeCacheManager(BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4__ctor_BrightChain_Services_BPlusTreeCacheManager__0__1__2__3__
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.#ctor(BrightChain.Services.BPlusTreeCacheManager{`0,`1,`2,`3})
  name.vb: BPlusTreeCacheManager(BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BPlusTreeCacheManager(BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BPlusTreeCacheManager(BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BPlusTreeCacheManager(BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BPlusTreeCacheManager(BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
- uid: BrightChain.Services.BPlusTreeCacheManager`4.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name: BPlusTreeCacheManager(ILogger, BPlusTree<Tkey, Tvalue>)
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4__ctor_Microsoft_Extensions_Logging_ILogger_CSharpTest_Net_Collections_BPlusTree__0__1__
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name.vb: BPlusTreeCacheManager(ILogger, BPlusTree(Of Tkey, Tvalue))
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BPlusTreeCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>)
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BPlusTreeCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue))
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BPlusTreeCacheManager(ILogger, BPlusTree<Tkey, Tvalue>)
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BPlusTreeCacheManager(ILogger, BPlusTree(Of Tkey, Tvalue))
- uid: BrightChain.Services.BPlusTreeCacheManager`4.#ctor*
  name: BPlusTreeCacheManager
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4__ctor_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.#ctor
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BPlusTreeCacheManager
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BPlusTreeCacheManager
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.BPlusTreeCacheManager
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).BPlusTreeCacheManager
- uid: BrightChain.Services.BPlusTreeCacheManager`4.ApplyTreeActions(System.Action{CSharpTest.Net.Collections.BPlusTree{`0,`1}}[])
  name: ApplyTreeActions(Action<BPlusTree<Tkey, Tvalue>>[])
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_ApplyTreeActions_System_Action_CSharpTest_Net_Collections_BPlusTree__0__1_____
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.ApplyTreeActions(System.Action{CSharpTest.Net.Collections.BPlusTree{`0,`1}}[])
  name.vb: ApplyTreeActions(Action(Of BPlusTree(Of Tkey, Tvalue))())
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.ApplyTreeActions(System.Action<CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>>[])
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).ApplyTreeActions(System.Action(Of CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue))())
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.ApplyTreeActions(Action<BPlusTree<Tkey, Tvalue>>[])
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).ApplyTreeActions(Action(Of BPlusTree(Of Tkey, Tvalue))())
- uid: BrightChain.Services.BPlusTreeCacheManager`4.ApplyTreeActions*
  name: ApplyTreeActions
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_ApplyTreeActions_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.ApplyTreeActions
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.ApplyTreeActions
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).ApplyTreeActions
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.ApplyTreeActions
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).ApplyTreeActions
- uid: BrightChain.Services.BPlusTreeCacheManager`4.CacheMiss
  name: CacheMiss
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_CacheMiss
  commentId: E:BrightChain.Services.BPlusTreeCacheManager`4.CacheMiss
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.CacheMiss
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).CacheMiss
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.CacheMiss
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).CacheMiss
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Commit
  name: Commit()
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Commit
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.Commit
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Commit()
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Commit()
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Commit()
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Commit()
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Commit*
  name: Commit
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Commit_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.Commit
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Commit
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Commit
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Commit
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Commit
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Contains(`0)
  name: Contains(Tkey)
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Contains__0_
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.Contains(`0)
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Contains(Tkey)
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Contains(Tkey)
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Contains(Tkey)
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Contains(Tkey)
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Contains*
  name: Contains
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Contains_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.Contains
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Contains
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Contains
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Contains
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Contains
- uid: BrightChain.Services.BPlusTreeCacheManager`4.DefaultOptions(CSharpTest.Net.Collections.BPlusTree{`0,`1}.OptionsV2)
  name: DefaultOptions(BPlusTree<Tkey, Tvalue>.OptionsV2)
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_DefaultOptions_CSharpTest_Net_Collections_BPlusTree__0__1__OptionsV2_
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.DefaultOptions(CSharpTest.Net.Collections.BPlusTree{`0,`1}.OptionsV2)
  name.vb: DefaultOptions(BPlusTree(Of Tkey, Tvalue).OptionsV2)
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DefaultOptions(CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>.OptionsV2)
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DefaultOptions(CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue).OptionsV2)
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DefaultOptions(BPlusTree<Tkey, Tvalue>.OptionsV2)
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DefaultOptions(BPlusTree(Of Tkey, Tvalue).OptionsV2)
- uid: BrightChain.Services.BPlusTreeCacheManager`4.DefaultOptions*
  name: DefaultOptions
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_DefaultOptions_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.DefaultOptions
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DefaultOptions
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DefaultOptions
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DefaultOptions
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DefaultOptions
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Drop(`0,System.Boolean)
  name: Drop(Tkey, Boolean)
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Drop__0_System_Boolean_
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.Drop(`0,System.Boolean)
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Drop(Tkey, System.Boolean)
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Drop(Tkey, System.Boolean)
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Drop(Tkey, Boolean)
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Drop(Tkey, Boolean)
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Drop*
  name: Drop
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Drop_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.Drop
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Drop
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Drop
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Drop
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Drop
- uid: BrightChain.Services.BPlusTreeCacheManager`4.EnableCount
  name: EnableCount
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_EnableCount
  commentId: P:BrightChain.Services.BPlusTreeCacheManager`4.EnableCount
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.EnableCount
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).EnableCount
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.EnableCount
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).EnableCount
- uid: BrightChain.Services.BPlusTreeCacheManager`4.EnableCount*
  name: EnableCount
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_EnableCount_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.EnableCount
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.EnableCount
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).EnableCount
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.EnableCount
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).EnableCount
- uid: BrightChain.Services.BPlusTreeCacheManager`4.expirationCache
  name: expirationCache
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_expirationCache
  commentId: F:BrightChain.Services.BPlusTreeCacheManager`4.expirationCache
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.expirationCache
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).expirationCache
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.expirationCache
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).expirationCache
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Get(`0)
  name: Get(Tkey)
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Get__0_
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.Get(`0)
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Get(Tkey)
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Get(Tkey)
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Get(Tkey)
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Get(Tkey)
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Get*
  name: Get
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Get_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.Get
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Get
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Get
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Get
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Get
- uid: BrightChain.Services.BPlusTreeCacheManager`4.KeyAdded
  name: KeyAdded
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_KeyAdded
  commentId: E:BrightChain.Services.BPlusTreeCacheManager`4.KeyAdded
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.KeyAdded
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).KeyAdded
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.KeyAdded
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).KeyAdded
- uid: BrightChain.Services.BPlusTreeCacheManager`4.KeyRemoved
  name: KeyRemoved
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_KeyRemoved
  commentId: E:BrightChain.Services.BPlusTreeCacheManager`4.KeyRemoved
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.KeyRemoved
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).KeyRemoved
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.KeyRemoved
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).KeyRemoved
- uid: BrightChain.Services.BPlusTreeCacheManager`4.logger
  name: logger
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_logger
  commentId: F:BrightChain.Services.BPlusTreeCacheManager`4.logger
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.logger
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).logger
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.logger
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).logger
- uid: BrightChain.Services.BPlusTreeCacheManager`4.NewTransactionLogOptions
  name: NewTransactionLogOptions()
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_NewTransactionLogOptions
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.NewTransactionLogOptions
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.NewTransactionLogOptions()
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).NewTransactionLogOptions()
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.NewTransactionLogOptions()
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).NewTransactionLogOptions()
- uid: BrightChain.Services.BPlusTreeCacheManager`4.NewTransactionLogOptions*
  name: NewTransactionLogOptions
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_NewTransactionLogOptions_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.NewTransactionLogOptions
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.NewTransactionLogOptions
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).NewTransactionLogOptions
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.NewTransactionLogOptions
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).NewTransactionLogOptions
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Rollback
  name: Rollback()
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Rollback
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.Rollback
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Rollback()
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Rollback()
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Rollback()
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Rollback()
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Rollback*
  name: Rollback
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Rollback_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.Rollback
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Rollback
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Rollback
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Rollback
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Rollback
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Set(`0,`1)
  name: Set(Tkey, Tvalue)
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Set__0__1_
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.Set(`0,`1)
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Set(Tkey, Tvalue)
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Set(Tkey, Tvalue)
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Set(Tkey, Tvalue)
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Set(Tkey, Tvalue)
- uid: BrightChain.Services.BPlusTreeCacheManager`4.Set*
  name: Set
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_Set_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.Set
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Set
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Set
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.Set
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).Set
- uid: BrightChain.Services.BPlusTreeCacheManager`4.transactionLog
  name: transactionLog
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_transactionLog
  commentId: F:BrightChain.Services.BPlusTreeCacheManager`4.transactionLog
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.transactionLog
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).transactionLog
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.transactionLog
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).transactionLog
- uid: BrightChain.Services.BPlusTreeCacheManager`4.TransactionLogPath
  name: TransactionLogPath
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_TransactionLogPath
  commentId: P:BrightChain.Services.BPlusTreeCacheManager`4.TransactionLogPath
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TransactionLogPath
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TransactionLogPath
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TransactionLogPath
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TransactionLogPath
- uid: BrightChain.Services.BPlusTreeCacheManager`4.TransactionLogPath*
  name: TransactionLogPath
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_TransactionLogPath_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.TransactionLogPath
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TransactionLogPath
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TransactionLogPath
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TransactionLogPath
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TransactionLogPath
- uid: BrightChain.Services.BPlusTreeCacheManager`4.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name: TreeIsEqual(BPlusTree<Tkey, Tvalue>)
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_TreeIsEqual_CSharpTest_Net_Collections_BPlusTree__0__1__
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name.vb: TreeIsEqual(BPlusTree(Of Tkey, Tvalue))
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TreeIsEqual(CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>)
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TreeIsEqual(CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue))
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TreeIsEqual(BPlusTree<Tkey, Tvalue>)
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TreeIsEqual(BPlusTree(Of Tkey, Tvalue))
- uid: BrightChain.Services.BPlusTreeCacheManager`4.TreeIsEqual*
  name: TreeIsEqual
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_TreeIsEqual_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.TreeIsEqual
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TreeIsEqual
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TreeIsEqual
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TreeIsEqual
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TreeIsEqual
- uid: BrightChain.Services.BPlusTreeCacheManager`4.TreeIsSame(CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name: TreeIsSame(BPlusTree<Tkey, Tvalue>)
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_TreeIsSame_CSharpTest_Net_Collections_BPlusTree__0__1__
  commentId: M:BrightChain.Services.BPlusTreeCacheManager`4.TreeIsSame(CSharpTest.Net.Collections.BPlusTree{`0,`1})
  name.vb: TreeIsSame(BPlusTree(Of Tkey, Tvalue))
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TreeIsSame(CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>)
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TreeIsSame(CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue))
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TreeIsSame(BPlusTree<Tkey, Tvalue>)
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TreeIsSame(BPlusTree(Of Tkey, Tvalue))
- uid: BrightChain.Services.BPlusTreeCacheManager`4.TreeIsSame*
  name: TreeIsSame
  href: api/BrightChain.Services.BPlusTreeCacheManager-4.html#BrightChain_Services_BPlusTreeCacheManager_4_TreeIsSame_
  commentId: Overload:BrightChain.Services.BPlusTreeCacheManager`4.TreeIsSame
  isSpec: "True"
  fullName: BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TreeIsSame
  fullName.vb: BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TreeIsSame
  nameWithType: BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.TreeIsSame
  nameWithType.vb: BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).TreeIsSame
- uid: BrightChain.Services.BrightBlockService
  name: BrightBlockService
  href: api/BrightChain.Services.BrightBlockService.html
  commentId: T:BrightChain.Services.BrightBlockService
  fullName: BrightChain.Services.BrightBlockService
  nameWithType: BrightBlockService
- uid: BrightChain.Services.BrightBlockService.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  name: BrightBlockService(ILoggerFactory, IConfiguration)
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService__ctor_Microsoft_Extensions_Logging_ILoggerFactory_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:BrightChain.Services.BrightBlockService.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: BrightChain.Services.BrightBlockService.BrightBlockService(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: BrightBlockService.BrightBlockService(ILoggerFactory, IConfiguration)
- uid: BrightChain.Services.BrightBlockService.#ctor*
  name: BrightBlockService
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService__ctor_
  commentId: Overload:BrightChain.Services.BrightBlockService.#ctor
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.BrightBlockService
  nameWithType: BrightBlockService.BrightBlockService
- uid: BrightChain.Services.BrightBlockService.BeginScope(System.String,System.Object[])
  name: BeginScope(String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_BeginScope_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.BeginScope(System.String,System.Object[])
  name.vb: BeginScope(String, Object())
  fullName: BrightChain.Services.BrightBlockService.BeginScope(System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.BeginScope(System.String, System.Object())
  nameWithType: BrightBlockService.BeginScope(String, Object[])
  nameWithType.vb: BrightBlockService.BeginScope(String, Object())
- uid: BrightChain.Services.BrightBlockService.BeginScope*
  name: BeginScope
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_BeginScope_
  commentId: Overload:BrightChain.Services.BrightBlockService.BeginScope
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.BeginScope
  nameWithType: BrightBlockService.BeginScope
- uid: BrightChain.Services.BrightBlockService.BeginScope``1(``0)
  name: BeginScope<TState>(TState)
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_BeginScope__1___0_
  commentId: M:BrightChain.Services.BrightBlockService.BeginScope``1(``0)
  name.vb: BeginScope(Of TState)(TState)
  fullName: BrightChain.Services.BrightBlockService.BeginScope<TState>(TState)
  fullName.vb: BrightChain.Services.BrightBlockService.BeginScope(Of TState)(TState)
  nameWithType: BrightBlockService.BeginScope<TState>(TState)
  nameWithType.vb: BrightBlockService.BeginScope(Of TState)(TState)
- uid: BrightChain.Services.BrightBlockService.blockDiskCache
  name: blockDiskCache
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_blockDiskCache
  commentId: F:BrightChain.Services.BrightBlockService.blockDiskCache
  fullName: BrightChain.Services.BrightBlockService.blockDiskCache
  nameWithType: BrightBlockService.blockDiskCache
- uid: BrightChain.Services.BrightBlockService.blockMemoryCache
  name: blockMemoryCache
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_blockMemoryCache
  commentId: F:BrightChain.Services.BrightBlockService.blockMemoryCache
  fullName: BrightChain.Services.BrightBlockService.blockMemoryCache
  nameWithType: BrightBlockService.blockMemoryCache
- uid: BrightChain.Services.BrightBlockService.configuration
  name: configuration
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_configuration
  commentId: F:BrightChain.Services.BrightBlockService.configuration
  fullName: BrightChain.Services.BrightBlockService.configuration
  nameWithType: BrightBlockService.configuration
- uid: BrightChain.Services.BrightBlockService.DefaultOptions
  name: DefaultOptions()
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_DefaultOptions
  commentId: M:BrightChain.Services.BrightBlockService.DefaultOptions
  fullName: BrightChain.Services.BrightBlockService.DefaultOptions()
  nameWithType: BrightBlockService.DefaultOptions()
- uid: BrightChain.Services.BrightBlockService.DefaultOptions*
  name: DefaultOptions
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_DefaultOptions_
  commentId: Overload:BrightChain.Services.BrightBlockService.DefaultOptions
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.DefaultOptions
  nameWithType: BrightBlockService.DefaultOptions
- uid: BrightChain.Services.BrightBlockService.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  name: IsEnabled(LogLevel)
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_IsEnabled_Microsoft_Extensions_Logging_LogLevel_
  commentId: M:BrightChain.Services.BrightBlockService.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  fullName: BrightChain.Services.BrightBlockService.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  nameWithType: BrightBlockService.IsEnabled(LogLevel)
- uid: BrightChain.Services.BrightBlockService.IsEnabled*
  name: IsEnabled
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_IsEnabled_
  commentId: Overload:BrightChain.Services.BrightBlockService.IsEnabled
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.IsEnabled
  nameWithType: BrightBlockService.IsEnabled
- uid: BrightChain.Services.BrightBlockService.Log*
  name: Log
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_Log_
  commentId: Overload:BrightChain.Services.BrightBlockService.Log
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.Log
  nameWithType: BrightBlockService.Log
- uid: BrightChain.Services.BrightBlockService.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_Log__1_Microsoft_Extensions_Logging_LogLevel_Microsoft_Extensions_Logging_EventId___0_System_Exception_System_Func___0_System_Exception_System_String__
  commentId: M:BrightChain.Services.BrightBlockService.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullName: BrightChain.Services.BrightBlockService.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, System.String>)
  fullName.vb: BrightChain.Services.BrightBlockService.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, System.String))
  nameWithType: BrightBlockService.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  nameWithType.vb: BrightBlockService.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
- uid: BrightChain.Services.BrightBlockService.LogCritical(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name: LogCritical(EventId, Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogCritical_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogCritical(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name.vb: LogCritical(EventId, Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogCritical(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogCritical(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogCritical(EventId, Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogCritical(EventId, Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogCritical(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name: LogCritical(EventId, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogCritical_Microsoft_Extensions_Logging_EventId_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogCritical(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name.vb: LogCritical(EventId, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogCritical(Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogCritical(Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  nameWithType: BrightBlockService.LogCritical(EventId, String, Object[])
  nameWithType.vb: BrightBlockService.LogCritical(EventId, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogCritical(System.Exception,System.String,System.Object[])
  name: LogCritical(Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogCritical_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogCritical(System.Exception,System.String,System.Object[])
  name.vb: LogCritical(Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogCritical(System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogCritical(System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogCritical(Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogCritical(Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogCritical(System.String,System.Object[])
  name: LogCritical(String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogCritical_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogCritical(System.String,System.Object[])
  name.vb: LogCritical(String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogCritical(System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogCritical(System.String, System.Object())
  nameWithType: BrightBlockService.LogCritical(String, Object[])
  nameWithType.vb: BrightBlockService.LogCritical(String, Object())
- uid: BrightChain.Services.BrightBlockService.LogCritical*
  name: LogCritical
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogCritical_
  commentId: Overload:BrightChain.Services.BrightBlockService.LogCritical
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.LogCritical
  nameWithType: BrightBlockService.LogCritical
- uid: BrightChain.Services.BrightBlockService.LogDebug(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name: LogDebug(EventId, Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogDebug_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogDebug(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name.vb: LogDebug(EventId, Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogDebug(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogDebug(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogDebug(EventId, Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogDebug(EventId, Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogDebug(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name: LogDebug(EventId, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogDebug_Microsoft_Extensions_Logging_EventId_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogDebug(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name.vb: LogDebug(EventId, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogDebug(Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogDebug(Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  nameWithType: BrightBlockService.LogDebug(EventId, String, Object[])
  nameWithType.vb: BrightBlockService.LogDebug(EventId, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogDebug(System.Exception,System.String,System.Object[])
  name: LogDebug(Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogDebug_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogDebug(System.Exception,System.String,System.Object[])
  name.vb: LogDebug(Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogDebug(System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogDebug(System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogDebug(Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogDebug(Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogDebug(System.String,System.Object[])
  name: LogDebug(String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogDebug_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogDebug(System.String,System.Object[])
  name.vb: LogDebug(String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogDebug(System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogDebug(System.String, System.Object())
  nameWithType: BrightBlockService.LogDebug(String, Object[])
  nameWithType.vb: BrightBlockService.LogDebug(String, Object())
- uid: BrightChain.Services.BrightBlockService.LogDebug*
  name: LogDebug
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogDebug_
  commentId: Overload:BrightChain.Services.BrightBlockService.LogDebug
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.LogDebug
  nameWithType: BrightBlockService.LogDebug
- uid: BrightChain.Services.BrightBlockService.LogError(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name: LogError(EventId, Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogError_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogError(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name.vb: LogError(EventId, Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogError(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogError(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogError(EventId, Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogError(EventId, Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogError(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name: LogError(EventId, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogError_Microsoft_Extensions_Logging_EventId_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogError(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name.vb: LogError(EventId, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogError(Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogError(Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  nameWithType: BrightBlockService.LogError(EventId, String, Object[])
  nameWithType.vb: BrightBlockService.LogError(EventId, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogError(System.Exception,System.String,System.Object[])
  name: LogError(Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogError_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogError(System.Exception,System.String,System.Object[])
  name.vb: LogError(Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogError(System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogError(System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogError(Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogError(Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogError(System.String,System.Object[])
  name: LogError(String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogError_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogError(System.String,System.Object[])
  name.vb: LogError(String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogError(System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogError(System.String, System.Object())
  nameWithType: BrightBlockService.LogError(String, Object[])
  nameWithType.vb: BrightBlockService.LogError(String, Object())
- uid: BrightChain.Services.BrightBlockService.LogError*
  name: LogError
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogError_
  commentId: Overload:BrightChain.Services.BrightBlockService.LogError
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.LogError
  nameWithType: BrightBlockService.LogError
- uid: BrightChain.Services.BrightBlockService.logger
  name: logger
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_logger
  commentId: F:BrightChain.Services.BrightBlockService.logger
  fullName: BrightChain.Services.BrightBlockService.logger
  nameWithType: BrightBlockService.logger
- uid: BrightChain.Services.BrightBlockService.LogInformation(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name: LogInformation(EventId, Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogInformation_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogInformation(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name.vb: LogInformation(EventId, Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogInformation(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogInformation(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogInformation(EventId, Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogInformation(EventId, Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogInformation(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name: LogInformation(EventId, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogInformation_Microsoft_Extensions_Logging_EventId_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogInformation(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name.vb: LogInformation(EventId, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogInformation(Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogInformation(Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  nameWithType: BrightBlockService.LogInformation(EventId, String, Object[])
  nameWithType.vb: BrightBlockService.LogInformation(EventId, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogInformation(System.Exception,System.String,System.Object[])
  name: LogInformation(Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogInformation_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogInformation(System.Exception,System.String,System.Object[])
  name.vb: LogInformation(Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogInformation(System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogInformation(System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogInformation(Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogInformation(Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogInformation(System.String,System.Object[])
  name: LogInformation(String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogInformation_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogInformation(System.String,System.Object[])
  name.vb: LogInformation(String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogInformation(System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogInformation(System.String, System.Object())
  nameWithType: BrightBlockService.LogInformation(String, Object[])
  nameWithType.vb: BrightBlockService.LogInformation(String, Object())
- uid: BrightChain.Services.BrightBlockService.LogInformation*
  name: LogInformation
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogInformation_
  commentId: Overload:BrightChain.Services.BrightBlockService.LogInformation
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.LogInformation
  nameWithType: BrightBlockService.LogInformation
- uid: BrightChain.Services.BrightBlockService.LogTrace(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name: LogTrace(EventId, Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogTrace_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogTrace(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name.vb: LogTrace(EventId, Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogTrace(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogTrace(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogTrace(EventId, Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogTrace(EventId, Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogTrace(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name: LogTrace(EventId, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogTrace_Microsoft_Extensions_Logging_EventId_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogTrace(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name.vb: LogTrace(EventId, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogTrace(Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogTrace(Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  nameWithType: BrightBlockService.LogTrace(EventId, String, Object[])
  nameWithType.vb: BrightBlockService.LogTrace(EventId, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogTrace(System.Exception,System.String,System.Object[])
  name: LogTrace(Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogTrace_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogTrace(System.Exception,System.String,System.Object[])
  name.vb: LogTrace(Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogTrace(System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogTrace(System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogTrace(Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogTrace(Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogTrace(System.String,System.Object[])
  name: LogTrace(String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogTrace_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogTrace(System.String,System.Object[])
  name.vb: LogTrace(String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogTrace(System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogTrace(System.String, System.Object())
  nameWithType: BrightBlockService.LogTrace(String, Object[])
  nameWithType.vb: BrightBlockService.LogTrace(String, Object())
- uid: BrightChain.Services.BrightBlockService.LogTrace*
  name: LogTrace
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogTrace_
  commentId: Overload:BrightChain.Services.BrightBlockService.LogTrace
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.LogTrace
  nameWithType: BrightBlockService.LogTrace
- uid: BrightChain.Services.BrightBlockService.LogWarning(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name: LogWarning(EventId, Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogWarning_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogWarning(Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  name.vb: LogWarning(EventId, Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogWarning(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogWarning(Microsoft.Extensions.Logging.EventId, System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogWarning(EventId, Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogWarning(EventId, Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogWarning(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name: LogWarning(EventId, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogWarning_Microsoft_Extensions_Logging_EventId_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogWarning(Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  name.vb: LogWarning(EventId, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogWarning(Microsoft.Extensions.Logging.EventId, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogWarning(Microsoft.Extensions.Logging.EventId, System.String, System.Object())
  nameWithType: BrightBlockService.LogWarning(EventId, String, Object[])
  nameWithType.vb: BrightBlockService.LogWarning(EventId, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogWarning(System.Exception,System.String,System.Object[])
  name: LogWarning(Exception, String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogWarning_System_Exception_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogWarning(System.Exception,System.String,System.Object[])
  name.vb: LogWarning(Exception, String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogWarning(System.Exception, System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogWarning(System.Exception, System.String, System.Object())
  nameWithType: BrightBlockService.LogWarning(Exception, String, Object[])
  nameWithType.vb: BrightBlockService.LogWarning(Exception, String, Object())
- uid: BrightChain.Services.BrightBlockService.LogWarning(System.String,System.Object[])
  name: LogWarning(String, Object[])
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogWarning_System_String_System_Object___
  commentId: M:BrightChain.Services.BrightBlockService.LogWarning(System.String,System.Object[])
  name.vb: LogWarning(String, Object())
  fullName: BrightChain.Services.BrightBlockService.LogWarning(System.String, System.Object[])
  fullName.vb: BrightChain.Services.BrightBlockService.LogWarning(System.String, System.Object())
  nameWithType: BrightBlockService.LogWarning(String, Object[])
  nameWithType.vb: BrightBlockService.LogWarning(String, Object())
- uid: BrightChain.Services.BrightBlockService.LogWarning*
  name: LogWarning
  href: api/BrightChain.Services.BrightBlockService.html#BrightChain_Services_BrightBlockService_LogWarning_
  commentId: Overload:BrightChain.Services.BrightBlockService.LogWarning
  isSpec: "True"
  fullName: BrightChain.Services.BrightBlockService.LogWarning
  nameWithType: BrightBlockService.LogWarning
- uid: BrightChain.Services.DiskBlockCacheManager
  name: DiskBlockCacheManager
  href: api/BrightChain.Services.DiskBlockCacheManager.html
  commentId: T:BrightChain.Services.DiskBlockCacheManager
  fullName: BrightChain.Services.DiskBlockCacheManager
  nameWithType: DiskBlockCacheManager
- uid: BrightChain.Services.DiskBlockCacheManager.#ctor(BrightChain.Services.BlockCacheManager)
  name: DiskBlockCacheManager(BlockCacheManager)
  href: api/BrightChain.Services.DiskBlockCacheManager.html#BrightChain_Services_DiskBlockCacheManager__ctor_BrightChain_Services_BlockCacheManager_
  commentId: M:BrightChain.Services.DiskBlockCacheManager.#ctor(BrightChain.Services.BlockCacheManager)
  fullName: BrightChain.Services.DiskBlockCacheManager.DiskBlockCacheManager(BrightChain.Services.BlockCacheManager)
  nameWithType: DiskBlockCacheManager.DiskBlockCacheManager(BlockCacheManager)
- uid: BrightChain.Services.DiskBlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name: DiskBlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>)
  href: api/BrightChain.Services.DiskBlockCacheManager.html#BrightChain_Services_DiskBlockCacheManager__ctor_Microsoft_Extensions_Logging_ILogger_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__
  commentId: M:BrightChain.Services.DiskBlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name.vb: DiskBlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock))
  fullName: BrightChain.Services.DiskBlockCacheManager.DiskBlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>)
  fullName.vb: BrightChain.Services.DiskBlockCacheManager.DiskBlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock))
  nameWithType: DiskBlockCacheManager.DiskBlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>)
  nameWithType.vb: DiskBlockCacheManager.DiskBlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock))
- uid: BrightChain.Services.DiskBlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock}.OptionsV2)
  name: DiskBlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>.OptionsV2)
  href: api/BrightChain.Services.DiskBlockCacheManager.html#BrightChain_Services_DiskBlockCacheManager__ctor_Microsoft_Extensions_Logging_ILogger_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__OptionsV2_
  commentId: M:BrightChain.Services.DiskBlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock}.OptionsV2)
  name.vb: DiskBlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock).OptionsV2)
  fullName: BrightChain.Services.DiskBlockCacheManager.DiskBlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>.OptionsV2)
  fullName.vb: BrightChain.Services.DiskBlockCacheManager.DiskBlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock).OptionsV2)
  nameWithType: DiskBlockCacheManager.DiskBlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>.OptionsV2)
  nameWithType.vb: DiskBlockCacheManager.DiskBlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock).OptionsV2)
- uid: BrightChain.Services.DiskBlockCacheManager.#ctor*
  name: DiskBlockCacheManager
  href: api/BrightChain.Services.DiskBlockCacheManager.html#BrightChain_Services_DiskBlockCacheManager__ctor_
  commentId: Overload:BrightChain.Services.DiskBlockCacheManager.#ctor
  isSpec: "True"
  fullName: BrightChain.Services.DiskBlockCacheManager.DiskBlockCacheManager
  nameWithType: DiskBlockCacheManager.DiskBlockCacheManager
- uid: BrightChain.Services.DiskBlockCacheManager.DefaultOptions(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock}.OptionsV2)
  name: DefaultOptions(BPlusTree<BlockHash, TransactableBlock>.OptionsV2)
  href: api/BrightChain.Services.DiskBlockCacheManager.html#BrightChain_Services_DiskBlockCacheManager_DefaultOptions_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__OptionsV2_
  commentId: M:BrightChain.Services.DiskBlockCacheManager.DefaultOptions(CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock}.OptionsV2)
  name.vb: DefaultOptions(BPlusTree(Of BlockHash, TransactableBlock).OptionsV2)
  fullName: BrightChain.Services.DiskBlockCacheManager.DefaultOptions(CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>.OptionsV2)
  fullName.vb: BrightChain.Services.DiskBlockCacheManager.DefaultOptions(CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock).OptionsV2)
  nameWithType: DiskBlockCacheManager.DefaultOptions(BPlusTree<BlockHash, TransactableBlock>.OptionsV2)
  nameWithType.vb: DiskBlockCacheManager.DefaultOptions(BPlusTree(Of BlockHash, TransactableBlock).OptionsV2)
- uid: BrightChain.Services.DiskBlockCacheManager.DefaultOptions*
  name: DefaultOptions
  href: api/BrightChain.Services.DiskBlockCacheManager.html#BrightChain_Services_DiskBlockCacheManager_DefaultOptions_
  commentId: Overload:BrightChain.Services.DiskBlockCacheManager.DefaultOptions
  isSpec: "True"
  fullName: BrightChain.Services.DiskBlockCacheManager.DefaultOptions
  nameWithType: DiskBlockCacheManager.DefaultOptions
- uid: BrightChain.Services.DiskBPlusTreeCacheManager`4
  name: DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  href: api/BrightChain.Services.DiskBPlusTreeCacheManager-4.html
  commentId: T:BrightChain.Services.DiskBPlusTreeCacheManager`4
  name.vb: DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
  fullName: BrightChain.Services.DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  fullName.vb: BrightChain.Services.DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
  nameWithType: DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  nameWithType.vb: DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
- uid: BrightChain.Services.DiskBPlusTreeCacheManager`4.#ctor(BrightChain.Services.BPlusTreeCacheManager{`0,`1,`2,`3})
  name: DiskBPlusTreeCacheManager(BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  href: api/BrightChain.Services.DiskBPlusTreeCacheManager-4.html#BrightChain_Services_DiskBPlusTreeCacheManager_4__ctor_BrightChain_Services_BPlusTreeCacheManager__0__1__2__3__
  commentId: M:BrightChain.Services.DiskBPlusTreeCacheManager`4.#ctor(BrightChain.Services.BPlusTreeCacheManager{`0,`1,`2,`3})
  name.vb: DiskBPlusTreeCacheManager(BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
  fullName: BrightChain.Services.DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DiskBPlusTreeCacheManager(BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  fullName.vb: BrightChain.Services.DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DiskBPlusTreeCacheManager(BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
  nameWithType: DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DiskBPlusTreeCacheManager(BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  nameWithType.vb: DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DiskBPlusTreeCacheManager(BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
- uid: BrightChain.Services.DiskBPlusTreeCacheManager`4.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{`0,`1}.OptionsV2)
  name: DiskBPlusTreeCacheManager(ILogger, BPlusTree<Tkey, Tvalue>.OptionsV2)
  href: api/BrightChain.Services.DiskBPlusTreeCacheManager-4.html#BrightChain_Services_DiskBPlusTreeCacheManager_4__ctor_Microsoft_Extensions_Logging_ILogger_CSharpTest_Net_Collections_BPlusTree__0__1__OptionsV2_
  commentId: M:BrightChain.Services.DiskBPlusTreeCacheManager`4.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{`0,`1}.OptionsV2)
  name.vb: DiskBPlusTreeCacheManager(ILogger, BPlusTree(Of Tkey, Tvalue).OptionsV2)
  fullName: BrightChain.Services.DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DiskBPlusTreeCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>.OptionsV2)
  fullName.vb: BrightChain.Services.DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DiskBPlusTreeCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue).OptionsV2)
  nameWithType: DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DiskBPlusTreeCacheManager(ILogger, BPlusTree<Tkey, Tvalue>.OptionsV2)
  nameWithType.vb: DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DiskBPlusTreeCacheManager(ILogger, BPlusTree(Of Tkey, Tvalue).OptionsV2)
- uid: BrightChain.Services.DiskBPlusTreeCacheManager`4.#ctor*
  name: DiskBPlusTreeCacheManager
  href: api/BrightChain.Services.DiskBPlusTreeCacheManager-4.html#BrightChain_Services_DiskBPlusTreeCacheManager_4__ctor_
  commentId: Overload:BrightChain.Services.DiskBPlusTreeCacheManager`4.#ctor
  isSpec: "True"
  fullName: BrightChain.Services.DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DiskBPlusTreeCacheManager
  fullName.vb: BrightChain.Services.DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DiskBPlusTreeCacheManager
  nameWithType: DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DiskBPlusTreeCacheManager
  nameWithType.vb: DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DiskBPlusTreeCacheManager
- uid: BrightChain.Services.DiskBPlusTreeCacheManager`4.DefaultOptions(CSharpTest.Net.Collections.BPlusTree{`0,`1}.OptionsV2)
  name: DefaultOptions(BPlusTree<Tkey, Tvalue>.OptionsV2)
  href: api/BrightChain.Services.DiskBPlusTreeCacheManager-4.html#BrightChain_Services_DiskBPlusTreeCacheManager_4_DefaultOptions_CSharpTest_Net_Collections_BPlusTree__0__1__OptionsV2_
  commentId: M:BrightChain.Services.DiskBPlusTreeCacheManager`4.DefaultOptions(CSharpTest.Net.Collections.BPlusTree{`0,`1}.OptionsV2)
  name.vb: DefaultOptions(BPlusTree(Of Tkey, Tvalue).OptionsV2)
  fullName: BrightChain.Services.DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DefaultOptions(CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>.OptionsV2)
  fullName.vb: BrightChain.Services.DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DefaultOptions(CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue).OptionsV2)
  nameWithType: DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DefaultOptions(BPlusTree<Tkey, Tvalue>.OptionsV2)
  nameWithType.vb: DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DefaultOptions(BPlusTree(Of Tkey, Tvalue).OptionsV2)
- uid: BrightChain.Services.DiskBPlusTreeCacheManager`4.DefaultOptions*
  name: DefaultOptions
  href: api/BrightChain.Services.DiskBPlusTreeCacheManager-4.html#BrightChain_Services_DiskBPlusTreeCacheManager_4_DefaultOptions_
  commentId: Overload:BrightChain.Services.DiskBPlusTreeCacheManager`4.DefaultOptions
  isSpec: "True"
  fullName: BrightChain.Services.DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DefaultOptions
  fullName.vb: BrightChain.Services.DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DefaultOptions
  nameWithType: DiskBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.DefaultOptions
  nameWithType.vb: DiskBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).DefaultOptions
- uid: BrightChain.Services.MemoryBlockCacheManager
  name: MemoryBlockCacheManager
  href: api/BrightChain.Services.MemoryBlockCacheManager.html
  commentId: T:BrightChain.Services.MemoryBlockCacheManager
  fullName: BrightChain.Services.MemoryBlockCacheManager
  nameWithType: MemoryBlockCacheManager
- uid: BrightChain.Services.MemoryBlockCacheManager.#ctor(BrightChain.Services.BlockCacheManager)
  name: MemoryBlockCacheManager(BlockCacheManager)
  href: api/BrightChain.Services.MemoryBlockCacheManager.html#BrightChain_Services_MemoryBlockCacheManager__ctor_BrightChain_Services_BlockCacheManager_
  commentId: M:BrightChain.Services.MemoryBlockCacheManager.#ctor(BrightChain.Services.BlockCacheManager)
  fullName: BrightChain.Services.MemoryBlockCacheManager.MemoryBlockCacheManager(BrightChain.Services.BlockCacheManager)
  nameWithType: MemoryBlockCacheManager.MemoryBlockCacheManager(BlockCacheManager)
- uid: BrightChain.Services.MemoryBlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name: MemoryBlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>)
  href: api/BrightChain.Services.MemoryBlockCacheManager.html#BrightChain_Services_MemoryBlockCacheManager__ctor_Microsoft_Extensions_Logging_ILogger_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__
  commentId: M:BrightChain.Services.MemoryBlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock})
  name.vb: MemoryBlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock))
  fullName: BrightChain.Services.MemoryBlockCacheManager.MemoryBlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>)
  fullName.vb: BrightChain.Services.MemoryBlockCacheManager.MemoryBlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock))
  nameWithType: MemoryBlockCacheManager.MemoryBlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>)
  nameWithType.vb: MemoryBlockCacheManager.MemoryBlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock))
- uid: BrightChain.Services.MemoryBlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock}.OptionsV2)
  name: MemoryBlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>.OptionsV2)
  href: api/BrightChain.Services.MemoryBlockCacheManager.html#BrightChain_Services_MemoryBlockCacheManager__ctor_Microsoft_Extensions_Logging_ILogger_CSharpTest_Net_Collections_BPlusTree_BrightChain_Models_Blocks_BlockHash_BrightChain_Models_Blocks_TransactableBlock__OptionsV2_
  commentId: M:BrightChain.Services.MemoryBlockCacheManager.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{BrightChain.Models.Blocks.BlockHash,BrightChain.Models.Blocks.TransactableBlock}.OptionsV2)
  name.vb: MemoryBlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock).OptionsV2)
  fullName: BrightChain.Services.MemoryBlockCacheManager.MemoryBlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree<BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock>.OptionsV2)
  fullName.vb: BrightChain.Services.MemoryBlockCacheManager.MemoryBlockCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree(Of BrightChain.Models.Blocks.BlockHash, BrightChain.Models.Blocks.TransactableBlock).OptionsV2)
  nameWithType: MemoryBlockCacheManager.MemoryBlockCacheManager(ILogger, BPlusTree<BlockHash, TransactableBlock>.OptionsV2)
  nameWithType.vb: MemoryBlockCacheManager.MemoryBlockCacheManager(ILogger, BPlusTree(Of BlockHash, TransactableBlock).OptionsV2)
- uid: BrightChain.Services.MemoryBlockCacheManager.#ctor*
  name: MemoryBlockCacheManager
  href: api/BrightChain.Services.MemoryBlockCacheManager.html#BrightChain_Services_MemoryBlockCacheManager__ctor_
  commentId: Overload:BrightChain.Services.MemoryBlockCacheManager.#ctor
  isSpec: "True"
  fullName: BrightChain.Services.MemoryBlockCacheManager.MemoryBlockCacheManager
  nameWithType: MemoryBlockCacheManager.MemoryBlockCacheManager
- uid: BrightChain.Services.MemoryBPlusTreeCacheManager`4
  name: MemoryBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  href: api/BrightChain.Services.MemoryBPlusTreeCacheManager-4.html
  commentId: T:BrightChain.Services.MemoryBPlusTreeCacheManager`4
  name.vb: MemoryBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
  fullName: BrightChain.Services.MemoryBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  fullName.vb: BrightChain.Services.MemoryBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
  nameWithType: MemoryBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>
  nameWithType.vb: MemoryBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer)
- uid: BrightChain.Services.MemoryBPlusTreeCacheManager`4.#ctor(BrightChain.Services.BPlusTreeCacheManager{`0,`1,`2,`3})
  name: MemoryBPlusTreeCacheManager(BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  href: api/BrightChain.Services.MemoryBPlusTreeCacheManager-4.html#BrightChain_Services_MemoryBPlusTreeCacheManager_4__ctor_BrightChain_Services_BPlusTreeCacheManager__0__1__2__3__
  commentId: M:BrightChain.Services.MemoryBPlusTreeCacheManager`4.#ctor(BrightChain.Services.BPlusTreeCacheManager{`0,`1,`2,`3})
  name.vb: MemoryBPlusTreeCacheManager(BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
  fullName: BrightChain.Services.MemoryBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.MemoryBPlusTreeCacheManager(BrightChain.Services.BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  fullName.vb: BrightChain.Services.MemoryBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).MemoryBPlusTreeCacheManager(BrightChain.Services.BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
  nameWithType: MemoryBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.MemoryBPlusTreeCacheManager(BPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>)
  nameWithType.vb: MemoryBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).MemoryBPlusTreeCacheManager(BPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer))
- uid: BrightChain.Services.MemoryBPlusTreeCacheManager`4.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{`0,`1}.OptionsV2)
  name: MemoryBPlusTreeCacheManager(ILogger, BPlusTree<Tkey, Tvalue>.OptionsV2)
  href: api/BrightChain.Services.MemoryBPlusTreeCacheManager-4.html#BrightChain_Services_MemoryBPlusTreeCacheManager_4__ctor_Microsoft_Extensions_Logging_ILogger_CSharpTest_Net_Collections_BPlusTree__0__1__OptionsV2_
  commentId: M:BrightChain.Services.MemoryBPlusTreeCacheManager`4.#ctor(Microsoft.Extensions.Logging.ILogger,CSharpTest.Net.Collections.BPlusTree{`0,`1}.OptionsV2)
  name.vb: MemoryBPlusTreeCacheManager(ILogger, BPlusTree(Of Tkey, Tvalue).OptionsV2)
  fullName: BrightChain.Services.MemoryBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.MemoryBPlusTreeCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree<Tkey, Tvalue>.OptionsV2)
  fullName.vb: BrightChain.Services.MemoryBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).MemoryBPlusTreeCacheManager(Microsoft.Extensions.Logging.ILogger, CSharpTest.Net.Collections.BPlusTree(Of Tkey, Tvalue).OptionsV2)
  nameWithType: MemoryBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.MemoryBPlusTreeCacheManager(ILogger, BPlusTree<Tkey, Tvalue>.OptionsV2)
  nameWithType.vb: MemoryBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).MemoryBPlusTreeCacheManager(ILogger, BPlusTree(Of Tkey, Tvalue).OptionsV2)
- uid: BrightChain.Services.MemoryBPlusTreeCacheManager`4.#ctor*
  name: MemoryBPlusTreeCacheManager
  href: api/BrightChain.Services.MemoryBPlusTreeCacheManager-4.html#BrightChain_Services_MemoryBPlusTreeCacheManager_4__ctor_
  commentId: Overload:BrightChain.Services.MemoryBPlusTreeCacheManager`4.#ctor
  isSpec: "True"
  fullName: BrightChain.Services.MemoryBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.MemoryBPlusTreeCacheManager
  fullName.vb: BrightChain.Services.MemoryBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).MemoryBPlusTreeCacheManager
  nameWithType: MemoryBPlusTreeCacheManager<Tkey, Tvalue, TkeySerializer, TvalueSerializer>.MemoryBPlusTreeCacheManager
  nameWithType.vb: MemoryBPlusTreeCacheManager(Of Tkey, Tvalue, TkeySerializer, TvalueSerializer).MemoryBPlusTreeCacheManager
